//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/store/MMapDirectory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneStoreMMapDirectory")
#ifdef RESTRICT_OrgApacheLuceneStoreMMapDirectory
#define INCLUDE_ALL_OrgApacheLuceneStoreMMapDirectory 0
#else
#define INCLUDE_ALL_OrgApacheLuceneStoreMMapDirectory 1
#endif
#undef RESTRICT_OrgApacheLuceneStoreMMapDirectory

#if !defined (OrgApacheLuceneStoreMMapDirectory_) && (INCLUDE_ALL_OrgApacheLuceneStoreMMapDirectory || defined(INCLUDE_OrgApacheLuceneStoreMMapDirectory))
#define OrgApacheLuceneStoreMMapDirectory_

#define RESTRICT_OrgApacheLuceneStoreFSDirectory 1
#define INCLUDE_OrgApacheLuceneStoreFSDirectory 1
#include "org/apache/lucene/store/FSDirectory.h"

@class JavaIoFile;
@class JavaNioByteBuffer;
@class OrgApacheLuceneStoreIndexInput;
@class OrgApacheLuceneStoreLockFactory;

@interface OrgApacheLuceneStoreMMapDirectory : OrgApacheLuceneStoreFSDirectory

#pragma mark Public

- (instancetype)initWithJavaIoFile:(JavaIoFile *)path;

- (instancetype)initWithJavaIoFile:(JavaIoFile *)path
withOrgApacheLuceneStoreLockFactory:(OrgApacheLuceneStoreLockFactory *)lockFactory;

- (jint)getMaxChunkSize;

- (jboolean)getUseUnmap;

- (OrgApacheLuceneStoreIndexInput *)openInputWithNSString:(NSString *)name
                                                  withInt:(jint)bufferSize;

- (void)setMaxChunkSizeWithInt:(jint)maxChunkSize;

- (void)setUseUnmapWithBoolean:(jboolean)useUnmapHack;

#pragma mark Package-Private

- (void)cleanMappingWithJavaNioByteBuffer:(JavaNioByteBuffer *)buffer;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneStoreMMapDirectory)

inline jint OrgApacheLuceneStoreMMapDirectory_get_DEFAULT_MAX_BUFF();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint OrgApacheLuceneStoreMMapDirectory_DEFAULT_MAX_BUFF;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheLuceneStoreMMapDirectory, DEFAULT_MAX_BUFF, jint)

inline jboolean OrgApacheLuceneStoreMMapDirectory_get_UNMAP_SUPPORTED();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jboolean OrgApacheLuceneStoreMMapDirectory_UNMAP_SUPPORTED;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheLuceneStoreMMapDirectory, UNMAP_SUPPORTED, jboolean)

FOUNDATION_EXPORT void OrgApacheLuceneStoreMMapDirectory_initWithJavaIoFile_withOrgApacheLuceneStoreLockFactory_(OrgApacheLuceneStoreMMapDirectory *self, JavaIoFile *path, OrgApacheLuceneStoreLockFactory *lockFactory);

FOUNDATION_EXPORT OrgApacheLuceneStoreMMapDirectory *new_OrgApacheLuceneStoreMMapDirectory_initWithJavaIoFile_withOrgApacheLuceneStoreLockFactory_(JavaIoFile *path, OrgApacheLuceneStoreLockFactory *lockFactory) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneStoreMMapDirectory *create_OrgApacheLuceneStoreMMapDirectory_initWithJavaIoFile_withOrgApacheLuceneStoreLockFactory_(JavaIoFile *path, OrgApacheLuceneStoreLockFactory *lockFactory);

FOUNDATION_EXPORT void OrgApacheLuceneStoreMMapDirectory_initWithJavaIoFile_(OrgApacheLuceneStoreMMapDirectory *self, JavaIoFile *path);

FOUNDATION_EXPORT OrgApacheLuceneStoreMMapDirectory *new_OrgApacheLuceneStoreMMapDirectory_initWithJavaIoFile_(JavaIoFile *path) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneStoreMMapDirectory *create_OrgApacheLuceneStoreMMapDirectory_initWithJavaIoFile_(JavaIoFile *path);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneStoreMMapDirectory)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneStoreMMapDirectory")
