//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/queryParser/QueryParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueryParserQueryParser")
#ifdef RESTRICT_OrgApacheLuceneQueryParserQueryParser
#define INCLUDE_ALL_OrgApacheLuceneQueryParserQueryParser 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueryParserQueryParser 1
#endif
#undef RESTRICT_OrgApacheLuceneQueryParserQueryParser

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueryParserQueryParser_) && (INCLUDE_ALL_OrgApacheLuceneQueryParserQueryParser || defined(INCLUDE_OrgApacheLuceneQueryParserQueryParser))
#define OrgApacheLuceneQueryParserQueryParser_

#define RESTRICT_OrgApacheLuceneQueryParserQueryParserConstants 1
#define INCLUDE_OrgApacheLuceneQueryParserQueryParserConstants 1
#include "org/apache/lucene/queryParser/QueryParserConstants.h"

@class IOSObjectArray;
@class JavaTextCollator;
@class JavaUtilLocale;
@class OrgApacheLuceneAnalysisAnalyzer;
@class OrgApacheLuceneDocumentDateTools_Resolution;
@class OrgApacheLuceneIndexTerm;
@class OrgApacheLuceneQueryParserParseException;
@class OrgApacheLuceneQueryParserQueryParserTokenManager;
@class OrgApacheLuceneQueryParserQueryParser_Operator;
@class OrgApacheLuceneQueryParserToken;
@class OrgApacheLuceneSearchBooleanClause;
@class OrgApacheLuceneSearchBooleanClause_Occur;
@class OrgApacheLuceneSearchBooleanQuery;
@class OrgApacheLuceneSearchMultiPhraseQuery;
@class OrgApacheLuceneSearchMultiTermQuery_RewriteMethod;
@class OrgApacheLuceneSearchPhraseQuery;
@class OrgApacheLuceneSearchQuery;
@class OrgApacheLuceneUtilVersion;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol OrgApacheLuceneQueryParserCharStream;

@interface OrgApacheLuceneQueryParserQueryParser : NSObject < OrgApacheLuceneQueryParserQueryParserConstants > {
 @public
  jboolean lowercaseExpandedTerms_;
  OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *multiTermRewriteMethod_;
  jboolean allowLeadingWildcard_;
  jboolean enablePositionIncrements_;
  OrgApacheLuceneAnalysisAnalyzer *analyzer_;
  NSString *field_;
  jint phraseSlop_;
  jfloat fuzzyMinSim_;
  jint fuzzyPrefixLength_;
  JavaUtilLocale *locale_;
  OrgApacheLuceneDocumentDateTools_Resolution *dateResolution_;
  id<JavaUtilMap> fieldToDateResolution_;
  JavaTextCollator *rangeCollator_;
  OrgApacheLuceneQueryParserQueryParserTokenManager *token_source_;
  OrgApacheLuceneQueryParserToken *token_;
  OrgApacheLuceneQueryParserToken *jj_nt_;
}

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion
                                      withNSString:(NSString *)f
               withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)a;

- (OrgApacheLuceneSearchQuery *)ClauseWithNSString:(NSString *)field;

- (jint)Conjunction;

- (void)disable_tracing;

- (void)enable_tracing;

+ (NSString *)escapeWithNSString:(NSString *)s;

- (OrgApacheLuceneQueryParserParseException *)generateParseException;

- (jboolean)getAllowLeadingWildcard;

- (OrgApacheLuceneAnalysisAnalyzer *)getAnalyzer;

- (jboolean)getAutoGeneratePhraseQueries;

- (OrgApacheLuceneDocumentDateTools_Resolution *)getDateResolutionWithNSString:(NSString *)fieldName;

- (OrgApacheLuceneQueryParserQueryParser_Operator *)getDefaultOperator;

- (jboolean)getEnablePositionIncrements;

- (NSString *)getField;

- (jfloat)getFuzzyMinSim;

- (jint)getFuzzyPrefixLength;

- (JavaUtilLocale *)getLocale;

- (jboolean)getLowercaseExpandedTerms;

- (OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *)getMultiTermRewriteMethod;

- (OrgApacheLuceneQueryParserToken *)getNextToken;

- (jint)getPhraseSlop;

- (JavaTextCollator *)getRangeCollator;

- (OrgApacheLuceneQueryParserToken *)getTokenWithInt:(jint)index;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (jint)Modifiers;

- (OrgApacheLuceneSearchQuery *)parseWithNSString:(NSString *)query;

- (OrgApacheLuceneSearchQuery *)QueryWithNSString:(NSString *)field;

- (void)ReInitWithOrgApacheLuceneQueryParserCharStream:(id<OrgApacheLuceneQueryParserCharStream>)stream;

- (void)ReInitWithOrgApacheLuceneQueryParserQueryParserTokenManager:(OrgApacheLuceneQueryParserQueryParserTokenManager *)tm;

- (void)setAllowLeadingWildcardWithBoolean:(jboolean)allowLeadingWildcard;

- (void)setAutoGeneratePhraseQueriesWithBoolean:(jboolean)value;

- (void)setDateResolutionWithOrgApacheLuceneDocumentDateTools_Resolution:(OrgApacheLuceneDocumentDateTools_Resolution *)dateResolution;

- (void)setDateResolutionWithNSString:(NSString *)fieldName
withOrgApacheLuceneDocumentDateTools_Resolution:(OrgApacheLuceneDocumentDateTools_Resolution *)dateResolution;

- (void)setDefaultOperatorWithOrgApacheLuceneQueryParserQueryParser_Operator:(OrgApacheLuceneQueryParserQueryParser_Operator *)op;

- (void)setEnablePositionIncrementsWithBoolean:(jboolean)enable;

- (void)setFuzzyMinSimWithFloat:(jfloat)fuzzyMinSim;

- (void)setFuzzyPrefixLengthWithInt:(jint)fuzzyPrefixLength;

- (void)setLocaleWithJavaUtilLocale:(JavaUtilLocale *)locale;

- (void)setLowercaseExpandedTermsWithBoolean:(jboolean)lowercaseExpandedTerms;

- (void)setMultiTermRewriteMethodWithOrgApacheLuceneSearchMultiTermQuery_RewriteMethod:(OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *)method;

- (void)setPhraseSlopWithInt:(jint)phraseSlop;

- (void)setRangeCollatorWithJavaTextCollator:(JavaTextCollator *)rc;

- (OrgApacheLuceneSearchQuery *)TermWithNSString:(NSString *)field;

- (OrgApacheLuceneSearchQuery *)TopLevelQueryWithNSString:(NSString *)field;

#pragma mark Protected

- (instancetype)initWithOrgApacheLuceneQueryParserCharStream:(id<OrgApacheLuceneQueryParserCharStream>)stream;

- (instancetype)initWithOrgApacheLuceneQueryParserQueryParserTokenManager:(OrgApacheLuceneQueryParserQueryParserTokenManager *)tm;

- (void)addClauseWithJavaUtilList:(id<JavaUtilList>)clauses
                          withInt:(jint)conj
                          withInt:(jint)mods
   withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)q;

- (OrgApacheLuceneSearchQuery *)getBooleanQueryWithJavaUtilList:(id<JavaUtilList>)clauses;

- (OrgApacheLuceneSearchQuery *)getBooleanQueryWithJavaUtilList:(id<JavaUtilList>)clauses
                                                    withBoolean:(jboolean)disableCoord;

- (OrgApacheLuceneSearchQuery *)getFieldQueryWithNSString:(NSString *)field
                                             withNSString:(NSString *)queryText;

- (OrgApacheLuceneSearchQuery *)getFieldQueryWithNSString:(NSString *)field
                                             withNSString:(NSString *)queryText
                                              withBoolean:(jboolean)quoted;

- (OrgApacheLuceneSearchQuery *)getFieldQueryWithNSString:(NSString *)field
                                             withNSString:(NSString *)queryText
                                                  withInt:(jint)slop;

- (OrgApacheLuceneSearchQuery *)getFuzzyQueryWithNSString:(NSString *)field
                                             withNSString:(NSString *)termStr
                                                withFloat:(jfloat)minSimilarity;

- (OrgApacheLuceneSearchQuery *)getPrefixQueryWithNSString:(NSString *)field
                                              withNSString:(NSString *)termStr;

- (OrgApacheLuceneSearchQuery *)getRangeQueryWithNSString:(NSString *)field
                                             withNSString:(NSString *)part1
                                             withNSString:(NSString *)part2
                                              withBoolean:(jboolean)inclusive;

- (OrgApacheLuceneSearchQuery *)getWildcardQueryWithNSString:(NSString *)field
                                                withNSString:(NSString *)termStr;

- (OrgApacheLuceneSearchBooleanClause *)newBooleanClauseWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)q
                                          withOrgApacheLuceneSearchBooleanClause_Occur:(OrgApacheLuceneSearchBooleanClause_Occur *)occur OBJC_METHOD_FAMILY_NONE;

- (OrgApacheLuceneSearchBooleanQuery *)newBooleanQueryWithBoolean:(jboolean)disableCoord OBJC_METHOD_FAMILY_NONE;

- (OrgApacheLuceneSearchQuery *)newFuzzyQueryWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                                                                withFloat:(jfloat)minimumSimilarity
                                                                  withInt:(jint)prefixLength OBJC_METHOD_FAMILY_NONE;

- (OrgApacheLuceneSearchQuery *)newMatchAllDocsQuery OBJC_METHOD_FAMILY_NONE;

- (OrgApacheLuceneSearchMultiPhraseQuery *)newMultiPhraseQuery OBJC_METHOD_FAMILY_NONE;

- (OrgApacheLuceneSearchPhraseQuery *)newPhraseQuery OBJC_METHOD_FAMILY_NONE;

- (OrgApacheLuceneSearchQuery *)newPrefixQueryWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)prefix OBJC_METHOD_FAMILY_NONE;

- (OrgApacheLuceneSearchQuery *)newRangeQueryWithNSString:(NSString *)field
                                             withNSString:(NSString *)part1
                                             withNSString:(NSString *)part2
                                              withBoolean:(jboolean)inclusive OBJC_METHOD_FAMILY_NONE;

- (OrgApacheLuceneSearchQuery *)newTermQueryWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term OBJC_METHOD_FAMILY_NONE;

- (OrgApacheLuceneSearchQuery *)newWildcardQueryWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)t OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneQueryParserQueryParser)

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryParserQueryParser, multiTermRewriteMethod_, OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryParserQueryParser, analyzer_, OrgApacheLuceneAnalysisAnalyzer *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryParserQueryParser, field_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryParserQueryParser, locale_, JavaUtilLocale *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryParserQueryParser, dateResolution_, OrgApacheLuceneDocumentDateTools_Resolution *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryParserQueryParser, fieldToDateResolution_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryParserQueryParser, rangeCollator_, JavaTextCollator *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryParserQueryParser, token_source_, OrgApacheLuceneQueryParserQueryParserTokenManager *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryParserQueryParser, token_, OrgApacheLuceneQueryParserToken *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryParserQueryParser, jj_nt_, OrgApacheLuceneQueryParserToken *)

inline OrgApacheLuceneQueryParserQueryParser_Operator *OrgApacheLuceneQueryParserQueryParser_get_AND_OPERATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneQueryParserQueryParser_Operator *OrgApacheLuceneQueryParserQueryParser_AND_OPERATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryParserQueryParser, AND_OPERATOR, OrgApacheLuceneQueryParserQueryParser_Operator *)

inline OrgApacheLuceneQueryParserQueryParser_Operator *OrgApacheLuceneQueryParserQueryParser_get_OR_OPERATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneQueryParserQueryParser_Operator *OrgApacheLuceneQueryParserQueryParser_OR_OPERATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryParserQueryParser, OR_OPERATOR, OrgApacheLuceneQueryParserQueryParser_Operator *)

FOUNDATION_EXPORT void OrgApacheLuceneQueryParserQueryParser_initWithOrgApacheLuceneUtilVersion_withNSString_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneQueryParserQueryParser *self, OrgApacheLuceneUtilVersion *matchVersion, NSString *f, OrgApacheLuceneAnalysisAnalyzer *a);

FOUNDATION_EXPORT OrgApacheLuceneQueryParserQueryParser *new_OrgApacheLuceneQueryParserQueryParser_initWithOrgApacheLuceneUtilVersion_withNSString_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneUtilVersion *matchVersion, NSString *f, OrgApacheLuceneAnalysisAnalyzer *a) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryParserQueryParser *create_OrgApacheLuceneQueryParserQueryParser_initWithOrgApacheLuceneUtilVersion_withNSString_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneUtilVersion *matchVersion, NSString *f, OrgApacheLuceneAnalysisAnalyzer *a);

FOUNDATION_EXPORT NSString *OrgApacheLuceneQueryParserQueryParser_escapeWithNSString_(NSString *s);

FOUNDATION_EXPORT void OrgApacheLuceneQueryParserQueryParser_mainWithNSStringArray_(IOSObjectArray *args);

FOUNDATION_EXPORT void OrgApacheLuceneQueryParserQueryParser_initWithOrgApacheLuceneQueryParserCharStream_(OrgApacheLuceneQueryParserQueryParser *self, id<OrgApacheLuceneQueryParserCharStream> stream);

FOUNDATION_EXPORT OrgApacheLuceneQueryParserQueryParser *new_OrgApacheLuceneQueryParserQueryParser_initWithOrgApacheLuceneQueryParserCharStream_(id<OrgApacheLuceneQueryParserCharStream> stream) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryParserQueryParser *create_OrgApacheLuceneQueryParserQueryParser_initWithOrgApacheLuceneQueryParserCharStream_(id<OrgApacheLuceneQueryParserCharStream> stream);

FOUNDATION_EXPORT void OrgApacheLuceneQueryParserQueryParser_initWithOrgApacheLuceneQueryParserQueryParserTokenManager_(OrgApacheLuceneQueryParserQueryParser *self, OrgApacheLuceneQueryParserQueryParserTokenManager *tm);

FOUNDATION_EXPORT OrgApacheLuceneQueryParserQueryParser *new_OrgApacheLuceneQueryParserQueryParser_initWithOrgApacheLuceneQueryParserQueryParserTokenManager_(OrgApacheLuceneQueryParserQueryParserTokenManager *tm) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryParserQueryParser *create_OrgApacheLuceneQueryParserQueryParser_initWithOrgApacheLuceneQueryParserQueryParserTokenManager_(OrgApacheLuceneQueryParserQueryParserTokenManager *tm);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryParserQueryParser)

#endif

#if !defined (OrgApacheLuceneQueryParserQueryParser_Operator_) && (INCLUDE_ALL_OrgApacheLuceneQueryParserQueryParser || defined(INCLUDE_OrgApacheLuceneQueryParserQueryParser_Operator))
#define OrgApacheLuceneQueryParserQueryParser_Operator_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, OrgApacheLuceneQueryParserQueryParser_Operator_Enum) {
  OrgApacheLuceneQueryParserQueryParser_Operator_Enum_OR = 0,
  OrgApacheLuceneQueryParserQueryParser_Operator_Enum_AND = 1,
};

@interface OrgApacheLuceneQueryParserQueryParser_Operator : JavaLangEnum < NSCopying >

#pragma mark Public

+ (OrgApacheLuceneQueryParserQueryParser_Operator *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneQueryParserQueryParser_Operator)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgApacheLuceneQueryParserQueryParser_Operator *OrgApacheLuceneQueryParserQueryParser_Operator_values_[];

inline OrgApacheLuceneQueryParserQueryParser_Operator *OrgApacheLuceneQueryParserQueryParser_Operator_get_OR();
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneQueryParserQueryParser_Operator, OR)

inline OrgApacheLuceneQueryParserQueryParser_Operator *OrgApacheLuceneQueryParserQueryParser_Operator_get_AND();
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneQueryParserQueryParser_Operator, AND)

FOUNDATION_EXPORT IOSObjectArray *OrgApacheLuceneQueryParserQueryParser_Operator_values();

FOUNDATION_EXPORT OrgApacheLuceneQueryParserQueryParser_Operator *OrgApacheLuceneQueryParserQueryParser_Operator_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgApacheLuceneQueryParserQueryParser_Operator *OrgApacheLuceneQueryParserQueryParser_Operator_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryParserQueryParser_Operator)

#endif

#if !defined (OrgApacheLuceneQueryParserQueryParser_JJCalls_) && (INCLUDE_ALL_OrgApacheLuceneQueryParserQueryParser || defined(INCLUDE_OrgApacheLuceneQueryParserQueryParser_JJCalls))
#define OrgApacheLuceneQueryParserQueryParser_JJCalls_

@class OrgApacheLuceneQueryParserToken;

@interface OrgApacheLuceneQueryParserQueryParser_JJCalls : NSObject {
 @public
  jint gen_;
  OrgApacheLuceneQueryParserToken *first_;
  jint arg_;
  OrgApacheLuceneQueryParserQueryParser_JJCalls *next_;
}

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryParserQueryParser_JJCalls)

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryParserQueryParser_JJCalls, first_, OrgApacheLuceneQueryParserToken *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryParserQueryParser_JJCalls, next_, OrgApacheLuceneQueryParserQueryParser_JJCalls *)

FOUNDATION_EXPORT void OrgApacheLuceneQueryParserQueryParser_JJCalls_init(OrgApacheLuceneQueryParserQueryParser_JJCalls *self);

FOUNDATION_EXPORT OrgApacheLuceneQueryParserQueryParser_JJCalls *new_OrgApacheLuceneQueryParserQueryParser_JJCalls_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryParserQueryParser_JJCalls *create_OrgApacheLuceneQueryParserQueryParser_JJCalls_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryParserQueryParser_JJCalls)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueryParserQueryParser")
