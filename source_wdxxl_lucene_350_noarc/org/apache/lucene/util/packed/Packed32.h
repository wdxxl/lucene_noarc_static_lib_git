//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/util/packed/Packed32.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilPackedPacked32")
#ifdef RESTRICT_OrgApacheLuceneUtilPackedPacked32
#define INCLUDE_ALL_OrgApacheLuceneUtilPackedPacked32 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilPackedPacked32 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilPackedPacked32

#if !defined (OrgApacheLuceneUtilPackedPacked32_) && (INCLUDE_ALL_OrgApacheLuceneUtilPackedPacked32 || defined(INCLUDE_OrgApacheLuceneUtilPackedPacked32))
#define OrgApacheLuceneUtilPackedPacked32_

#define RESTRICT_OrgApacheLuceneUtilPackedPackedInts 1
#define INCLUDE_OrgApacheLuceneUtilPackedPackedInts_ReaderImpl 1
#include "org/apache/lucene/util/packed/PackedInts.h"

#define RESTRICT_OrgApacheLuceneUtilPackedPackedInts 1
#define INCLUDE_OrgApacheLuceneUtilPackedPackedInts_Mutable 1
#include "org/apache/lucene/util/packed/PackedInts.h"

@class IOSIntArray;
@class OrgApacheLuceneStoreDataInput;

@interface OrgApacheLuceneUtilPackedPacked32 : OrgApacheLuceneUtilPackedPackedInts_ReaderImpl < OrgApacheLuceneUtilPackedPackedInts_Mutable >

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg
                                              withInt:(jint)valueCount
                                              withInt:(jint)bitsPerValue;

- (instancetype)initWithInt:(jint)valueCount
                    withInt:(jint)bitsPerValue;

- (instancetype)initWithIntArray:(IOSIntArray *)blocks
                         withInt:(jint)valueCount
                         withInt:(jint)bitsPerValue;

- (void)clear;

- (jlong)getWithInt:(jint)index;

- (jlong)ramBytesUsed;

- (void)setWithInt:(jint)index
          withLong:(jlong)value;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneUtilPackedPacked32)

inline jint OrgApacheLuceneUtilPackedPacked32_get_BLOCK_SIZE();
#define OrgApacheLuceneUtilPackedPacked32_BLOCK_SIZE 32
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilPackedPacked32, BLOCK_SIZE, jint)

inline jint OrgApacheLuceneUtilPackedPacked32_get_BLOCK_BITS();
#define OrgApacheLuceneUtilPackedPacked32_BLOCK_BITS 5
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilPackedPacked32, BLOCK_BITS, jint)

inline jint OrgApacheLuceneUtilPackedPacked32_get_MOD_MASK();
#define OrgApacheLuceneUtilPackedPacked32_MOD_MASK 31
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilPackedPacked32, MOD_MASK, jint)

FOUNDATION_EXPORT void OrgApacheLuceneUtilPackedPacked32_initWithInt_withInt_(OrgApacheLuceneUtilPackedPacked32 *self, jint valueCount, jint bitsPerValue);

FOUNDATION_EXPORT OrgApacheLuceneUtilPackedPacked32 *new_OrgApacheLuceneUtilPackedPacked32_initWithInt_withInt_(jint valueCount, jint bitsPerValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilPackedPacked32 *create_OrgApacheLuceneUtilPackedPacked32_initWithInt_withInt_(jint valueCount, jint bitsPerValue);

FOUNDATION_EXPORT void OrgApacheLuceneUtilPackedPacked32_initWithOrgApacheLuceneStoreDataInput_withInt_withInt_(OrgApacheLuceneUtilPackedPacked32 *self, OrgApacheLuceneStoreDataInput *inArg, jint valueCount, jint bitsPerValue);

FOUNDATION_EXPORT OrgApacheLuceneUtilPackedPacked32 *new_OrgApacheLuceneUtilPackedPacked32_initWithOrgApacheLuceneStoreDataInput_withInt_withInt_(OrgApacheLuceneStoreDataInput *inArg, jint valueCount, jint bitsPerValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilPackedPacked32 *create_OrgApacheLuceneUtilPackedPacked32_initWithOrgApacheLuceneStoreDataInput_withInt_withInt_(OrgApacheLuceneStoreDataInput *inArg, jint valueCount, jint bitsPerValue);

FOUNDATION_EXPORT void OrgApacheLuceneUtilPackedPacked32_initWithIntArray_withInt_withInt_(OrgApacheLuceneUtilPackedPacked32 *self, IOSIntArray *blocks, jint valueCount, jint bitsPerValue);

FOUNDATION_EXPORT OrgApacheLuceneUtilPackedPacked32 *new_OrgApacheLuceneUtilPackedPacked32_initWithIntArray_withInt_withInt_(IOSIntArray *blocks, jint valueCount, jint bitsPerValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilPackedPacked32 *create_OrgApacheLuceneUtilPackedPacked32_initWithIntArray_withInt_withInt_(IOSIntArray *blocks, jint valueCount, jint bitsPerValue);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilPackedPacked32)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilPackedPacked32")
