//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/util/ArrayUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilArrayUtil")
#ifdef RESTRICT_OrgApacheLuceneUtilArrayUtil
#define INCLUDE_ALL_OrgApacheLuceneUtilArrayUtil 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilArrayUtil 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilArrayUtil

#if !defined (OrgApacheLuceneUtilArrayUtil_) && (INCLUDE_ALL_OrgApacheLuceneUtilArrayUtil || defined(INCLUDE_OrgApacheLuceneUtilArrayUtil))
#define OrgApacheLuceneUtilArrayUtil_

@class IOSBooleanArray;
@class IOSByteArray;
@class IOSCharArray;
@class IOSDoubleArray;
@class IOSFloatArray;
@class IOSIntArray;
@class IOSLongArray;
@class IOSObjectArray;
@class IOSShortArray;
@protocol JavaUtilCollection;
@protocol JavaUtilComparator;

@interface OrgApacheLuceneUtilArrayUtil : NSObject

#pragma mark Public

- (instancetype)init;

+ (jboolean)equalsWithCharArray:(IOSCharArray *)left
                        withInt:(jint)offsetLeft
                  withCharArray:(IOSCharArray *)right
                        withInt:(jint)offsetRight
                        withInt:(jint)length;

+ (jboolean)equalsWithIntArray:(IOSIntArray *)left
                       withInt:(jint)offsetLeft
                  withIntArray:(IOSIntArray *)right
                       withInt:(jint)offsetRight
                       withInt:(jint)length;

+ (jint)getShrinkSizeWithInt:(jint)currentSize
                     withInt:(jint)targetSize
                     withInt:(jint)bytesPerElement;

+ (IOSBooleanArray *)growWithBooleanArray:(IOSBooleanArray *)array;

+ (IOSBooleanArray *)growWithBooleanArray:(IOSBooleanArray *)array
                                  withInt:(jint)minSize;

+ (IOSByteArray *)growWithByteArray:(IOSByteArray *)array;

+ (IOSByteArray *)growWithByteArray:(IOSByteArray *)array
                            withInt:(jint)minSize;

+ (IOSCharArray *)growWithCharArray:(IOSCharArray *)array;

+ (IOSCharArray *)growWithCharArray:(IOSCharArray *)array
                            withInt:(jint)minSize;

+ (IOSDoubleArray *)growWithDoubleArray:(IOSDoubleArray *)array;

+ (IOSDoubleArray *)growWithDoubleArray:(IOSDoubleArray *)array
                                withInt:(jint)minSize;

+ (IOSFloatArray *)growWithFloatArray:(IOSFloatArray *)array;

+ (IOSFloatArray *)growWithFloatArray:(IOSFloatArray *)array
                              withInt:(jint)minSize;

+ (IOSObjectArray *)growWithFloatArray2:(IOSObjectArray *)array;

+ (IOSObjectArray *)growWithFloatArray2:(IOSObjectArray *)array
                                withInt:(jint)minSize;

+ (IOSIntArray *)growWithIntArray:(IOSIntArray *)array;

+ (IOSIntArray *)growWithIntArray:(IOSIntArray *)array
                          withInt:(jint)minSize;

+ (IOSObjectArray *)growWithIntArray2:(IOSObjectArray *)array;

+ (IOSObjectArray *)growWithIntArray2:(IOSObjectArray *)array
                              withInt:(jint)minSize;

+ (IOSLongArray *)growWithLongArray:(IOSLongArray *)array;

+ (IOSLongArray *)growWithLongArray:(IOSLongArray *)array
                            withInt:(jint)minSize;

+ (IOSShortArray *)growWithShortArray:(IOSShortArray *)array;

+ (IOSShortArray *)growWithShortArray:(IOSShortArray *)array
                              withInt:(jint)minSize;

+ (jint)hashCodeWithByteArray:(IOSByteArray *)array
                      withInt:(jint)start
                      withInt:(jint)end;

+ (jint)hashCodeWithCharArray:(IOSCharArray *)array
                      withInt:(jint)start
                      withInt:(jint)end;

+ (void)insertionSortWithJavaLangComparableArray:(IOSObjectArray *)a;

+ (void)insertionSortWithNSObjectArray:(IOSObjectArray *)a
                withJavaUtilComparator:(id<JavaUtilComparator>)comp;

+ (void)insertionSortWithJavaLangComparableArray:(IOSObjectArray *)a
                                         withInt:(jint)fromIndex
                                         withInt:(jint)toIndex;

+ (void)insertionSortWithNSObjectArray:(IOSObjectArray *)a
                               withInt:(jint)fromIndex
                               withInt:(jint)toIndex
                withJavaUtilComparator:(id<JavaUtilComparator>)comp;

+ (void)mergeSortWithJavaLangComparableArray:(IOSObjectArray *)a;

+ (void)mergeSortWithNSObjectArray:(IOSObjectArray *)a
            withJavaUtilComparator:(id<JavaUtilComparator>)comp;

+ (void)mergeSortWithJavaLangComparableArray:(IOSObjectArray *)a
                                     withInt:(jint)fromIndex
                                     withInt:(jint)toIndex;

+ (void)mergeSortWithNSObjectArray:(IOSObjectArray *)a
                           withInt:(jint)fromIndex
                           withInt:(jint)toIndex
            withJavaUtilComparator:(id<JavaUtilComparator>)comp;

+ (jint)oversizeWithInt:(jint)minTargetSize
                withInt:(jint)bytesPerElement;

+ (jint)parseIntWithCharArray:(IOSCharArray *)chars;

+ (jint)parseIntWithCharArray:(IOSCharArray *)chars
                      withInt:(jint)offset
                      withInt:(jint)len;

+ (jint)parseIntWithCharArray:(IOSCharArray *)chars
                      withInt:(jint)offset
                      withInt:(jint)len
                      withInt:(jint)radix;

+ (void)quickSortWithJavaLangComparableArray:(IOSObjectArray *)a;

+ (void)quickSortWithNSObjectArray:(IOSObjectArray *)a
            withJavaUtilComparator:(id<JavaUtilComparator>)comp;

+ (void)quickSortWithJavaLangComparableArray:(IOSObjectArray *)a
                                     withInt:(jint)fromIndex
                                     withInt:(jint)toIndex;

+ (void)quickSortWithNSObjectArray:(IOSObjectArray *)a
                           withInt:(jint)fromIndex
                           withInt:(jint)toIndex
            withJavaUtilComparator:(id<JavaUtilComparator>)comp;

+ (IOSBooleanArray *)shrinkWithBooleanArray:(IOSBooleanArray *)array
                                    withInt:(jint)targetSize;

+ (IOSByteArray *)shrinkWithByteArray:(IOSByteArray *)array
                              withInt:(jint)targetSize;

+ (IOSCharArray *)shrinkWithCharArray:(IOSCharArray *)array
                              withInt:(jint)targetSize;

+ (IOSObjectArray *)shrinkWithFloatArray2:(IOSObjectArray *)array
                                  withInt:(jint)targetSize;

+ (IOSIntArray *)shrinkWithIntArray:(IOSIntArray *)array
                            withInt:(jint)targetSize;

+ (IOSObjectArray *)shrinkWithIntArray2:(IOSObjectArray *)array
                                withInt:(jint)targetSize;

+ (IOSLongArray *)shrinkWithLongArray:(IOSLongArray *)array
                              withInt:(jint)targetSize;

+ (IOSShortArray *)shrinkWithShortArray:(IOSShortArray *)array
                                withInt:(jint)targetSize;

+ (IOSIntArray *)toIntArrayWithJavaUtilCollection:(id<JavaUtilCollection>)ints;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilArrayUtil)

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_init(OrgApacheLuceneUtilArrayUtil *self);

FOUNDATION_EXPORT OrgApacheLuceneUtilArrayUtil *new_OrgApacheLuceneUtilArrayUtil_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilArrayUtil *create_OrgApacheLuceneUtilArrayUtil_init();

FOUNDATION_EXPORT jint OrgApacheLuceneUtilArrayUtil_parseIntWithCharArray_(IOSCharArray *chars);

FOUNDATION_EXPORT jint OrgApacheLuceneUtilArrayUtil_parseIntWithCharArray_withInt_withInt_(IOSCharArray *chars, jint offset, jint len);

FOUNDATION_EXPORT jint OrgApacheLuceneUtilArrayUtil_parseIntWithCharArray_withInt_withInt_withInt_(IOSCharArray *chars, jint offset, jint len, jint radix);

FOUNDATION_EXPORT jint OrgApacheLuceneUtilArrayUtil_oversizeWithInt_withInt_(jint minTargetSize, jint bytesPerElement);

FOUNDATION_EXPORT jint OrgApacheLuceneUtilArrayUtil_getShrinkSizeWithInt_withInt_withInt_(jint currentSize, jint targetSize, jint bytesPerElement);

FOUNDATION_EXPORT IOSShortArray *OrgApacheLuceneUtilArrayUtil_growWithShortArray_withInt_(IOSShortArray *array, jint minSize);

FOUNDATION_EXPORT IOSShortArray *OrgApacheLuceneUtilArrayUtil_growWithShortArray_(IOSShortArray *array);

FOUNDATION_EXPORT IOSFloatArray *OrgApacheLuceneUtilArrayUtil_growWithFloatArray_withInt_(IOSFloatArray *array, jint minSize);

FOUNDATION_EXPORT IOSFloatArray *OrgApacheLuceneUtilArrayUtil_growWithFloatArray_(IOSFloatArray *array);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheLuceneUtilArrayUtil_growWithDoubleArray_withInt_(IOSDoubleArray *array, jint minSize);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheLuceneUtilArrayUtil_growWithDoubleArray_(IOSDoubleArray *array);

FOUNDATION_EXPORT IOSShortArray *OrgApacheLuceneUtilArrayUtil_shrinkWithShortArray_withInt_(IOSShortArray *array, jint targetSize);

FOUNDATION_EXPORT IOSIntArray *OrgApacheLuceneUtilArrayUtil_growWithIntArray_withInt_(IOSIntArray *array, jint minSize);

FOUNDATION_EXPORT IOSIntArray *OrgApacheLuceneUtilArrayUtil_growWithIntArray_(IOSIntArray *array);

FOUNDATION_EXPORT IOSIntArray *OrgApacheLuceneUtilArrayUtil_shrinkWithIntArray_withInt_(IOSIntArray *array, jint targetSize);

FOUNDATION_EXPORT IOSLongArray *OrgApacheLuceneUtilArrayUtil_growWithLongArray_withInt_(IOSLongArray *array, jint minSize);

FOUNDATION_EXPORT IOSLongArray *OrgApacheLuceneUtilArrayUtil_growWithLongArray_(IOSLongArray *array);

FOUNDATION_EXPORT IOSLongArray *OrgApacheLuceneUtilArrayUtil_shrinkWithLongArray_withInt_(IOSLongArray *array, jint targetSize);

FOUNDATION_EXPORT IOSByteArray *OrgApacheLuceneUtilArrayUtil_growWithByteArray_withInt_(IOSByteArray *array, jint minSize);

FOUNDATION_EXPORT IOSByteArray *OrgApacheLuceneUtilArrayUtil_growWithByteArray_(IOSByteArray *array);

FOUNDATION_EXPORT IOSByteArray *OrgApacheLuceneUtilArrayUtil_shrinkWithByteArray_withInt_(IOSByteArray *array, jint targetSize);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheLuceneUtilArrayUtil_growWithBooleanArray_withInt_(IOSBooleanArray *array, jint minSize);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheLuceneUtilArrayUtil_growWithBooleanArray_(IOSBooleanArray *array);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheLuceneUtilArrayUtil_shrinkWithBooleanArray_withInt_(IOSBooleanArray *array, jint targetSize);

FOUNDATION_EXPORT IOSCharArray *OrgApacheLuceneUtilArrayUtil_growWithCharArray_withInt_(IOSCharArray *array, jint minSize);

FOUNDATION_EXPORT IOSCharArray *OrgApacheLuceneUtilArrayUtil_growWithCharArray_(IOSCharArray *array);

FOUNDATION_EXPORT IOSCharArray *OrgApacheLuceneUtilArrayUtil_shrinkWithCharArray_withInt_(IOSCharArray *array, jint targetSize);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheLuceneUtilArrayUtil_growWithIntArray2_withInt_(IOSObjectArray *array, jint minSize);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheLuceneUtilArrayUtil_growWithIntArray2_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheLuceneUtilArrayUtil_shrinkWithIntArray2_withInt_(IOSObjectArray *array, jint targetSize);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheLuceneUtilArrayUtil_growWithFloatArray2_withInt_(IOSObjectArray *array, jint minSize);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheLuceneUtilArrayUtil_growWithFloatArray2_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheLuceneUtilArrayUtil_shrinkWithFloatArray2_withInt_(IOSObjectArray *array, jint targetSize);

FOUNDATION_EXPORT jint OrgApacheLuceneUtilArrayUtil_hashCodeWithCharArray_withInt_withInt_(IOSCharArray *array, jint start, jint end);

FOUNDATION_EXPORT jint OrgApacheLuceneUtilArrayUtil_hashCodeWithByteArray_withInt_withInt_(IOSByteArray *array, jint start, jint end);

FOUNDATION_EXPORT jboolean OrgApacheLuceneUtilArrayUtil_equalsWithCharArray_withInt_withCharArray_withInt_withInt_(IOSCharArray *left, jint offsetLeft, IOSCharArray *right, jint offsetRight, jint length);

FOUNDATION_EXPORT jboolean OrgApacheLuceneUtilArrayUtil_equalsWithIntArray_withInt_withIntArray_withInt_withInt_(IOSIntArray *left, jint offsetLeft, IOSIntArray *right, jint offsetRight, jint length);

FOUNDATION_EXPORT IOSIntArray *OrgApacheLuceneUtilArrayUtil_toIntArrayWithJavaUtilCollection_(id<JavaUtilCollection> ints);

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_quickSortWithNSObjectArray_withInt_withInt_withJavaUtilComparator_(IOSObjectArray *a, jint fromIndex, jint toIndex, id<JavaUtilComparator> comp);

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_quickSortWithNSObjectArray_withJavaUtilComparator_(IOSObjectArray *a, id<JavaUtilComparator> comp);

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_quickSortWithJavaLangComparableArray_withInt_withInt_(IOSObjectArray *a, jint fromIndex, jint toIndex);

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_quickSortWithJavaLangComparableArray_(IOSObjectArray *a);

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_mergeSortWithNSObjectArray_withInt_withInt_withJavaUtilComparator_(IOSObjectArray *a, jint fromIndex, jint toIndex, id<JavaUtilComparator> comp);

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_mergeSortWithNSObjectArray_withJavaUtilComparator_(IOSObjectArray *a, id<JavaUtilComparator> comp);

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_mergeSortWithJavaLangComparableArray_withInt_withInt_(IOSObjectArray *a, jint fromIndex, jint toIndex);

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_mergeSortWithJavaLangComparableArray_(IOSObjectArray *a);

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_insertionSortWithNSObjectArray_withInt_withInt_withJavaUtilComparator_(IOSObjectArray *a, jint fromIndex, jint toIndex, id<JavaUtilComparator> comp);

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_insertionSortWithNSObjectArray_withJavaUtilComparator_(IOSObjectArray *a, id<JavaUtilComparator> comp);

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_insertionSortWithJavaLangComparableArray_withInt_withInt_(IOSObjectArray *a, jint fromIndex, jint toIndex);

FOUNDATION_EXPORT void OrgApacheLuceneUtilArrayUtil_insertionSortWithJavaLangComparableArray_(IOSObjectArray *a);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilArrayUtil)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilArrayUtil")
