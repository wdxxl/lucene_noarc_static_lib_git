//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/util/NamedThreadFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilNamedThreadFactory")
#ifdef RESTRICT_OrgApacheLuceneUtilNamedThreadFactory
#define INCLUDE_ALL_OrgApacheLuceneUtilNamedThreadFactory 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilNamedThreadFactory 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilNamedThreadFactory

#if !defined (OrgApacheLuceneUtilNamedThreadFactory_) && (INCLUDE_ALL_OrgApacheLuceneUtilNamedThreadFactory || defined(INCLUDE_OrgApacheLuceneUtilNamedThreadFactory))
#define OrgApacheLuceneUtilNamedThreadFactory_

#define RESTRICT_JavaUtilConcurrentThreadFactory 1
#define INCLUDE_JavaUtilConcurrentThreadFactory 1
#include "java/util/concurrent/ThreadFactory.h"

@class JavaLangThread;
@protocol JavaLangRunnable;

@interface OrgApacheLuceneUtilNamedThreadFactory : NSObject < JavaUtilConcurrentThreadFactory >

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)threadNamePrefix;

- (JavaLangThread *)newThreadWithJavaLangRunnable:(id<JavaLangRunnable>)r OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneUtilNamedThreadFactory)

FOUNDATION_EXPORT void OrgApacheLuceneUtilNamedThreadFactory_initWithNSString_(OrgApacheLuceneUtilNamedThreadFactory *self, NSString *threadNamePrefix);

FOUNDATION_EXPORT OrgApacheLuceneUtilNamedThreadFactory *new_OrgApacheLuceneUtilNamedThreadFactory_initWithNSString_(NSString *threadNamePrefix) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilNamedThreadFactory *create_OrgApacheLuceneUtilNamedThreadFactory_initWithNSString_(NSString *threadNamePrefix);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilNamedThreadFactory)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilNamedThreadFactory")
