//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/analysis/LimitTokenCountAnalyzer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisLimitTokenCountAnalyzer")
#ifdef RESTRICT_OrgApacheLuceneAnalysisLimitTokenCountAnalyzer
#define INCLUDE_ALL_OrgApacheLuceneAnalysisLimitTokenCountAnalyzer 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisLimitTokenCountAnalyzer 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisLimitTokenCountAnalyzer

#if !defined (OrgApacheLuceneAnalysisLimitTokenCountAnalyzer_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisLimitTokenCountAnalyzer || defined(INCLUDE_OrgApacheLuceneAnalysisLimitTokenCountAnalyzer))
#define OrgApacheLuceneAnalysisLimitTokenCountAnalyzer_

#define RESTRICT_OrgApacheLuceneAnalysisAnalyzer 1
#define INCLUDE_OrgApacheLuceneAnalysisAnalyzer 1
#include "org/apache/lucene/analysis/Analyzer.h"

@class JavaIoReader;
@class OrgApacheLuceneAnalysisTokenStream;
@protocol OrgApacheLuceneDocumentFieldable;

@interface OrgApacheLuceneAnalysisLimitTokenCountAnalyzer : OrgApacheLuceneAnalysisAnalyzer

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)delegate
                                                withInt:(jint)maxTokenCount;

- (jint)getOffsetGapWithOrgApacheLuceneDocumentFieldable:(id<OrgApacheLuceneDocumentFieldable>)field;

- (jint)getPositionIncrementGapWithNSString:(NSString *)fieldName;

- (OrgApacheLuceneAnalysisTokenStream *)reusableTokenStreamWithNSString:(NSString *)fieldName
                                                       withJavaIoReader:(JavaIoReader *)reader;

- (OrgApacheLuceneAnalysisTokenStream *)tokenStreamWithNSString:(NSString *)fieldName
                                               withJavaIoReader:(JavaIoReader *)reader;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisLimitTokenCountAnalyzer)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisLimitTokenCountAnalyzer_initWithOrgApacheLuceneAnalysisAnalyzer_withInt_(OrgApacheLuceneAnalysisLimitTokenCountAnalyzer *self, OrgApacheLuceneAnalysisAnalyzer *delegate, jint maxTokenCount);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisLimitTokenCountAnalyzer *new_OrgApacheLuceneAnalysisLimitTokenCountAnalyzer_initWithOrgApacheLuceneAnalysisAnalyzer_withInt_(OrgApacheLuceneAnalysisAnalyzer *delegate, jint maxTokenCount) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisLimitTokenCountAnalyzer *create_OrgApacheLuceneAnalysisLimitTokenCountAnalyzer_initWithOrgApacheLuceneAnalysisAnalyzer_withInt_(OrgApacheLuceneAnalysisAnalyzer *delegate, jint maxTokenCount);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisLimitTokenCountAnalyzer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisLimitTokenCountAnalyzer")
