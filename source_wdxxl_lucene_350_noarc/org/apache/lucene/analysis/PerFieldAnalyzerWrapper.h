//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/analysis/PerFieldAnalyzerWrapper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper")
#ifdef RESTRICT_OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper
#define INCLUDE_ALL_OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper

#if !defined (OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper || defined(INCLUDE_OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper))
#define OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper_

#define RESTRICT_OrgApacheLuceneAnalysisAnalyzer 1
#define INCLUDE_OrgApacheLuceneAnalysisAnalyzer 1
#include "org/apache/lucene/analysis/Analyzer.h"

@class JavaIoReader;
@class OrgApacheLuceneAnalysisTokenStream;
@protocol JavaUtilMap;
@protocol OrgApacheLuceneDocumentFieldable;

@interface OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper : OrgApacheLuceneAnalysisAnalyzer

#pragma mark Public

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)defaultAnalyzer;

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)defaultAnalyzer
                                        withJavaUtilMap:(id<JavaUtilMap>)fieldAnalyzers;

- (void)addAnalyzerWithNSString:(NSString *)fieldName
withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer;

- (jint)getOffsetGapWithOrgApacheLuceneDocumentFieldable:(id<OrgApacheLuceneDocumentFieldable>)field;

- (jint)getPositionIncrementGapWithNSString:(NSString *)fieldName;

- (OrgApacheLuceneAnalysisTokenStream *)reusableTokenStreamWithNSString:(NSString *)fieldName
                                                       withJavaIoReader:(JavaIoReader *)reader;

- (OrgApacheLuceneAnalysisTokenStream *)tokenStreamWithNSString:(NSString *)fieldName
                                               withJavaIoReader:(JavaIoReader *)reader;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper_initWithOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper *self, OrgApacheLuceneAnalysisAnalyzer *defaultAnalyzer);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper *new_OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper_initWithOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneAnalysisAnalyzer *defaultAnalyzer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper *create_OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper_initWithOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneAnalysisAnalyzer *defaultAnalyzer);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper_initWithOrgApacheLuceneAnalysisAnalyzer_withJavaUtilMap_(OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper *self, OrgApacheLuceneAnalysisAnalyzer *defaultAnalyzer, id<JavaUtilMap> fieldAnalyzers);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper *new_OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper_initWithOrgApacheLuceneAnalysisAnalyzer_withJavaUtilMap_(OrgApacheLuceneAnalysisAnalyzer *defaultAnalyzer, id<JavaUtilMap> fieldAnalyzers) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper *create_OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper_initWithOrgApacheLuceneAnalysisAnalyzer_withJavaUtilMap_(OrgApacheLuceneAnalysisAnalyzer *defaultAnalyzer, id<JavaUtilMap> fieldAnalyzers);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisPerFieldAnalyzerWrapper")
