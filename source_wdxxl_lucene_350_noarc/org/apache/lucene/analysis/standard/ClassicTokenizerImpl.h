//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/analysis/standard/ClassicTokenizerImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisStandardClassicTokenizerImpl")
#ifdef RESTRICT_OrgApacheLuceneAnalysisStandardClassicTokenizerImpl
#define INCLUDE_ALL_OrgApacheLuceneAnalysisStandardClassicTokenizerImpl 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisStandardClassicTokenizerImpl 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisStandardClassicTokenizerImpl

#if !defined (OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisStandardClassicTokenizerImpl || defined(INCLUDE_OrgApacheLuceneAnalysisStandardClassicTokenizerImpl))
#define OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_

#define RESTRICT_OrgApacheLuceneAnalysisStandardStandardTokenizerInterface 1
#define INCLUDE_OrgApacheLuceneAnalysisStandardStandardTokenizerInterface 1
#include "org/apache/lucene/analysis/standard/StandardTokenizerInterface.h"

@class IOSObjectArray;
@class JavaIoInputStream;
@class JavaIoReader;
@protocol OrgApacheLuceneAnalysisTokenattributesCharTermAttribute;

@interface OrgApacheLuceneAnalysisStandardClassicTokenizerImpl : NSObject < OrgApacheLuceneAnalysisStandardStandardTokenizerInterface >

#pragma mark Public

- (jint)getNextToken;

- (void)getTextWithOrgApacheLuceneAnalysisTokenattributesCharTermAttribute:(id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)t;

- (void)yybeginWithInt:(jint)newState;

- (jint)yychar;

- (jchar)yycharatWithInt:(jint)pos;

- (void)yyclose;

- (jint)yylength;

- (void)yypushbackWithInt:(jint)number;

- (void)yyresetWithJavaIoReader:(JavaIoReader *)reader;

- (jint)yystate;

- (NSString *)yytext;

#pragma mark Package-Private

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (instancetype)initWithJavaIoReader:(JavaIoReader *)inArg;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneAnalysisStandardClassicTokenizerImpl)

inline jint OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_get_YYEOF();
#define OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_YYEOF -1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardClassicTokenizerImpl, YYEOF, jint)

inline jint OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_get_YYINITIAL();
#define OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_YYINITIAL 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardClassicTokenizerImpl, YYINITIAL, jint)

inline jint OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_get_ALPHANUM();
#define OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_ALPHANUM 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardClassicTokenizerImpl, ALPHANUM, jint)

inline jint OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_get_APOSTROPHE();
#define OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_APOSTROPHE 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardClassicTokenizerImpl, APOSTROPHE, jint)

inline jint OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_get_ACRONYM();
#define OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_ACRONYM 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardClassicTokenizerImpl, ACRONYM, jint)

inline jint OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_get_COMPANY();
#define OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_COMPANY 3
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardClassicTokenizerImpl, COMPANY, jint)

inline jint OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_get_EMAIL();
#define OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_EMAIL 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardClassicTokenizerImpl, EMAIL, jint)

inline jint OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_get_HOST();
#define OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_HOST 5
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardClassicTokenizerImpl, HOST, jint)

inline jint OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_get_NUM();
#define OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_NUM 6
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardClassicTokenizerImpl, NUM, jint)

inline jint OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_get_CJ();
#define OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_CJ 7
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardClassicTokenizerImpl, CJ, jint)

inline jint OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_get_ACRONYM_DEP();
#define OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_ACRONYM_DEP 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardClassicTokenizerImpl, ACRONYM_DEP, jint)

inline IOSObjectArray *OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_get_TOKEN_TYPES();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_TOKEN_TYPES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisStandardClassicTokenizerImpl, TOKEN_TYPES, IOSObjectArray *)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_initWithJavaIoReader_(OrgApacheLuceneAnalysisStandardClassicTokenizerImpl *self, JavaIoReader *inArg);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisStandardClassicTokenizerImpl *new_OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_initWithJavaIoReader_(JavaIoReader *inArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisStandardClassicTokenizerImpl *create_OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_initWithJavaIoReader_(JavaIoReader *inArg);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_initWithJavaIoInputStream_(OrgApacheLuceneAnalysisStandardClassicTokenizerImpl *self, JavaIoInputStream *inArg);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisStandardClassicTokenizerImpl *new_OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_initWithJavaIoInputStream_(JavaIoInputStream *inArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisStandardClassicTokenizerImpl *create_OrgApacheLuceneAnalysisStandardClassicTokenizerImpl_initWithJavaIoInputStream_(JavaIoInputStream *inArg);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisStandardClassicTokenizerImpl)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisStandardClassicTokenizerImpl")
