//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/index/FieldSortedTermVectorMapper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneIndexFieldSortedTermVectorMapper")
#ifdef RESTRICT_OrgApacheLuceneIndexFieldSortedTermVectorMapper
#define INCLUDE_ALL_OrgApacheLuceneIndexFieldSortedTermVectorMapper 0
#else
#define INCLUDE_ALL_OrgApacheLuceneIndexFieldSortedTermVectorMapper 1
#endif
#undef RESTRICT_OrgApacheLuceneIndexFieldSortedTermVectorMapper

#if !defined (OrgApacheLuceneIndexFieldSortedTermVectorMapper_) && (INCLUDE_ALL_OrgApacheLuceneIndexFieldSortedTermVectorMapper || defined(INCLUDE_OrgApacheLuceneIndexFieldSortedTermVectorMapper))
#define OrgApacheLuceneIndexFieldSortedTermVectorMapper_

#define RESTRICT_OrgApacheLuceneIndexTermVectorMapper 1
#define INCLUDE_OrgApacheLuceneIndexTermVectorMapper 1
#include "org/apache/lucene/index/TermVectorMapper.h"

@class IOSIntArray;
@class IOSObjectArray;
@protocol JavaUtilComparator;
@protocol JavaUtilMap;

@interface OrgApacheLuceneIndexFieldSortedTermVectorMapper : OrgApacheLuceneIndexTermVectorMapper

#pragma mark Public

- (instancetype)initWithBoolean:(jboolean)ignoringPositions
                    withBoolean:(jboolean)ignoringOffsets
         withJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (instancetype)initWithJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (id<JavaUtilComparator>)getComparator;

- (id<JavaUtilMap>)getFieldToTerms;

- (void)mapWithNSString:(NSString *)term
                withInt:(jint)frequency
withOrgApacheLuceneIndexTermVectorOffsetInfoArray:(IOSObjectArray *)offsets
           withIntArray:(IOSIntArray *)positions;

- (void)setExpectationsWithNSString:(NSString *)field
                            withInt:(jint)numTerms
                        withBoolean:(jboolean)storeOffsets
                        withBoolean:(jboolean)storePositions;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexFieldSortedTermVectorMapper)

FOUNDATION_EXPORT void OrgApacheLuceneIndexFieldSortedTermVectorMapper_initWithJavaUtilComparator_(OrgApacheLuceneIndexFieldSortedTermVectorMapper *self, id<JavaUtilComparator> comparator);

FOUNDATION_EXPORT OrgApacheLuceneIndexFieldSortedTermVectorMapper *new_OrgApacheLuceneIndexFieldSortedTermVectorMapper_initWithJavaUtilComparator_(id<JavaUtilComparator> comparator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexFieldSortedTermVectorMapper *create_OrgApacheLuceneIndexFieldSortedTermVectorMapper_initWithJavaUtilComparator_(id<JavaUtilComparator> comparator);

FOUNDATION_EXPORT void OrgApacheLuceneIndexFieldSortedTermVectorMapper_initWithBoolean_withBoolean_withJavaUtilComparator_(OrgApacheLuceneIndexFieldSortedTermVectorMapper *self, jboolean ignoringPositions, jboolean ignoringOffsets, id<JavaUtilComparator> comparator);

FOUNDATION_EXPORT OrgApacheLuceneIndexFieldSortedTermVectorMapper *new_OrgApacheLuceneIndexFieldSortedTermVectorMapper_initWithBoolean_withBoolean_withJavaUtilComparator_(jboolean ignoringPositions, jboolean ignoringOffsets, id<JavaUtilComparator> comparator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexFieldSortedTermVectorMapper *create_OrgApacheLuceneIndexFieldSortedTermVectorMapper_initWithBoolean_withBoolean_withJavaUtilComparator_(jboolean ignoringPositions, jboolean ignoringOffsets, id<JavaUtilComparator> comparator);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexFieldSortedTermVectorMapper)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneIndexFieldSortedTermVectorMapper")
