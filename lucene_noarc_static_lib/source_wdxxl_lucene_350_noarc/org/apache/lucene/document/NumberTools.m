//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/document/NumberTools.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Long.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "org/apache/lucene/document/NumberTools.h"

inline jint OrgApacheLuceneDocumentNumberTools_get_RADIX();
#define OrgApacheLuceneDocumentNumberTools_RADIX 36
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneDocumentNumberTools, RADIX, jint)

inline jchar OrgApacheLuceneDocumentNumberTools_get_NEGATIVE_PREFIX();
#define OrgApacheLuceneDocumentNumberTools_NEGATIVE_PREFIX '-'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneDocumentNumberTools, NEGATIVE_PREFIX, jchar)

inline jchar OrgApacheLuceneDocumentNumberTools_get_POSITIVE_PREFIX();
#define OrgApacheLuceneDocumentNumberTools_POSITIVE_PREFIX '0'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneDocumentNumberTools, POSITIVE_PREFIX, jchar)

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneDocumentNumberTools__Annotations$0();

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneDocumentNumberTools)

NSString *OrgApacheLuceneDocumentNumberTools_MIN_STRING_VALUE = @"-0000000000000";
NSString *OrgApacheLuceneDocumentNumberTools_MAX_STRING_VALUE = @"01y2p0ij32e8e7";
jint OrgApacheLuceneDocumentNumberTools_STR_SIZE;

@implementation OrgApacheLuceneDocumentNumberTools

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneDocumentNumberTools_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NSString *)longToStringWithLong:(jlong)l {
  return OrgApacheLuceneDocumentNumberTools_longToStringWithLong_(l);
}

+ (jlong)stringToLongWithNSString:(NSString *)str {
  return OrgApacheLuceneDocumentNumberTools_stringToLongWithNSString_(str);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(longToStringWithLong:);
  methods[2].selector = @selector(stringToLongWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "RADIX", "I", .constantValue.asInt = OrgApacheLuceneDocumentNumberTools_RADIX, 0x1a, -1, -1, -1, -1 },
    { "NEGATIVE_PREFIX", "C", .constantValue.asUnichar = OrgApacheLuceneDocumentNumberTools_NEGATIVE_PREFIX, 0x1a, -1, -1, -1, -1 },
    { "POSITIVE_PREFIX", "C", .constantValue.asUnichar = OrgApacheLuceneDocumentNumberTools_POSITIVE_PREFIX, 0x1a, -1, -1, -1, -1 },
    { "MIN_STRING_VALUE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "MAX_STRING_VALUE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "STR_SIZE", "I", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "longToString", "J", "stringToLong", "LNSString;", &OrgApacheLuceneDocumentNumberTools_MIN_STRING_VALUE, &OrgApacheLuceneDocumentNumberTools_MAX_STRING_VALUE, &OrgApacheLuceneDocumentNumberTools_STR_SIZE, (void *)&OrgApacheLuceneDocumentNumberTools__Annotations$0 };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentNumberTools = { "NumberTools", "org.apache.lucene.document", ptrTable, methods, fields, 7, 0x1, 3, 6, -1, -1, -1, -1, 7 };
  return &_OrgApacheLuceneDocumentNumberTools;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneDocumentNumberTools class]) {
    OrgApacheLuceneDocumentNumberTools_STR_SIZE = [((NSString *) nil_chk(OrgApacheLuceneDocumentNumberTools_MIN_STRING_VALUE)) java_length];
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneDocumentNumberTools)
  }
}

@end

void OrgApacheLuceneDocumentNumberTools_init(OrgApacheLuceneDocumentNumberTools *self) {
  NSObject_init(self);
}

OrgApacheLuceneDocumentNumberTools *new_OrgApacheLuceneDocumentNumberTools_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentNumberTools, init)
}

OrgApacheLuceneDocumentNumberTools *create_OrgApacheLuceneDocumentNumberTools_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentNumberTools, init)
}

NSString *OrgApacheLuceneDocumentNumberTools_longToStringWithLong_(jlong l) {
  OrgApacheLuceneDocumentNumberTools_initialize();
  if (l == JavaLangLong_MIN_VALUE) {
    return OrgApacheLuceneDocumentNumberTools_MIN_STRING_VALUE;
  }
  JavaLangStringBuilder *buf = create_JavaLangStringBuilder_initWithInt_(OrgApacheLuceneDocumentNumberTools_STR_SIZE);
  if (l < 0) {
    [buf appendWithChar:OrgApacheLuceneDocumentNumberTools_NEGATIVE_PREFIX];
    l = JavaLangLong_MAX_VALUE + l + 1;
  }
  else {
    [buf appendWithChar:OrgApacheLuceneDocumentNumberTools_POSITIVE_PREFIX];
  }
  NSString *num = JavaLangLong_toStringWithLong_withInt_(l, OrgApacheLuceneDocumentNumberTools_RADIX);
  jint padLen = OrgApacheLuceneDocumentNumberTools_STR_SIZE - [((NSString *) nil_chk(num)) java_length] - [buf java_length];
  while (padLen-- > 0) {
    [buf appendWithChar:'0'];
  }
  [buf appendWithNSString:num];
  return [buf description];
}

jlong OrgApacheLuceneDocumentNumberTools_stringToLongWithNSString_(NSString *str) {
  OrgApacheLuceneDocumentNumberTools_initialize();
  if (str == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"string cannot be null");
  }
  if ([str java_length] != OrgApacheLuceneDocumentNumberTools_STR_SIZE) {
    @throw create_JavaLangNumberFormatException_initWithNSString_(@"string is the wrong size");
  }
  if ([str isEqual:OrgApacheLuceneDocumentNumberTools_MIN_STRING_VALUE]) {
    return JavaLangLong_MIN_VALUE;
  }
  jchar prefix = [str charAtWithInt:0];
  jlong l = JavaLangLong_parseLongWithNSString_withInt_([str java_substring:1], OrgApacheLuceneDocumentNumberTools_RADIX);
  if (prefix == OrgApacheLuceneDocumentNumberTools_POSITIVE_PREFIX) {
  }
  else if (prefix == OrgApacheLuceneDocumentNumberTools_NEGATIVE_PREFIX) {
    l = l - JavaLangLong_MAX_VALUE - 1;
  }
  else {
    @throw create_JavaLangNumberFormatException_initWithNSString_(@"string does not begin with the correct prefix");
  }
  return l;
}

IOSObjectArray *OrgApacheLuceneDocumentNumberTools__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneDocumentNumberTools)
