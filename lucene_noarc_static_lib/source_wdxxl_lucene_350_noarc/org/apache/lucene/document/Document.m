//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/document/Document.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "org/apache/lucene/document/Document.h"
#include "org/apache/lucene/document/Field.h"
#include "org/apache/lucene/document/Fieldable.h"

@interface OrgApacheLuceneDocumentDocument () {
 @public
  jfloat boost_;
}

@end

inline IOSObjectArray *OrgApacheLuceneDocumentDocument_get_NO_FIELDS();
static IOSObjectArray *OrgApacheLuceneDocumentDocument_NO_FIELDS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneDocumentDocument, NO_FIELDS, IOSObjectArray *)

inline IOSObjectArray *OrgApacheLuceneDocumentDocument_get_NO_FIELDABLES();
static IOSObjectArray *OrgApacheLuceneDocumentDocument_NO_FIELDABLES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneDocumentDocument, NO_FIELDABLES, IOSObjectArray *)

inline IOSObjectArray *OrgApacheLuceneDocumentDocument_get_NO_STRINGS();
static IOSObjectArray *OrgApacheLuceneDocumentDocument_NO_STRINGS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneDocumentDocument, NO_STRINGS, IOSObjectArray *)

inline IOSObjectArray *OrgApacheLuceneDocumentDocument_get_NO_BYTES();
static IOSObjectArray *OrgApacheLuceneDocumentDocument_NO_BYTES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneDocumentDocument, NO_BYTES, IOSObjectArray *)

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneDocumentDocument__Annotations$0();

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneDocumentDocument__Annotations$1();

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneDocumentDocument)

@implementation OrgApacheLuceneDocumentDocument

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneDocumentDocument_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setBoostWithFloat:(jfloat)boost {
  self->boost_ = boost;
}

- (jfloat)getBoost {
  return boost_;
}

- (void)addWithOrgApacheLuceneDocumentFieldable:(id<OrgApacheLuceneDocumentFieldable>)field {
  [((id<JavaUtilList>) nil_chk(fields_)) addWithId:field];
}

- (void)removeFieldWithNSString:(NSString *)name {
  id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(fields_)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    id<OrgApacheLuceneDocumentFieldable> field = [it next];
    if ([((NSString *) nil_chk([((id<OrgApacheLuceneDocumentFieldable>) nil_chk(field)) name])) isEqual:name]) {
      [it remove];
      return;
    }
  }
}

- (void)removeFieldsWithNSString:(NSString *)name {
  id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(fields_)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    id<OrgApacheLuceneDocumentFieldable> field = [it next];
    if ([((NSString *) nil_chk([((id<OrgApacheLuceneDocumentFieldable>) nil_chk(field)) name])) isEqual:name]) {
      [it remove];
    }
  }
}

- (OrgApacheLuceneDocumentField *)getFieldWithNSString:(NSString *)name {
  return (OrgApacheLuceneDocumentField *) cast_chk([self getFieldableWithNSString:name], [OrgApacheLuceneDocumentField class]);
}

- (id<OrgApacheLuceneDocumentFieldable>)getFieldableWithNSString:(NSString *)name {
  for (id<OrgApacheLuceneDocumentFieldable> __strong field in nil_chk(fields_)) {
    if ([((NSString *) nil_chk([((id<OrgApacheLuceneDocumentFieldable>) nil_chk(field)) name])) isEqual:name]) return field;
  }
  return nil;
}

- (NSString *)getWithNSString:(NSString *)name {
  for (id<OrgApacheLuceneDocumentFieldable> __strong field in nil_chk(fields_)) {
    if ([((NSString *) nil_chk([((id<OrgApacheLuceneDocumentFieldable>) nil_chk(field)) name])) isEqual:name] && (![field isBinary])) return [field stringValue];
  }
  return nil;
}

- (id<JavaUtilList>)getFields {
  return fields_;
}

- (IOSObjectArray *)getFieldsWithNSString:(NSString *)name {
  id<JavaUtilList> result = create_JavaUtilArrayList_init();
  for (id<OrgApacheLuceneDocumentFieldable> __strong field in nil_chk(fields_)) {
    if ([((NSString *) nil_chk([((id<OrgApacheLuceneDocumentFieldable>) nil_chk(field)) name])) isEqual:name]) {
      [result addWithId:(OrgApacheLuceneDocumentField *) cast_chk(field, [OrgApacheLuceneDocumentField class])];
    }
  }
  if ([result size] == 0) return OrgApacheLuceneDocumentDocument_NO_FIELDS;
  return [result toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[result size] type:OrgApacheLuceneDocumentField_class_()]];
}

- (IOSObjectArray *)getFieldablesWithNSString:(NSString *)name {
  id<JavaUtilList> result = create_JavaUtilArrayList_init();
  for (id<OrgApacheLuceneDocumentFieldable> __strong field in nil_chk(fields_)) {
    if ([((NSString *) nil_chk([((id<OrgApacheLuceneDocumentFieldable>) nil_chk(field)) name])) isEqual:name]) {
      [result addWithId:field];
    }
  }
  if ([result size] == 0) return OrgApacheLuceneDocumentDocument_NO_FIELDABLES;
  return [result toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[result size] type:OrgApacheLuceneDocumentFieldable_class_()]];
}

- (IOSObjectArray *)getValuesWithNSString:(NSString *)name {
  id<JavaUtilList> result = create_JavaUtilArrayList_init();
  for (id<OrgApacheLuceneDocumentFieldable> __strong field in nil_chk(fields_)) {
    if ([((NSString *) nil_chk([((id<OrgApacheLuceneDocumentFieldable>) nil_chk(field)) name])) isEqual:name] && (![field isBinary])) [result addWithId:[field stringValue]];
  }
  if ([result size] == 0) return OrgApacheLuceneDocumentDocument_NO_STRINGS;
  return [result toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[result size] type:NSString_class_()]];
}

- (IOSObjectArray *)getBinaryValuesWithNSString:(NSString *)name {
  id<JavaUtilList> result = create_JavaUtilArrayList_init();
  for (id<OrgApacheLuceneDocumentFieldable> __strong field in nil_chk(fields_)) {
    if ([((NSString *) nil_chk([((id<OrgApacheLuceneDocumentFieldable>) nil_chk(field)) name])) isEqual:name] && ([field isBinary])) [result addWithId:[field getBinaryValue]];
  }
  if ([result size] == 0) return OrgApacheLuceneDocumentDocument_NO_BYTES;
  return [result toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[result size] type:IOSClass_byteArray(1)]];
}

- (IOSByteArray *)getBinaryValueWithNSString:(NSString *)name {
  for (id<OrgApacheLuceneDocumentFieldable> __strong field in nil_chk(fields_)) {
    if ([((NSString *) nil_chk([((id<OrgApacheLuceneDocumentFieldable>) nil_chk(field)) name])) isEqual:name] && ([field isBinary])) return [field getBinaryValue];
  }
  return nil;
}

- (NSString *)description {
  JavaLangStringBuilder *buffer = create_JavaLangStringBuilder_init();
  [buffer appendWithNSString:@"Document<"];
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(fields_)) size]; i++) {
    id<OrgApacheLuceneDocumentFieldable> field = [((id<JavaUtilList>) nil_chk(fields_)) getWithInt:i];
    [buffer appendWithNSString:[((id<OrgApacheLuceneDocumentFieldable>) nil_chk(field)) description]];
    if (i != [((id<JavaUtilList>) nil_chk(fields_)) size] - 1) [buffer appendWithNSString:@" "];
  }
  [buffer appendWithNSString:@">"];
  return [buffer description];
}

- (void)dealloc {
  RELEASE_(fields_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 6, 5, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentField;", 0x11, 7, 5, -1, -1, 8, -1 },
    { NULL, "LOrgApacheLuceneDocumentFieldable;", 0x1, 9, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, 10, 5, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x11, -1, -1, -1, 11, -1, -1 },
    { NULL, "[LOrgApacheLuceneDocumentField;", 0x11, 12, 5, -1, -1, 13, -1 },
    { NULL, "[LOrgApacheLuceneDocumentFieldable;", 0x1, 14, 5, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x11, 15, 5, -1, -1, -1, -1 },
    { NULL, "[[B", 0x11, 16, 5, -1, -1, -1, -1 },
    { NULL, "[B", 0x11, 17, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, 18, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setBoostWithFloat:);
  methods[2].selector = @selector(getBoost);
  methods[3].selector = @selector(addWithOrgApacheLuceneDocumentFieldable:);
  methods[4].selector = @selector(removeFieldWithNSString:);
  methods[5].selector = @selector(removeFieldsWithNSString:);
  methods[6].selector = @selector(getFieldWithNSString:);
  methods[7].selector = @selector(getFieldableWithNSString:);
  methods[8].selector = @selector(getWithNSString:);
  methods[9].selector = @selector(getFields);
  methods[10].selector = @selector(getFieldsWithNSString:);
  methods[11].selector = @selector(getFieldablesWithNSString:);
  methods[12].selector = @selector(getValuesWithNSString:);
  methods[13].selector = @selector(getBinaryValuesWithNSString:);
  methods[14].selector = @selector(getBinaryValueWithNSString:);
  methods[15].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fields_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 19, -1 },
    { "boost_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "NO_FIELDS", "[LOrgApacheLuceneDocumentField;", .constantValue.asLong = 0, 0x1a, -1, 20, -1, -1 },
    { "NO_FIELDABLES", "[LOrgApacheLuceneDocumentFieldable;", .constantValue.asLong = 0, 0x1a, -1, 21, -1, -1 },
    { "NO_STRINGS", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 22, -1, -1 },
    { "NO_BYTES", "[[B", .constantValue.asLong = 0, 0x1a, -1, 23, -1, -1 },
  };
  static const void *ptrTable[] = { "setBoost", "F", "add", "LOrgApacheLuceneDocumentFieldable;", "removeField", "LNSString;", "removeFields", "getField", (void *)&OrgApacheLuceneDocumentDocument__Annotations$0, "getFieldable", "get", "()Ljava/util/List<Lorg/apache/lucene/document/Fieldable;>;", "getFields", (void *)&OrgApacheLuceneDocumentDocument__Annotations$1, "getFieldables", "getValues", "getBinaryValues", "getBinaryValue", "toString", "Ljava/util/List<Lorg/apache/lucene/document/Fieldable;>;", &OrgApacheLuceneDocumentDocument_NO_FIELDS, &OrgApacheLuceneDocumentDocument_NO_FIELDABLES, &OrgApacheLuceneDocumentDocument_NO_STRINGS, &OrgApacheLuceneDocumentDocument_NO_BYTES };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentDocument = { "Document", "org.apache.lucene.document", ptrTable, methods, fields, 7, 0x11, 16, 6, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentDocument;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneDocumentDocument class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneDocumentDocument_NO_FIELDS, [IOSObjectArray newArrayWithLength:0 type:OrgApacheLuceneDocumentField_class_()]);
    JreStrongAssignAndConsume(&OrgApacheLuceneDocumentDocument_NO_FIELDABLES, [IOSObjectArray newArrayWithLength:0 type:OrgApacheLuceneDocumentFieldable_class_()]);
    JreStrongAssignAndConsume(&OrgApacheLuceneDocumentDocument_NO_STRINGS, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgApacheLuceneDocumentDocument_NO_BYTES, [IOSObjectArray newArrayWithLength:0 type:IOSClass_byteArray(1)]);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneDocumentDocument)
  }
}

@end

void OrgApacheLuceneDocumentDocument_init(OrgApacheLuceneDocumentDocument *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->fields_, new_JavaUtilArrayList_init());
  self->boost_ = 1.0f;
}

OrgApacheLuceneDocumentDocument *new_OrgApacheLuceneDocumentDocument_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentDocument, init)
}

OrgApacheLuceneDocumentDocument *create_OrgApacheLuceneDocumentDocument_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentDocument, init)
}

IOSObjectArray *OrgApacheLuceneDocumentDocument__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneDocumentDocument__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneDocumentDocument)
