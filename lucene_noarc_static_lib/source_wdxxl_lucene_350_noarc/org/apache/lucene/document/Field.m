//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/document/Field.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Reader.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/annotation/Annotation.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/document/AbstractField.h"
#include "org/apache/lucene/document/Field.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/util/StringHelper.h"

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$0();

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$1();

__attribute__((unused)) static void OrgApacheLuceneDocumentField_Store_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Store *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_Store_1 : OrgApacheLuceneDocumentField_Store < NSCopying >

- (jboolean)isStored;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_Store_1)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_Store_1_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Store_1 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_Store_2 : OrgApacheLuceneDocumentField_Store < NSCopying >

- (jboolean)isStored;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_Store_2)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_Store_2_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Store_2 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static void OrgApacheLuceneDocumentField_Index_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_Index_1 : OrgApacheLuceneDocumentField_Index < NSCopying >

- (jboolean)isIndexed;

- (jboolean)isAnalyzed;

- (jboolean)omitNorms;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_Index_1)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_Index_1_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_1 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_Index_2 : OrgApacheLuceneDocumentField_Index < NSCopying >

- (jboolean)isIndexed;

- (jboolean)isAnalyzed;

- (jboolean)omitNorms;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_Index_2)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_Index_2_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_2 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_Index_3 : OrgApacheLuceneDocumentField_Index < NSCopying >

- (jboolean)isIndexed;

- (jboolean)isAnalyzed;

- (jboolean)omitNorms;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_Index_3)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_Index_3_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_3 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_Index_4 : OrgApacheLuceneDocumentField_Index < NSCopying >

- (jboolean)isIndexed;

- (jboolean)isAnalyzed;

- (jboolean)omitNorms;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_Index_4)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_Index_4_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_4 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_Index_5 : OrgApacheLuceneDocumentField_Index < NSCopying >

- (jboolean)isIndexed;

- (jboolean)isAnalyzed;

- (jboolean)omitNorms;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_Index_5)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_Index_5_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_5 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static void OrgApacheLuceneDocumentField_TermVector_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_TermVector_1 : OrgApacheLuceneDocumentField_TermVector < NSCopying >

- (jboolean)isStored;

- (jboolean)withPositions;

- (jboolean)withOffsets;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_TermVector_1)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_TermVector_1_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_1 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_TermVector_2 : OrgApacheLuceneDocumentField_TermVector < NSCopying >

- (jboolean)isStored;

- (jboolean)withPositions;

- (jboolean)withOffsets;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_TermVector_2)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_TermVector_2_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_2 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_TermVector_3 : OrgApacheLuceneDocumentField_TermVector < NSCopying >

- (jboolean)isStored;

- (jboolean)withPositions;

- (jboolean)withOffsets;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_TermVector_3)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_TermVector_3_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_3 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_TermVector_4 : OrgApacheLuceneDocumentField_TermVector < NSCopying >

- (jboolean)isStored;

- (jboolean)withPositions;

- (jboolean)withOffsets;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_TermVector_4)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_TermVector_4_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_4 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_TermVector_5 : OrgApacheLuceneDocumentField_TermVector < NSCopying >

- (jboolean)isStored;

- (jboolean)withPositions;

- (jboolean)withOffsets;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_TermVector_5)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_TermVector_5_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_5 *self, NSString *__name, jint __ordinal);

@implementation OrgApacheLuceneDocumentField

- (NSString *)stringValue {
  return [fieldsData_ isKindOfClass:[NSString class]] ? (NSString *) cast_chk(fieldsData_, [NSString class]) : nil;
}

- (JavaIoReader *)readerValue {
  return [fieldsData_ isKindOfClass:[JavaIoReader class]] ? (JavaIoReader *) cast_chk(fieldsData_, [JavaIoReader class]) : nil;
}

- (OrgApacheLuceneAnalysisTokenStream *)tokenStreamValue {
  return tokenStream_;
}

- (void)setValueWithNSString:(NSString *)value {
  if (isBinary_) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"cannot set a String value on a binary field");
  }
  JreStrongAssign(&fieldsData_, value);
}

- (void)setValueWithJavaIoReader:(JavaIoReader *)value {
  if (isBinary_) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"cannot set a Reader value on a binary field");
  }
  if (isStored_) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"cannot set a Reader value on a stored field");
  }
  JreStrongAssign(&fieldsData_, value);
}

- (void)setValueWithByteArray:(IOSByteArray *)value {
  if (!isBinary_) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"cannot set a byte[] value on a non-binary field");
  }
  JreStrongAssign(&fieldsData_, value);
  binaryLength_ = ((IOSByteArray *) nil_chk(value))->size_;
  binaryOffset_ = 0;
}

- (void)setValueWithByteArray:(IOSByteArray *)value
                      withInt:(jint)offset
                      withInt:(jint)length {
  if (!isBinary_) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"cannot set a byte[] value on a non-binary field");
  }
  JreStrongAssign(&fieldsData_, value);
  binaryLength_ = length;
  binaryOffset_ = offset;
}

- (void)setTokenStreamWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)tokenStream {
  self->isIndexed_ = true;
  self->isTokenized_ = true;
  JreStrongAssign(&self->tokenStream_, tokenStream);
}

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)value
withOrgApacheLuceneDocumentField_Store:(OrgApacheLuceneDocumentField_Store *)store
withOrgApacheLuceneDocumentField_Index:(OrgApacheLuceneDocumentField_Index *)index {
  OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_(self, name, value, store, index);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)value
withOrgApacheLuceneDocumentField_Store:(OrgApacheLuceneDocumentField_Store *)store
withOrgApacheLuceneDocumentField_Index:(OrgApacheLuceneDocumentField_Index *)index
withOrgApacheLuceneDocumentField_TermVector:(OrgApacheLuceneDocumentField_TermVector *)termVector {
  OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(self, name, value, store, index, termVector);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                     withBoolean:(jboolean)internName
                    withNSString:(NSString *)value
withOrgApacheLuceneDocumentField_Store:(OrgApacheLuceneDocumentField_Store *)store
withOrgApacheLuceneDocumentField_Index:(OrgApacheLuceneDocumentField_Index *)index
withOrgApacheLuceneDocumentField_TermVector:(OrgApacheLuceneDocumentField_TermVector *)termVector {
  OrgApacheLuceneDocumentField_initWithNSString_withBoolean_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(self, name, internName, value, store, index, termVector);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                withJavaIoReader:(JavaIoReader *)reader {
  OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_(self, name, reader);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                withJavaIoReader:(JavaIoReader *)reader
withOrgApacheLuceneDocumentField_TermVector:(OrgApacheLuceneDocumentField_TermVector *)termVector {
  OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentField_TermVector_(self, name, reader, termVector);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)tokenStream {
  OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_(self, name, tokenStream);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)tokenStream
withOrgApacheLuceneDocumentField_TermVector:(OrgApacheLuceneDocumentField_TermVector *)termVector {
  OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentField_TermVector_(self, name, tokenStream, termVector);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                   withByteArray:(IOSByteArray *)value
withOrgApacheLuceneDocumentField_Store:(OrgApacheLuceneDocumentField_Store *)store {
  OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withOrgApacheLuceneDocumentField_Store_(self, name, value, store);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                   withByteArray:(IOSByteArray *)value {
  OrgApacheLuceneDocumentField_initWithNSString_withByteArray_(self, name, value);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                   withByteArray:(IOSByteArray *)value
                         withInt:(jint)offset
                         withInt:(jint)length
withOrgApacheLuceneDocumentField_Store:(OrgApacheLuceneDocumentField_Store *)store {
  OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_withOrgApacheLuceneDocumentField_Store_(self, name, value, offset, length, store);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                   withByteArray:(IOSByteArray *)value
                         withInt:(jint)offset
                         withInt:(jint)length {
  OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_(self, name, value, offset, length);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoReader;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 8, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 9, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 10, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 11, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 12, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 13, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 14, -1, -1, 15, -1 },
    { NULL, NULL, 0x1, -1, 16, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 17, -1, -1, 18, -1 },
    { NULL, NULL, 0x1, -1, 19, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(stringValue);
  methods[1].selector = @selector(readerValue);
  methods[2].selector = @selector(tokenStreamValue);
  methods[3].selector = @selector(setValueWithNSString:);
  methods[4].selector = @selector(setValueWithJavaIoReader:);
  methods[5].selector = @selector(setValueWithByteArray:);
  methods[6].selector = @selector(setValueWithByteArray:withInt:withInt:);
  methods[7].selector = @selector(setTokenStreamWithOrgApacheLuceneAnalysisTokenStream:);
  methods[8].selector = @selector(initWithNSString:withNSString:withOrgApacheLuceneDocumentField_Store:withOrgApacheLuceneDocumentField_Index:);
  methods[9].selector = @selector(initWithNSString:withNSString:withOrgApacheLuceneDocumentField_Store:withOrgApacheLuceneDocumentField_Index:withOrgApacheLuceneDocumentField_TermVector:);
  methods[10].selector = @selector(initWithNSString:withBoolean:withNSString:withOrgApacheLuceneDocumentField_Store:withOrgApacheLuceneDocumentField_Index:withOrgApacheLuceneDocumentField_TermVector:);
  methods[11].selector = @selector(initWithNSString:withJavaIoReader:);
  methods[12].selector = @selector(initWithNSString:withJavaIoReader:withOrgApacheLuceneDocumentField_TermVector:);
  methods[13].selector = @selector(initWithNSString:withOrgApacheLuceneAnalysisTokenStream:);
  methods[14].selector = @selector(initWithNSString:withOrgApacheLuceneAnalysisTokenStream:withOrgApacheLuceneDocumentField_TermVector:);
  methods[15].selector = @selector(initWithNSString:withByteArray:withOrgApacheLuceneDocumentField_Store:);
  methods[16].selector = @selector(initWithNSString:withByteArray:);
  methods[17].selector = @selector(initWithNSString:withByteArray:withInt:withInt:withOrgApacheLuceneDocumentField_Store:);
  methods[18].selector = @selector(initWithNSString:withByteArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setValue", "LNSString;", "LJavaIoReader;", "[B", "[BII", "setTokenStream", "LOrgApacheLuceneAnalysisTokenStream;", "LNSString;LNSString;LOrgApacheLuceneDocumentField_Store;LOrgApacheLuceneDocumentField_Index;", "LNSString;LNSString;LOrgApacheLuceneDocumentField_Store;LOrgApacheLuceneDocumentField_Index;LOrgApacheLuceneDocumentField_TermVector;", "LNSString;ZLNSString;LOrgApacheLuceneDocumentField_Store;LOrgApacheLuceneDocumentField_Index;LOrgApacheLuceneDocumentField_TermVector;", "LNSString;LJavaIoReader;", "LNSString;LJavaIoReader;LOrgApacheLuceneDocumentField_TermVector;", "LNSString;LOrgApacheLuceneAnalysisTokenStream;", "LNSString;LOrgApacheLuceneAnalysisTokenStream;LOrgApacheLuceneDocumentField_TermVector;", "LNSString;[BLOrgApacheLuceneDocumentField_Store;", (void *)&OrgApacheLuceneDocumentField__Annotations$0, "LNSString;[B", "LNSString;[BIILOrgApacheLuceneDocumentField_Store;", (void *)&OrgApacheLuceneDocumentField__Annotations$1, "LNSString;[BII", "LOrgApacheLuceneDocumentField_Store;LOrgApacheLuceneDocumentField_Index;LOrgApacheLuceneDocumentField_TermVector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField = { "Field", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0x11, 19, 0, -1, 20, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField;
}

@end

void OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_(OrgApacheLuceneDocumentField *self, NSString *name, NSString *value, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index) {
  OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(self, name, value, store, index, JreLoadEnum(OrgApacheLuceneDocumentField_TermVector, NO));
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_(NSString *name, NSString *value, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_, name, value, store, index)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_(NSString *name, NSString *value, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_, name, value, store, index)
}

void OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(OrgApacheLuceneDocumentField *self, NSString *name, NSString *value, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index, OrgApacheLuceneDocumentField_TermVector *termVector) {
  OrgApacheLuceneDocumentField_initWithNSString_withBoolean_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(self, name, true, value, store, index, termVector);
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(NSString *name, NSString *value, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index, OrgApacheLuceneDocumentField_TermVector *termVector) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_, name, value, store, index, termVector)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(NSString *name, NSString *value, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index, OrgApacheLuceneDocumentField_TermVector *termVector) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_, name, value, store, index, termVector)
}

void OrgApacheLuceneDocumentField_initWithNSString_withBoolean_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(OrgApacheLuceneDocumentField *self, NSString *name, jboolean internName, NSString *value, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index, OrgApacheLuceneDocumentField_TermVector *termVector) {
  OrgApacheLuceneDocumentAbstractField_init(self);
  if (name == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"name cannot be null");
  if (value == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"value cannot be null");
  if (index == JreLoadEnum(OrgApacheLuceneDocumentField_Index, NO) && store == JreLoadEnum(OrgApacheLuceneDocumentField_Store, NO)) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"it doesn't make sense to have a field that is neither indexed nor stored");
  if (index == JreLoadEnum(OrgApacheLuceneDocumentField_Index, NO) && termVector != JreLoadEnum(OrgApacheLuceneDocumentField_TermVector, NO)) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"cannot store term vector information for a field that is not indexed");
  if (internName) name = OrgApacheLuceneUtilStringHelper_internWithNSString_(name);
  JreStrongAssign(&self->name_, name);
  JreStrongAssign(&self->fieldsData_, value);
  self->isStored_ = [((OrgApacheLuceneDocumentField_Store *) nil_chk(store)) isStored];
  self->isIndexed_ = [((OrgApacheLuceneDocumentField_Index *) nil_chk(index)) isIndexed];
  self->isTokenized_ = [index isAnalyzed];
  self->omitNorms_ = [index omitNorms];
  if (index == JreLoadEnum(OrgApacheLuceneDocumentField_Index, NO)) {
    JreStrongAssign(&self->indexOptions_, JreLoadEnum(OrgApacheLuceneIndexFieldInfo_IndexOptions, DOCS_AND_FREQS_AND_POSITIONS));
  }
  self->isBinary_ = false;
  [self setStoreTermVectorWithOrgApacheLuceneDocumentField_TermVector:termVector];
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withBoolean_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(NSString *name, jboolean internName, NSString *value, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index, OrgApacheLuceneDocumentField_TermVector *termVector) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withBoolean_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_, name, internName, value, store, index, termVector)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withBoolean_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(NSString *name, jboolean internName, NSString *value, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index, OrgApacheLuceneDocumentField_TermVector *termVector) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withBoolean_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_, name, internName, value, store, index, termVector)
}

void OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_(OrgApacheLuceneDocumentField *self, NSString *name, JavaIoReader *reader) {
  OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentField_TermVector_(self, name, reader, JreLoadEnum(OrgApacheLuceneDocumentField_TermVector, NO));
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_(NSString *name, JavaIoReader *reader) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withJavaIoReader_, name, reader)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_(NSString *name, JavaIoReader *reader) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withJavaIoReader_, name, reader)
}

void OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentField_TermVector_(OrgApacheLuceneDocumentField *self, NSString *name, JavaIoReader *reader, OrgApacheLuceneDocumentField_TermVector *termVector) {
  OrgApacheLuceneDocumentAbstractField_init(self);
  if (name == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"name cannot be null");
  if (reader == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"reader cannot be null");
  JreStrongAssign(&self->name_, OrgApacheLuceneUtilStringHelper_internWithNSString_(name));
  JreStrongAssign(&self->fieldsData_, reader);
  self->isStored_ = false;
  self->isIndexed_ = true;
  self->isTokenized_ = true;
  self->isBinary_ = false;
  [self setStoreTermVectorWithOrgApacheLuceneDocumentField_TermVector:termVector];
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentField_TermVector_(NSString *name, JavaIoReader *reader, OrgApacheLuceneDocumentField_TermVector *termVector) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentField_TermVector_, name, reader, termVector)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentField_TermVector_(NSString *name, JavaIoReader *reader, OrgApacheLuceneDocumentField_TermVector *termVector) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentField_TermVector_, name, reader, termVector)
}

void OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneDocumentField *self, NSString *name, OrgApacheLuceneAnalysisTokenStream *tokenStream) {
  OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentField_TermVector_(self, name, tokenStream, JreLoadEnum(OrgApacheLuceneDocumentField_TermVector, NO));
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_(NSString *name, OrgApacheLuceneAnalysisTokenStream *tokenStream) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withOrgApacheLuceneAnalysisTokenStream_, name, tokenStream)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_(NSString *name, OrgApacheLuceneAnalysisTokenStream *tokenStream) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withOrgApacheLuceneAnalysisTokenStream_, name, tokenStream)
}

void OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentField_TermVector_(OrgApacheLuceneDocumentField *self, NSString *name, OrgApacheLuceneAnalysisTokenStream *tokenStream, OrgApacheLuceneDocumentField_TermVector *termVector) {
  OrgApacheLuceneDocumentAbstractField_init(self);
  if (name == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"name cannot be null");
  if (tokenStream == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"tokenStream cannot be null");
  JreStrongAssign(&self->name_, OrgApacheLuceneUtilStringHelper_internWithNSString_(name));
  JreStrongAssign(&self->fieldsData_, nil);
  JreStrongAssign(&self->tokenStream_, tokenStream);
  self->isStored_ = false;
  self->isIndexed_ = true;
  self->isTokenized_ = true;
  self->isBinary_ = false;
  [self setStoreTermVectorWithOrgApacheLuceneDocumentField_TermVector:termVector];
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentField_TermVector_(NSString *name, OrgApacheLuceneAnalysisTokenStream *tokenStream, OrgApacheLuceneDocumentField_TermVector *termVector) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentField_TermVector_, name, tokenStream, termVector)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentField_TermVector_(NSString *name, OrgApacheLuceneAnalysisTokenStream *tokenStream, OrgApacheLuceneDocumentField_TermVector *termVector) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentField_TermVector_, name, tokenStream, termVector)
}

void OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withOrgApacheLuceneDocumentField_Store_(OrgApacheLuceneDocumentField *self, NSString *name, IOSByteArray *value, OrgApacheLuceneDocumentField_Store *store) {
  OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_(self, name, value, 0, ((IOSByteArray *) nil_chk(value))->size_);
  if (store == JreLoadEnum(OrgApacheLuceneDocumentField_Store, NO)) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"binary values can't be unstored");
  }
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withOrgApacheLuceneDocumentField_Store_(NSString *name, IOSByteArray *value, OrgApacheLuceneDocumentField_Store *store) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withByteArray_withOrgApacheLuceneDocumentField_Store_, name, value, store)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withOrgApacheLuceneDocumentField_Store_(NSString *name, IOSByteArray *value, OrgApacheLuceneDocumentField_Store *store) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withByteArray_withOrgApacheLuceneDocumentField_Store_, name, value, store)
}

void OrgApacheLuceneDocumentField_initWithNSString_withByteArray_(OrgApacheLuceneDocumentField *self, NSString *name, IOSByteArray *value) {
  OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_(self, name, value, 0, ((IOSByteArray *) nil_chk(value))->size_);
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withByteArray_(NSString *name, IOSByteArray *value) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withByteArray_, name, value)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withByteArray_(NSString *name, IOSByteArray *value) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withByteArray_, name, value)
}

void OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_withOrgApacheLuceneDocumentField_Store_(OrgApacheLuceneDocumentField *self, NSString *name, IOSByteArray *value, jint offset, jint length, OrgApacheLuceneDocumentField_Store *store) {
  OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_(self, name, value, offset, length);
  if (store == JreLoadEnum(OrgApacheLuceneDocumentField_Store, NO)) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"binary values can't be unstored");
  }
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_withOrgApacheLuceneDocumentField_Store_(NSString *name, IOSByteArray *value, jint offset, jint length, OrgApacheLuceneDocumentField_Store *store) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withByteArray_withInt_withInt_withOrgApacheLuceneDocumentField_Store_, name, value, offset, length, store)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_withOrgApacheLuceneDocumentField_Store_(NSString *name, IOSByteArray *value, jint offset, jint length, OrgApacheLuceneDocumentField_Store *store) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withByteArray_withInt_withInt_withOrgApacheLuceneDocumentField_Store_, name, value, offset, length, store)
}

void OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_(OrgApacheLuceneDocumentField *self, NSString *name, IOSByteArray *value, jint offset, jint length) {
  OrgApacheLuceneDocumentAbstractField_init(self);
  if (name == nil) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"name cannot be null");
  if (value == nil) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"value cannot be null");
  JreStrongAssign(&self->name_, OrgApacheLuceneUtilStringHelper_internWithNSString_(name));
  JreStrongAssign(&self->fieldsData_, value);
  self->isStored_ = true;
  self->isIndexed_ = false;
  self->isTokenized_ = false;
  JreStrongAssign(&self->indexOptions_, JreLoadEnum(OrgApacheLuceneIndexFieldInfo_IndexOptions, DOCS_AND_FREQS_AND_POSITIONS));
  self->omitNorms_ = true;
  self->isBinary_ = true;
  self->binaryLength_ = length;
  self->binaryOffset_ = offset;
  [self setStoreTermVectorWithOrgApacheLuceneDocumentField_TermVector:JreLoadEnum(OrgApacheLuceneDocumentField_TermVector, NO)];
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_(NSString *name, IOSByteArray *value, jint offset, jint length) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withByteArray_withInt_withInt_, name, value, offset, length)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_(NSString *name, IOSByteArray *value, jint offset, jint length) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withByteArray_withInt_withInt_, name, value, offset, length)
}

IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneDocumentField)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneDocumentField_Store)

OrgApacheLuceneDocumentField_Store *OrgApacheLuceneDocumentField_Store_values_[2];

@implementation OrgApacheLuceneDocumentField_Store

- (jboolean)isStored {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (IOSObjectArray *)values {
  return OrgApacheLuceneDocumentField_Store_values();
}

+ (OrgApacheLuceneDocumentField_Store *)valueOfWithNSString:(NSString *)name {
  return OrgApacheLuceneDocumentField_Store_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgApacheLuceneDocumentField_Store;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentField_Store;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isStored);
  methods[1].selector = @selector(values);
  methods[2].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "YES", "LOrgApacheLuceneDocumentField_Store;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "NO", "LOrgApacheLuceneDocumentField_Store;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgApacheLuceneDocumentField_Store, YES), &JreEnum(OrgApacheLuceneDocumentField_Store, NO), "LOrgApacheLuceneDocumentField;", "Ljava/lang/Enum<Lorg/apache/lucene/document/Field$Store;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_Store = { "Store", "org.apache.lucene.document", ptrTable, methods, fields, 7, 0x4409, 3, 2, 4, -1, -1, 5, -1 };
  return &_OrgApacheLuceneDocumentField_Store;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneDocumentField_Store class]) {
    size_t allocSize = 0;
    size_t objSize_YES = class_getInstanceSize([OrgApacheLuceneDocumentField_Store_1 class]);
    allocSize += objSize_YES;
    size_t objSize_NO = class_getInstanceSize([OrgApacheLuceneDocumentField_Store_2 class]);
    allocSize += objSize_NO;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(OrgApacheLuceneDocumentField_Store, YES) = e = objc_constructInstance([OrgApacheLuceneDocumentField_Store_1 class], (void *)ptr), ptr += objSize_YES);
    OrgApacheLuceneDocumentField_Store_1_initWithNSString_withInt_(e, @"YES", 0);
    (JreEnum(OrgApacheLuceneDocumentField_Store, NO) = e = objc_constructInstance([OrgApacheLuceneDocumentField_Store_2 class], (void *)ptr), ptr += objSize_NO);
    OrgApacheLuceneDocumentField_Store_2_initWithNSString_withInt_(e, @"NO", 1);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneDocumentField_Store)
  }
}

@end

void OrgApacheLuceneDocumentField_Store_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Store *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgApacheLuceneDocumentField_Store_values() {
  OrgApacheLuceneDocumentField_Store_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheLuceneDocumentField_Store_values_ count:2 type:OrgApacheLuceneDocumentField_Store_class_()];
}

OrgApacheLuceneDocumentField_Store *OrgApacheLuceneDocumentField_Store_valueOfWithNSString_(NSString *name) {
  OrgApacheLuceneDocumentField_Store_initialize();
  for (int i = 0; i < 2; i++) {
    OrgApacheLuceneDocumentField_Store *e = OrgApacheLuceneDocumentField_Store_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgApacheLuceneDocumentField_Store *OrgApacheLuceneDocumentField_Store_fromOrdinal(NSUInteger ordinal) {
  OrgApacheLuceneDocumentField_Store_initialize();
  if (ordinal >= 2) {
    return nil;
  }
  return OrgApacheLuceneDocumentField_Store_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneDocumentField_Store)

@implementation OrgApacheLuceneDocumentField_Store_1

- (jboolean)isStored {
  return true;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_Store_1 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isStored);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_Store;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_Store_1 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_Store_1;
}

@end

void OrgApacheLuceneDocumentField_Store_1_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Store_1 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_Store_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneDocumentField_Store_2

- (jboolean)isStored {
  return false;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_Store_2 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isStored);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_Store;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_Store_2 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_Store_2;
}

@end

void OrgApacheLuceneDocumentField_Store_2_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Store_2 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_Store_initWithNSString_withInt_(self, __name, __ordinal);
}

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneDocumentField_Index)

OrgApacheLuceneDocumentField_Index *OrgApacheLuceneDocumentField_Index_values_[5];

@implementation OrgApacheLuceneDocumentField_Index

+ (OrgApacheLuceneDocumentField_Index *)toIndexWithBoolean:(jboolean)indexed
                                               withBoolean:(jboolean)analyzed {
  return OrgApacheLuceneDocumentField_Index_toIndexWithBoolean_withBoolean_(indexed, analyzed);
}

+ (OrgApacheLuceneDocumentField_Index *)toIndexWithBoolean:(jboolean)indexed
                                               withBoolean:(jboolean)analyzed
                                               withBoolean:(jboolean)omitNorms {
  return OrgApacheLuceneDocumentField_Index_toIndexWithBoolean_withBoolean_withBoolean_(indexed, analyzed, omitNorms);
}

- (jboolean)isIndexed {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isAnalyzed {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)omitNorms {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (IOSObjectArray *)values {
  return OrgApacheLuceneDocumentField_Index_values();
}

+ (OrgApacheLuceneDocumentField_Index *)valueOfWithNSString:(NSString *)name {
  return OrgApacheLuceneDocumentField_Index_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgApacheLuceneDocumentField_Index;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentField_Index;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgApacheLuceneDocumentField_Index;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentField_Index;", 0x9, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(toIndexWithBoolean:withBoolean:);
  methods[1].selector = @selector(toIndexWithBoolean:withBoolean:withBoolean:);
  methods[2].selector = @selector(isIndexed);
  methods[3].selector = @selector(isAnalyzed);
  methods[4].selector = @selector(omitNorms);
  methods[5].selector = @selector(values);
  methods[6].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NO", "LOrgApacheLuceneDocumentField_Index;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "ANALYZED", "LOrgApacheLuceneDocumentField_Index;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "NOT_ANALYZED", "LOrgApacheLuceneDocumentField_Index;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "NOT_ANALYZED_NO_NORMS", "LOrgApacheLuceneDocumentField_Index;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "ANALYZED_NO_NORMS", "LOrgApacheLuceneDocumentField_Index;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
  };
  static const void *ptrTable[] = { "toIndex", "ZZ", "ZZZ", "valueOf", "LNSString;", &JreEnum(OrgApacheLuceneDocumentField_Index, NO), &JreEnum(OrgApacheLuceneDocumentField_Index, ANALYZED), &JreEnum(OrgApacheLuceneDocumentField_Index, NOT_ANALYZED), &JreEnum(OrgApacheLuceneDocumentField_Index, NOT_ANALYZED_NO_NORMS), &JreEnum(OrgApacheLuceneDocumentField_Index, ANALYZED_NO_NORMS), "LOrgApacheLuceneDocumentField;", "Ljava/lang/Enum<Lorg/apache/lucene/document/Field$Index;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_Index = { "Index", "org.apache.lucene.document", ptrTable, methods, fields, 7, 0x4409, 7, 5, 10, -1, -1, 11, -1 };
  return &_OrgApacheLuceneDocumentField_Index;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneDocumentField_Index class]) {
    size_t allocSize = 0;
    size_t objSize_NO = class_getInstanceSize([OrgApacheLuceneDocumentField_Index_1 class]);
    allocSize += objSize_NO;
    size_t objSize_ANALYZED = class_getInstanceSize([OrgApacheLuceneDocumentField_Index_2 class]);
    allocSize += objSize_ANALYZED;
    size_t objSize_NOT_ANALYZED = class_getInstanceSize([OrgApacheLuceneDocumentField_Index_3 class]);
    allocSize += objSize_NOT_ANALYZED;
    size_t objSize_NOT_ANALYZED_NO_NORMS = class_getInstanceSize([OrgApacheLuceneDocumentField_Index_4 class]);
    allocSize += objSize_NOT_ANALYZED_NO_NORMS;
    size_t objSize_ANALYZED_NO_NORMS = class_getInstanceSize([OrgApacheLuceneDocumentField_Index_5 class]);
    allocSize += objSize_ANALYZED_NO_NORMS;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(OrgApacheLuceneDocumentField_Index, NO) = e = objc_constructInstance([OrgApacheLuceneDocumentField_Index_1 class], (void *)ptr), ptr += objSize_NO);
    OrgApacheLuceneDocumentField_Index_1_initWithNSString_withInt_(e, @"NO", 0);
    (JreEnum(OrgApacheLuceneDocumentField_Index, ANALYZED) = e = objc_constructInstance([OrgApacheLuceneDocumentField_Index_2 class], (void *)ptr), ptr += objSize_ANALYZED);
    OrgApacheLuceneDocumentField_Index_2_initWithNSString_withInt_(e, @"ANALYZED", 1);
    (JreEnum(OrgApacheLuceneDocumentField_Index, NOT_ANALYZED) = e = objc_constructInstance([OrgApacheLuceneDocumentField_Index_3 class], (void *)ptr), ptr += objSize_NOT_ANALYZED);
    OrgApacheLuceneDocumentField_Index_3_initWithNSString_withInt_(e, @"NOT_ANALYZED", 2);
    (JreEnum(OrgApacheLuceneDocumentField_Index, NOT_ANALYZED_NO_NORMS) = e = objc_constructInstance([OrgApacheLuceneDocumentField_Index_4 class], (void *)ptr), ptr += objSize_NOT_ANALYZED_NO_NORMS);
    OrgApacheLuceneDocumentField_Index_4_initWithNSString_withInt_(e, @"NOT_ANALYZED_NO_NORMS", 3);
    (JreEnum(OrgApacheLuceneDocumentField_Index, ANALYZED_NO_NORMS) = e = objc_constructInstance([OrgApacheLuceneDocumentField_Index_5 class], (void *)ptr), ptr += objSize_ANALYZED_NO_NORMS);
    OrgApacheLuceneDocumentField_Index_5_initWithNSString_withInt_(e, @"ANALYZED_NO_NORMS", 4);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneDocumentField_Index)
  }
}

@end

void OrgApacheLuceneDocumentField_Index_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgApacheLuceneDocumentField_Index *OrgApacheLuceneDocumentField_Index_toIndexWithBoolean_withBoolean_(jboolean indexed, jboolean analyzed) {
  OrgApacheLuceneDocumentField_Index_initialize();
  return OrgApacheLuceneDocumentField_Index_toIndexWithBoolean_withBoolean_withBoolean_(indexed, analyzed, false);
}

OrgApacheLuceneDocumentField_Index *OrgApacheLuceneDocumentField_Index_toIndexWithBoolean_withBoolean_withBoolean_(jboolean indexed, jboolean analyzed, jboolean omitNorms) {
  OrgApacheLuceneDocumentField_Index_initialize();
  if (!indexed) {
    return JreEnum(OrgApacheLuceneDocumentField_Index, NO);
  }
  if (!omitNorms) {
    if (analyzed) {
      return JreEnum(OrgApacheLuceneDocumentField_Index, ANALYZED);
    }
    return JreEnum(OrgApacheLuceneDocumentField_Index, NOT_ANALYZED);
  }
  if (analyzed) {
    return JreEnum(OrgApacheLuceneDocumentField_Index, ANALYZED_NO_NORMS);
  }
  return JreEnum(OrgApacheLuceneDocumentField_Index, NOT_ANALYZED_NO_NORMS);
}

IOSObjectArray *OrgApacheLuceneDocumentField_Index_values() {
  OrgApacheLuceneDocumentField_Index_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheLuceneDocumentField_Index_values_ count:5 type:OrgApacheLuceneDocumentField_Index_class_()];
}

OrgApacheLuceneDocumentField_Index *OrgApacheLuceneDocumentField_Index_valueOfWithNSString_(NSString *name) {
  OrgApacheLuceneDocumentField_Index_initialize();
  for (int i = 0; i < 5; i++) {
    OrgApacheLuceneDocumentField_Index *e = OrgApacheLuceneDocumentField_Index_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgApacheLuceneDocumentField_Index *OrgApacheLuceneDocumentField_Index_fromOrdinal(NSUInteger ordinal) {
  OrgApacheLuceneDocumentField_Index_initialize();
  if (ordinal >= 5) {
    return nil;
  }
  return OrgApacheLuceneDocumentField_Index_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneDocumentField_Index)

@implementation OrgApacheLuceneDocumentField_Index_1

- (jboolean)isIndexed {
  return false;
}

- (jboolean)isAnalyzed {
  return false;
}

- (jboolean)omitNorms {
  return true;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_Index_1 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isIndexed);
  methods[1].selector = @selector(isAnalyzed);
  methods[2].selector = @selector(omitNorms);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_Index;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_Index_1 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_Index_1;
}

@end

void OrgApacheLuceneDocumentField_Index_1_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_1 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_Index_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneDocumentField_Index_2

- (jboolean)isIndexed {
  return true;
}

- (jboolean)isAnalyzed {
  return true;
}

- (jboolean)omitNorms {
  return false;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_Index_2 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isIndexed);
  methods[1].selector = @selector(isAnalyzed);
  methods[2].selector = @selector(omitNorms);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_Index;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_Index_2 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_Index_2;
}

@end

void OrgApacheLuceneDocumentField_Index_2_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_2 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_Index_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneDocumentField_Index_3

- (jboolean)isIndexed {
  return true;
}

- (jboolean)isAnalyzed {
  return false;
}

- (jboolean)omitNorms {
  return false;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_Index_3 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isIndexed);
  methods[1].selector = @selector(isAnalyzed);
  methods[2].selector = @selector(omitNorms);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_Index;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_Index_3 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_Index_3;
}

@end

void OrgApacheLuceneDocumentField_Index_3_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_3 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_Index_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneDocumentField_Index_4

- (jboolean)isIndexed {
  return true;
}

- (jboolean)isAnalyzed {
  return false;
}

- (jboolean)omitNorms {
  return true;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_Index_4 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isIndexed);
  methods[1].selector = @selector(isAnalyzed);
  methods[2].selector = @selector(omitNorms);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_Index;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_Index_4 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_Index_4;
}

@end

void OrgApacheLuceneDocumentField_Index_4_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_4 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_Index_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneDocumentField_Index_5

- (jboolean)isIndexed {
  return true;
}

- (jboolean)isAnalyzed {
  return true;
}

- (jboolean)omitNorms {
  return true;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_Index_5 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isIndexed);
  methods[1].selector = @selector(isAnalyzed);
  methods[2].selector = @selector(omitNorms);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_Index;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_Index_5 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_Index_5;
}

@end

void OrgApacheLuceneDocumentField_Index_5_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_5 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_Index_initWithNSString_withInt_(self, __name, __ordinal);
}

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneDocumentField_TermVector)

OrgApacheLuceneDocumentField_TermVector *OrgApacheLuceneDocumentField_TermVector_values_[5];

@implementation OrgApacheLuceneDocumentField_TermVector

+ (OrgApacheLuceneDocumentField_TermVector *)toTermVectorWithBoolean:(jboolean)stored
                                                         withBoolean:(jboolean)withOffsets
                                                         withBoolean:(jboolean)withPositions {
  return OrgApacheLuceneDocumentField_TermVector_toTermVectorWithBoolean_withBoolean_withBoolean_(stored, withOffsets, withPositions);
}

- (jboolean)isStored {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)withPositions {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)withOffsets {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (IOSObjectArray *)values {
  return OrgApacheLuceneDocumentField_TermVector_values();
}

+ (OrgApacheLuceneDocumentField_TermVector *)valueOfWithNSString:(NSString *)name {
  return OrgApacheLuceneDocumentField_TermVector_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgApacheLuceneDocumentField_TermVector;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgApacheLuceneDocumentField_TermVector;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentField_TermVector;", 0x9, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(toTermVectorWithBoolean:withBoolean:withBoolean:);
  methods[1].selector = @selector(isStored);
  methods[2].selector = @selector(withPositions);
  methods[3].selector = @selector(withOffsets);
  methods[4].selector = @selector(values);
  methods[5].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NO", "LOrgApacheLuceneDocumentField_TermVector;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "YES", "LOrgApacheLuceneDocumentField_TermVector;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "WITH_POSITIONS", "LOrgApacheLuceneDocumentField_TermVector;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "WITH_OFFSETS", "LOrgApacheLuceneDocumentField_TermVector;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "WITH_POSITIONS_OFFSETS", "LOrgApacheLuceneDocumentField_TermVector;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
  };
  static const void *ptrTable[] = { "toTermVector", "ZZZ", "valueOf", "LNSString;", &JreEnum(OrgApacheLuceneDocumentField_TermVector, NO), &JreEnum(OrgApacheLuceneDocumentField_TermVector, YES), &JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_POSITIONS), &JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_OFFSETS), &JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_POSITIONS_OFFSETS), "LOrgApacheLuceneDocumentField;", "Ljava/lang/Enum<Lorg/apache/lucene/document/Field$TermVector;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_TermVector = { "TermVector", "org.apache.lucene.document", ptrTable, methods, fields, 7, 0x4409, 6, 5, 9, -1, -1, 10, -1 };
  return &_OrgApacheLuceneDocumentField_TermVector;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneDocumentField_TermVector class]) {
    size_t allocSize = 0;
    size_t objSize_NO = class_getInstanceSize([OrgApacheLuceneDocumentField_TermVector_1 class]);
    allocSize += objSize_NO;
    size_t objSize_YES = class_getInstanceSize([OrgApacheLuceneDocumentField_TermVector_2 class]);
    allocSize += objSize_YES;
    size_t objSize_WITH_POSITIONS = class_getInstanceSize([OrgApacheLuceneDocumentField_TermVector_3 class]);
    allocSize += objSize_WITH_POSITIONS;
    size_t objSize_WITH_OFFSETS = class_getInstanceSize([OrgApacheLuceneDocumentField_TermVector_4 class]);
    allocSize += objSize_WITH_OFFSETS;
    size_t objSize_WITH_POSITIONS_OFFSETS = class_getInstanceSize([OrgApacheLuceneDocumentField_TermVector_5 class]);
    allocSize += objSize_WITH_POSITIONS_OFFSETS;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(OrgApacheLuceneDocumentField_TermVector, NO) = e = objc_constructInstance([OrgApacheLuceneDocumentField_TermVector_1 class], (void *)ptr), ptr += objSize_NO);
    OrgApacheLuceneDocumentField_TermVector_1_initWithNSString_withInt_(e, @"NO", 0);
    (JreEnum(OrgApacheLuceneDocumentField_TermVector, YES) = e = objc_constructInstance([OrgApacheLuceneDocumentField_TermVector_2 class], (void *)ptr), ptr += objSize_YES);
    OrgApacheLuceneDocumentField_TermVector_2_initWithNSString_withInt_(e, @"YES", 1);
    (JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_POSITIONS) = e = objc_constructInstance([OrgApacheLuceneDocumentField_TermVector_3 class], (void *)ptr), ptr += objSize_WITH_POSITIONS);
    OrgApacheLuceneDocumentField_TermVector_3_initWithNSString_withInt_(e, @"WITH_POSITIONS", 2);
    (JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_OFFSETS) = e = objc_constructInstance([OrgApacheLuceneDocumentField_TermVector_4 class], (void *)ptr), ptr += objSize_WITH_OFFSETS);
    OrgApacheLuceneDocumentField_TermVector_4_initWithNSString_withInt_(e, @"WITH_OFFSETS", 3);
    (JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_POSITIONS_OFFSETS) = e = objc_constructInstance([OrgApacheLuceneDocumentField_TermVector_5 class], (void *)ptr), ptr += objSize_WITH_POSITIONS_OFFSETS);
    OrgApacheLuceneDocumentField_TermVector_5_initWithNSString_withInt_(e, @"WITH_POSITIONS_OFFSETS", 4);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneDocumentField_TermVector)
  }
}

@end

void OrgApacheLuceneDocumentField_TermVector_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgApacheLuceneDocumentField_TermVector *OrgApacheLuceneDocumentField_TermVector_toTermVectorWithBoolean_withBoolean_withBoolean_(jboolean stored, jboolean withOffsets, jboolean withPositions) {
  OrgApacheLuceneDocumentField_TermVector_initialize();
  if (!stored) {
    return JreEnum(OrgApacheLuceneDocumentField_TermVector, NO);
  }
  if (withOffsets) {
    if (withPositions) {
      return JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_POSITIONS_OFFSETS);
    }
    return JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_OFFSETS);
  }
  if (withPositions) {
    return JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_POSITIONS);
  }
  return JreEnum(OrgApacheLuceneDocumentField_TermVector, YES);
}

IOSObjectArray *OrgApacheLuceneDocumentField_TermVector_values() {
  OrgApacheLuceneDocumentField_TermVector_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheLuceneDocumentField_TermVector_values_ count:5 type:OrgApacheLuceneDocumentField_TermVector_class_()];
}

OrgApacheLuceneDocumentField_TermVector *OrgApacheLuceneDocumentField_TermVector_valueOfWithNSString_(NSString *name) {
  OrgApacheLuceneDocumentField_TermVector_initialize();
  for (int i = 0; i < 5; i++) {
    OrgApacheLuceneDocumentField_TermVector *e = OrgApacheLuceneDocumentField_TermVector_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgApacheLuceneDocumentField_TermVector *OrgApacheLuceneDocumentField_TermVector_fromOrdinal(NSUInteger ordinal) {
  OrgApacheLuceneDocumentField_TermVector_initialize();
  if (ordinal >= 5) {
    return nil;
  }
  return OrgApacheLuceneDocumentField_TermVector_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneDocumentField_TermVector)

@implementation OrgApacheLuceneDocumentField_TermVector_1

- (jboolean)isStored {
  return false;
}

- (jboolean)withPositions {
  return false;
}

- (jboolean)withOffsets {
  return false;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_TermVector_1 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isStored);
  methods[1].selector = @selector(withPositions);
  methods[2].selector = @selector(withOffsets);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_TermVector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_TermVector_1 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_TermVector_1;
}

@end

void OrgApacheLuceneDocumentField_TermVector_1_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_1 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_TermVector_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneDocumentField_TermVector_2

- (jboolean)isStored {
  return true;
}

- (jboolean)withPositions {
  return false;
}

- (jboolean)withOffsets {
  return false;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_TermVector_2 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isStored);
  methods[1].selector = @selector(withPositions);
  methods[2].selector = @selector(withOffsets);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_TermVector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_TermVector_2 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_TermVector_2;
}

@end

void OrgApacheLuceneDocumentField_TermVector_2_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_2 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_TermVector_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneDocumentField_TermVector_3

- (jboolean)isStored {
  return true;
}

- (jboolean)withPositions {
  return true;
}

- (jboolean)withOffsets {
  return false;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_TermVector_3 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isStored);
  methods[1].selector = @selector(withPositions);
  methods[2].selector = @selector(withOffsets);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_TermVector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_TermVector_3 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_TermVector_3;
}

@end

void OrgApacheLuceneDocumentField_TermVector_3_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_3 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_TermVector_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneDocumentField_TermVector_4

- (jboolean)isStored {
  return true;
}

- (jboolean)withPositions {
  return false;
}

- (jboolean)withOffsets {
  return true;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_TermVector_4 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isStored);
  methods[1].selector = @selector(withPositions);
  methods[2].selector = @selector(withOffsets);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_TermVector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_TermVector_4 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_TermVector_4;
}

@end

void OrgApacheLuceneDocumentField_TermVector_4_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_4 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_TermVector_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneDocumentField_TermVector_5

- (jboolean)isStored {
  return true;
}

- (jboolean)withPositions {
  return true;
}

- (jboolean)withOffsets {
  return true;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_TermVector_5 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isStored);
  methods[1].selector = @selector(withPositions);
  methods[2].selector = @selector(withOffsets);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_TermVector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_TermVector_5 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_TermVector_5;
}

@end

void OrgApacheLuceneDocumentField_TermVector_5_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_5 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_TermVector_initWithNSString_withInt_(self, __name, __ordinal);
}
