//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/util/BitUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilBitUtil")
#ifdef RESTRICT_OrgApacheLuceneUtilBitUtil
#define INCLUDE_ALL_OrgApacheLuceneUtilBitUtil 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilBitUtil 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilBitUtil

#if !defined (OrgApacheLuceneUtilBitUtil_) && (INCLUDE_ALL_OrgApacheLuceneUtilBitUtil || defined(INCLUDE_OrgApacheLuceneUtilBitUtil))
#define OrgApacheLuceneUtilBitUtil_

@class IOSByteArray;
@class IOSLongArray;

@interface OrgApacheLuceneUtilBitUtil : NSObject

#pragma mark Public

+ (jboolean)isPowerOfTwoWithInt:(jint)v;

+ (jboolean)isPowerOfTwoWithLong:(jlong)v;

+ (jint)nextHighestPowerOfTwoWithInt:(jint)v;

+ (jlong)nextHighestPowerOfTwoWithLong:(jlong)v;

+ (jint)nlzWithLong:(jlong)x;

+ (jint)ntzWithInt:(jint)val;

+ (jint)ntzWithLong:(jlong)val;

+ (jint)ntz2WithLong:(jlong)x;

+ (jint)ntz3WithLong:(jlong)x;

+ (jint)popWithLong:(jlong)x;

+ (jlong)pop_andnotWithLongArray:(IOSLongArray *)A
                   withLongArray:(IOSLongArray *)B
                         withInt:(jint)wordOffset
                         withInt:(jint)numWords;

+ (jlong)pop_arrayWithLongArray:(IOSLongArray *)A
                        withInt:(jint)wordOffset
                        withInt:(jint)numWords;

+ (jlong)pop_intersectWithLongArray:(IOSLongArray *)A
                      withLongArray:(IOSLongArray *)B
                            withInt:(jint)wordOffset
                            withInt:(jint)numWords;

+ (jlong)pop_unionWithLongArray:(IOSLongArray *)A
                  withLongArray:(IOSLongArray *)B
                        withInt:(jint)wordOffset
                        withInt:(jint)numWords;

+ (jlong)pop_xorWithLongArray:(IOSLongArray *)A
                withLongArray:(IOSLongArray *)B
                      withInt:(jint)wordOffset
                      withInt:(jint)numWords;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneUtilBitUtil)

inline IOSByteArray *OrgApacheLuceneUtilBitUtil_get_ntzTable();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *OrgApacheLuceneUtilBitUtil_ntzTable;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneUtilBitUtil, ntzTable, IOSByteArray *)

inline IOSByteArray *OrgApacheLuceneUtilBitUtil_get_nlzTable();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *OrgApacheLuceneUtilBitUtil_nlzTable;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneUtilBitUtil, nlzTable, IOSByteArray *)

FOUNDATION_EXPORT jint OrgApacheLuceneUtilBitUtil_popWithLong_(jlong x);

FOUNDATION_EXPORT jlong OrgApacheLuceneUtilBitUtil_pop_arrayWithLongArray_withInt_withInt_(IOSLongArray *A, jint wordOffset, jint numWords);

FOUNDATION_EXPORT jlong OrgApacheLuceneUtilBitUtil_pop_intersectWithLongArray_withLongArray_withInt_withInt_(IOSLongArray *A, IOSLongArray *B, jint wordOffset, jint numWords);

FOUNDATION_EXPORT jlong OrgApacheLuceneUtilBitUtil_pop_unionWithLongArray_withLongArray_withInt_withInt_(IOSLongArray *A, IOSLongArray *B, jint wordOffset, jint numWords);

FOUNDATION_EXPORT jlong OrgApacheLuceneUtilBitUtil_pop_andnotWithLongArray_withLongArray_withInt_withInt_(IOSLongArray *A, IOSLongArray *B, jint wordOffset, jint numWords);

FOUNDATION_EXPORT jlong OrgApacheLuceneUtilBitUtil_pop_xorWithLongArray_withLongArray_withInt_withInt_(IOSLongArray *A, IOSLongArray *B, jint wordOffset, jint numWords);

FOUNDATION_EXPORT jint OrgApacheLuceneUtilBitUtil_ntzWithLong_(jlong val);

FOUNDATION_EXPORT jint OrgApacheLuceneUtilBitUtil_ntzWithInt_(jint val);

FOUNDATION_EXPORT jint OrgApacheLuceneUtilBitUtil_ntz2WithLong_(jlong x);

FOUNDATION_EXPORT jint OrgApacheLuceneUtilBitUtil_ntz3WithLong_(jlong x);

FOUNDATION_EXPORT jint OrgApacheLuceneUtilBitUtil_nlzWithLong_(jlong x);

FOUNDATION_EXPORT jboolean OrgApacheLuceneUtilBitUtil_isPowerOfTwoWithInt_(jint v);

FOUNDATION_EXPORT jboolean OrgApacheLuceneUtilBitUtil_isPowerOfTwoWithLong_(jlong v);

FOUNDATION_EXPORT jint OrgApacheLuceneUtilBitUtil_nextHighestPowerOfTwoWithInt_(jint v);

FOUNDATION_EXPORT jlong OrgApacheLuceneUtilBitUtil_nextHighestPowerOfTwoWithLong_(jlong v);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilBitUtil)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilBitUtil")
