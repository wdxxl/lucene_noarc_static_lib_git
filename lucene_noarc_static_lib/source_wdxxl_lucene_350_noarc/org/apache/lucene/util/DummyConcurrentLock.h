//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/util/DummyConcurrentLock.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilDummyConcurrentLock")
#ifdef RESTRICT_OrgApacheLuceneUtilDummyConcurrentLock
#define INCLUDE_ALL_OrgApacheLuceneUtilDummyConcurrentLock 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilDummyConcurrentLock 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilDummyConcurrentLock

#if !defined (OrgApacheLuceneUtilDummyConcurrentLock_) && (INCLUDE_ALL_OrgApacheLuceneUtilDummyConcurrentLock || defined(INCLUDE_OrgApacheLuceneUtilDummyConcurrentLock))
#define OrgApacheLuceneUtilDummyConcurrentLock_

#define RESTRICT_JavaUtilConcurrentLocksLock 1
#define INCLUDE_JavaUtilConcurrentLocksLock 1
#include "java/util/concurrent/locks/Lock.h"

@class JavaUtilConcurrentTimeUnit;
@protocol JavaUtilConcurrentLocksCondition;

@interface OrgApacheLuceneUtilDummyConcurrentLock : NSObject < JavaUtilConcurrentLocksLock >

#pragma mark Public

- (instancetype)init;

- (void)lock;

- (void)lockInterruptibly;

- (id<JavaUtilConcurrentLocksCondition>)newCondition OBJC_METHOD_FAMILY_NONE;

- (jboolean)tryLock;

- (jboolean)tryLockWithLong:(jlong)time
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (void)unlock;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneUtilDummyConcurrentLock)

inline OrgApacheLuceneUtilDummyConcurrentLock *OrgApacheLuceneUtilDummyConcurrentLock_get_INSTANCE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneUtilDummyConcurrentLock *OrgApacheLuceneUtilDummyConcurrentLock_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneUtilDummyConcurrentLock, INSTANCE, OrgApacheLuceneUtilDummyConcurrentLock *)

FOUNDATION_EXPORT void OrgApacheLuceneUtilDummyConcurrentLock_init(OrgApacheLuceneUtilDummyConcurrentLock *self);

FOUNDATION_EXPORT OrgApacheLuceneUtilDummyConcurrentLock *new_OrgApacheLuceneUtilDummyConcurrentLock_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilDummyConcurrentLock *create_OrgApacheLuceneUtilDummyConcurrentLock_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilDummyConcurrentLock)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilDummyConcurrentLock")
