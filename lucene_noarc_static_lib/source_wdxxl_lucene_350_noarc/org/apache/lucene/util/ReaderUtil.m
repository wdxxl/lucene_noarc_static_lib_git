//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/util/ReaderUtil.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/util/ReaderUtil.h"

@interface OrgApacheLuceneUtilReaderUtil ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgApacheLuceneUtilReaderUtil_init(OrgApacheLuceneUtilReaderUtil *self);

__attribute__((unused)) static OrgApacheLuceneUtilReaderUtil *new_OrgApacheLuceneUtilReaderUtil_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilReaderUtil *create_OrgApacheLuceneUtilReaderUtil_init();

@interface OrgApacheLuceneUtilReaderUtil_Gather () {
 @public
  OrgApacheLuceneIndexIndexReader *topReader_;
}

- (jint)runWithInt:(jint)base
withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilReaderUtil_Gather, topReader_, OrgApacheLuceneIndexIndexReader *)

__attribute__((unused)) static jint OrgApacheLuceneUtilReaderUtil_Gather_runWithInt_withOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneUtilReaderUtil_Gather *self, jint base, OrgApacheLuceneIndexIndexReader *reader);

@implementation OrgApacheLuceneUtilReaderUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilReaderUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)gatherSubReadersWithJavaUtilList:(id<JavaUtilList>)allSubReaders
     withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  OrgApacheLuceneUtilReaderUtil_gatherSubReadersWithJavaUtilList_withOrgApacheLuceneIndexIndexReader_(allSubReaders, reader);
}

+ (OrgApacheLuceneIndexIndexReader *)subReaderWithInt:(jint)doc
                  withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  return OrgApacheLuceneUtilReaderUtil_subReaderWithInt_withOrgApacheLuceneIndexIndexReader_(doc, reader);
}

+ (OrgApacheLuceneIndexIndexReader *)subReaderWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                                          withInt:(jint)subIndex {
  return OrgApacheLuceneUtilReaderUtil_subReaderWithOrgApacheLuceneIndexIndexReader_withInt_(reader, subIndex);
}

+ (jint)subIndexWithInt:(jint)n
           withIntArray:(IOSIntArray *)docStarts {
  return OrgApacheLuceneUtilReaderUtil_subIndexWithInt_withIntArray_(n, docStarts);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexReader;", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexReader;", 0x9, 3, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(gatherSubReadersWithJavaUtilList:withOrgApacheLuceneIndexIndexReader:);
  methods[2].selector = @selector(subReaderWithInt:withOrgApacheLuceneIndexIndexReader:);
  methods[3].selector = @selector(subReaderWithOrgApacheLuceneIndexIndexReader:withInt:);
  methods[4].selector = @selector(subIndexWithInt:withIntArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "gatherSubReaders", "LJavaUtilList;LOrgApacheLuceneIndexIndexReader;", "(Ljava/util/List<Lorg/apache/lucene/index/IndexReader;>;Lorg/apache/lucene/index/IndexReader;)V", "subReader", "ILOrgApacheLuceneIndexIndexReader;", "LOrgApacheLuceneIndexIndexReader;I", "subIndex", "I[I", "LOrgApacheLuceneUtilReaderUtil_Gather;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilReaderUtil = { "ReaderUtil", "org.apache.lucene.util", ptrTable, methods, NULL, 7, 0x11, 5, 0, -1, 8, -1, -1, -1 };
  return &_OrgApacheLuceneUtilReaderUtil;
}

@end

void OrgApacheLuceneUtilReaderUtil_init(OrgApacheLuceneUtilReaderUtil *self) {
  NSObject_init(self);
}

OrgApacheLuceneUtilReaderUtil *new_OrgApacheLuceneUtilReaderUtil_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilReaderUtil, init)
}

OrgApacheLuceneUtilReaderUtil *create_OrgApacheLuceneUtilReaderUtil_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilReaderUtil, init)
}

void OrgApacheLuceneUtilReaderUtil_gatherSubReadersWithJavaUtilList_withOrgApacheLuceneIndexIndexReader_(id<JavaUtilList> allSubReaders, OrgApacheLuceneIndexIndexReader *reader) {
  OrgApacheLuceneUtilReaderUtil_initialize();
  IOSObjectArray *subReaders = [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) getSequentialSubReaders];
  if (subReaders == nil) {
    [((id<JavaUtilList>) nil_chk(allSubReaders)) addWithId:reader];
  }
  else {
    for (jint i = 0; i < subReaders->size_; i++) {
      OrgApacheLuceneUtilReaderUtil_gatherSubReadersWithJavaUtilList_withOrgApacheLuceneIndexIndexReader_(allSubReaders, IOSObjectArray_Get(subReaders, i));
    }
  }
}

OrgApacheLuceneIndexIndexReader *OrgApacheLuceneUtilReaderUtil_subReaderWithInt_withOrgApacheLuceneIndexIndexReader_(jint doc, OrgApacheLuceneIndexIndexReader *reader) {
  OrgApacheLuceneUtilReaderUtil_initialize();
  id<JavaUtilList> subReadersList = create_JavaUtilArrayList_init();
  OrgApacheLuceneUtilReaderUtil_gatherSubReadersWithJavaUtilList_withOrgApacheLuceneIndexIndexReader_(subReadersList, reader);
  IOSObjectArray *subReaders = [subReadersList toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[subReadersList size] type:OrgApacheLuceneIndexIndexReader_class_()]];
  IOSIntArray *docStarts = [IOSIntArray arrayWithLength:((IOSObjectArray *) nil_chk(subReaders))->size_];
  jint maxDoc = 0;
  for (jint i = 0; i < subReaders->size_; i++) {
    *IOSIntArray_GetRef(docStarts, i) = maxDoc;
    maxDoc += [((OrgApacheLuceneIndexIndexReader *) nil_chk(IOSObjectArray_Get(subReaders, i))) maxDoc];
  }
  return IOSObjectArray_Get(subReaders, OrgApacheLuceneUtilReaderUtil_subIndexWithInt_withIntArray_(doc, docStarts));
}

OrgApacheLuceneIndexIndexReader *OrgApacheLuceneUtilReaderUtil_subReaderWithOrgApacheLuceneIndexIndexReader_withInt_(OrgApacheLuceneIndexIndexReader *reader, jint subIndex) {
  OrgApacheLuceneUtilReaderUtil_initialize();
  id<JavaUtilList> subReadersList = create_JavaUtilArrayList_init();
  OrgApacheLuceneUtilReaderUtil_gatherSubReadersWithJavaUtilList_withOrgApacheLuceneIndexIndexReader_(subReadersList, reader);
  IOSObjectArray *subReaders = [subReadersList toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[subReadersList size] type:OrgApacheLuceneIndexIndexReader_class_()]];
  return IOSObjectArray_Get(nil_chk(subReaders), subIndex);
}

jint OrgApacheLuceneUtilReaderUtil_subIndexWithInt_withIntArray_(jint n, IOSIntArray *docStarts) {
  OrgApacheLuceneUtilReaderUtil_initialize();
  jint size = ((IOSIntArray *) nil_chk(docStarts))->size_;
  jint lo = 0;
  jint hi = size - 1;
  while (hi >= lo) {
    jint mid = JreURShift32((lo + hi), 1);
    jint midValue = IOSIntArray_Get(docStarts, mid);
    if (n < midValue) hi = mid - 1;
    else if (n > midValue) lo = mid + 1;
    else {
      while (mid + 1 < size && IOSIntArray_Get(docStarts, mid + 1) == midValue) {
        mid++;
      }
      return mid;
    }
  }
  return hi;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilReaderUtil)

@implementation OrgApacheLuceneUtilReaderUtil_Gather

- (instancetype)initWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)r {
  OrgApacheLuceneUtilReaderUtil_Gather_initWithOrgApacheLuceneIndexIndexReader_(self, r);
  return self;
}

- (jint)run {
  return OrgApacheLuceneUtilReaderUtil_Gather_runWithInt_withOrgApacheLuceneIndexIndexReader_(self, 0, topReader_);
}

- (jint)runWithInt:(jint)docBase {
  return OrgApacheLuceneUtilReaderUtil_Gather_runWithInt_withOrgApacheLuceneIndexIndexReader_(self, docBase, topReader_);
}

- (jint)runWithInt:(jint)base
withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  return OrgApacheLuceneUtilReaderUtil_Gather_runWithInt_withOrgApacheLuceneIndexIndexReader_(self, base, reader);
}

- (void)addWithInt:(jint)base
withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)r {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)dealloc {
  RELEASE_(topReader_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "I", 0x2, 2, 4, 1, -1, -1, -1 },
    { NULL, "V", 0x404, 5, 4, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexIndexReader:);
  methods[1].selector = @selector(run);
  methods[2].selector = @selector(runWithInt:);
  methods[3].selector = @selector(runWithInt:withOrgApacheLuceneIndexIndexReader:);
  methods[4].selector = @selector(addWithInt:withOrgApacheLuceneIndexIndexReader:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "topReader_", "LOrgApacheLuceneIndexIndexReader;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexIndexReader;", "LJavaIoIOException;", "run", "I", "ILOrgApacheLuceneIndexIndexReader;", "add", "LOrgApacheLuceneUtilReaderUtil;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilReaderUtil_Gather = { "Gather", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x409, 5, 1, 6, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilReaderUtil_Gather;
}

@end

void OrgApacheLuceneUtilReaderUtil_Gather_initWithOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneUtilReaderUtil_Gather *self, OrgApacheLuceneIndexIndexReader *r) {
  NSObject_init(self);
  JreStrongAssign(&self->topReader_, r);
}

jint OrgApacheLuceneUtilReaderUtil_Gather_runWithInt_withOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneUtilReaderUtil_Gather *self, jint base, OrgApacheLuceneIndexIndexReader *reader) {
  IOSObjectArray *subReaders = [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) getSequentialSubReaders];
  if (subReaders == nil) {
    [self addWithInt:base withOrgApacheLuceneIndexIndexReader:reader];
    base += [reader maxDoc];
  }
  else {
    for (jint i = 0; i < subReaders->size_; i++) {
      base = OrgApacheLuceneUtilReaderUtil_Gather_runWithInt_withOrgApacheLuceneIndexIndexReader_(self, base, IOSObjectArray_Get(subReaders, i));
    }
  }
  return base;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilReaderUtil_Gather)
