//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/util/TwoPhaseCommitTool.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/util/Map.h"
#include "org/apache/lucene/util/TwoPhaseCommit.h"
#include "org/apache/lucene/util/TwoPhaseCommitTool.h"

@interface OrgApacheLuceneUtilTwoPhaseCommitTool ()

+ (void)rollbackWithOrgApacheLuceneUtilTwoPhaseCommitArray:(IOSObjectArray *)objects;

@end

__attribute__((unused)) static void OrgApacheLuceneUtilTwoPhaseCommitTool_rollbackWithOrgApacheLuceneUtilTwoPhaseCommitArray_(IOSObjectArray *objects);

@interface OrgApacheLuceneUtilTwoPhaseCommitTool_TwoPhaseCommitWrapper () {
 @public
  id<OrgApacheLuceneUtilTwoPhaseCommit> tpc_;
  id<JavaUtilMap> commitData_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilTwoPhaseCommitTool_TwoPhaseCommitWrapper, tpc_, id<OrgApacheLuceneUtilTwoPhaseCommit>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilTwoPhaseCommitTool_TwoPhaseCommitWrapper, commitData_, id<JavaUtilMap>)

@implementation OrgApacheLuceneUtilTwoPhaseCommitTool

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilTwoPhaseCommitTool_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)rollbackWithOrgApacheLuceneUtilTwoPhaseCommitArray:(IOSObjectArray *)objects {
  OrgApacheLuceneUtilTwoPhaseCommitTool_rollbackWithOrgApacheLuceneUtilTwoPhaseCommitArray_(objects);
}

+ (void)executeWithOrgApacheLuceneUtilTwoPhaseCommitArray:(IOSObjectArray *)objects {
  OrgApacheLuceneUtilTwoPhaseCommitTool_executeWithOrgApacheLuceneUtilTwoPhaseCommitArray_(objects);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x8a, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x89, 2, 1, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(rollbackWithOrgApacheLuceneUtilTwoPhaseCommitArray:);
  methods[2].selector = @selector(executeWithOrgApacheLuceneUtilTwoPhaseCommitArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "rollback", "[LOrgApacheLuceneUtilTwoPhaseCommit;", "execute", "LOrgApacheLuceneUtilTwoPhaseCommitTool_PrepareCommitFailException;LOrgApacheLuceneUtilTwoPhaseCommitTool_CommitFailException;", "LOrgApacheLuceneUtilTwoPhaseCommitTool_TwoPhaseCommitWrapper;LOrgApacheLuceneUtilTwoPhaseCommitTool_PrepareCommitFailException;LOrgApacheLuceneUtilTwoPhaseCommitTool_CommitFailException;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilTwoPhaseCommitTool = { "TwoPhaseCommitTool", "org.apache.lucene.util", ptrTable, methods, NULL, 7, 0x11, 3, 0, -1, 4, -1, -1, -1 };
  return &_OrgApacheLuceneUtilTwoPhaseCommitTool;
}

@end

void OrgApacheLuceneUtilTwoPhaseCommitTool_init(OrgApacheLuceneUtilTwoPhaseCommitTool *self) {
  NSObject_init(self);
}

OrgApacheLuceneUtilTwoPhaseCommitTool *new_OrgApacheLuceneUtilTwoPhaseCommitTool_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilTwoPhaseCommitTool, init)
}

OrgApacheLuceneUtilTwoPhaseCommitTool *create_OrgApacheLuceneUtilTwoPhaseCommitTool_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilTwoPhaseCommitTool, init)
}

void OrgApacheLuceneUtilTwoPhaseCommitTool_rollbackWithOrgApacheLuceneUtilTwoPhaseCommitArray_(IOSObjectArray *objects) {
  OrgApacheLuceneUtilTwoPhaseCommitTool_initialize();
  {
    IOSObjectArray *a__ = objects;
    id<OrgApacheLuceneUtilTwoPhaseCommit> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<OrgApacheLuceneUtilTwoPhaseCommit> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<OrgApacheLuceneUtilTwoPhaseCommit> tpc = *b__++;
      if (tpc != nil) {
        @try {
          [tpc rollback];
        }
        @catch (NSException *t) {
        }
      }
    }
  }
}

void OrgApacheLuceneUtilTwoPhaseCommitTool_executeWithOrgApacheLuceneUtilTwoPhaseCommitArray_(IOSObjectArray *objects) {
  OrgApacheLuceneUtilTwoPhaseCommitTool_initialize();
  id<OrgApacheLuceneUtilTwoPhaseCommit> tpc = nil;
  @try {
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(objects))->size_; i++) {
      tpc = IOSObjectArray_Get(objects, i);
      if (tpc != nil) {
        [tpc prepareCommit];
      }
    }
  }
  @catch (NSException *t) {
    OrgApacheLuceneUtilTwoPhaseCommitTool_rollbackWithOrgApacheLuceneUtilTwoPhaseCommitArray_(objects);
    @throw create_OrgApacheLuceneUtilTwoPhaseCommitTool_PrepareCommitFailException_initWithNSException_withOrgApacheLuceneUtilTwoPhaseCommit_(t, tpc);
  }
  @try {
    for (jint i = 0; i < objects->size_; i++) {
      tpc = IOSObjectArray_Get(objects, i);
      if (tpc != nil) {
        [tpc commit];
      }
    }
  }
  @catch (NSException *t) {
    OrgApacheLuceneUtilTwoPhaseCommitTool_rollbackWithOrgApacheLuceneUtilTwoPhaseCommitArray_(objects);
    @throw create_OrgApacheLuceneUtilTwoPhaseCommitTool_CommitFailException_initWithNSException_withOrgApacheLuceneUtilTwoPhaseCommit_(t, tpc);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilTwoPhaseCommitTool)

@implementation OrgApacheLuceneUtilTwoPhaseCommitTool_TwoPhaseCommitWrapper

- (instancetype)initWithOrgApacheLuceneUtilTwoPhaseCommit:(id<OrgApacheLuceneUtilTwoPhaseCommit>)tpc
                                          withJavaUtilMap:(id<JavaUtilMap>)commitData {
  OrgApacheLuceneUtilTwoPhaseCommitTool_TwoPhaseCommitWrapper_initWithOrgApacheLuceneUtilTwoPhaseCommit_withJavaUtilMap_(self, tpc, commitData);
  return self;
}

- (void)prepareCommit {
  [self prepareCommitWithJavaUtilMap:commitData_];
}

- (void)prepareCommitWithJavaUtilMap:(id<JavaUtilMap>)commitData {
  [((id<OrgApacheLuceneUtilTwoPhaseCommit>) nil_chk(tpc_)) prepareCommitWithJavaUtilMap:self->commitData_];
}

- (void)commit {
  [self commitWithJavaUtilMap:commitData_];
}

- (void)commitWithJavaUtilMap:(id<JavaUtilMap>)commitData {
  [((id<OrgApacheLuceneUtilTwoPhaseCommit>) nil_chk(tpc_)) commitWithJavaUtilMap:self->commitData_];
}

- (void)rollback {
  [((id<OrgApacheLuceneUtilTwoPhaseCommit>) nil_chk(tpc_)) rollback];
}

- (void)dealloc {
  RELEASE_(tpc_);
  RELEASE_(commitData_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, 5, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 4, 2, 5, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneUtilTwoPhaseCommit:withJavaUtilMap:);
  methods[1].selector = @selector(prepareCommit);
  methods[2].selector = @selector(prepareCommitWithJavaUtilMap:);
  methods[3].selector = @selector(commit);
  methods[4].selector = @selector(commitWithJavaUtilMap:);
  methods[5].selector = @selector(rollback);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "tpc_", "LOrgApacheLuceneUtilTwoPhaseCommit;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "commitData_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilTwoPhaseCommit;LJavaUtilMap;", "(Lorg/apache/lucene/util/TwoPhaseCommit;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V", "LJavaIoIOException;", "prepareCommit", "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V", "commit", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", "LOrgApacheLuceneUtilTwoPhaseCommitTool;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilTwoPhaseCommitTool_TwoPhaseCommitWrapper = { "TwoPhaseCommitWrapper", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x19, 6, 2, 8, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilTwoPhaseCommitTool_TwoPhaseCommitWrapper;
}

@end

void OrgApacheLuceneUtilTwoPhaseCommitTool_TwoPhaseCommitWrapper_initWithOrgApacheLuceneUtilTwoPhaseCommit_withJavaUtilMap_(OrgApacheLuceneUtilTwoPhaseCommitTool_TwoPhaseCommitWrapper *self, id<OrgApacheLuceneUtilTwoPhaseCommit> tpc, id<JavaUtilMap> commitData) {
  NSObject_init(self);
  JreStrongAssign(&self->tpc_, tpc);
  JreStrongAssign(&self->commitData_, commitData);
}

OrgApacheLuceneUtilTwoPhaseCommitTool_TwoPhaseCommitWrapper *new_OrgApacheLuceneUtilTwoPhaseCommitTool_TwoPhaseCommitWrapper_initWithOrgApacheLuceneUtilTwoPhaseCommit_withJavaUtilMap_(id<OrgApacheLuceneUtilTwoPhaseCommit> tpc, id<JavaUtilMap> commitData) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilTwoPhaseCommitTool_TwoPhaseCommitWrapper, initWithOrgApacheLuceneUtilTwoPhaseCommit_withJavaUtilMap_, tpc, commitData)
}

OrgApacheLuceneUtilTwoPhaseCommitTool_TwoPhaseCommitWrapper *create_OrgApacheLuceneUtilTwoPhaseCommitTool_TwoPhaseCommitWrapper_initWithOrgApacheLuceneUtilTwoPhaseCommit_withJavaUtilMap_(id<OrgApacheLuceneUtilTwoPhaseCommit> tpc, id<JavaUtilMap> commitData) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilTwoPhaseCommitTool_TwoPhaseCommitWrapper, initWithOrgApacheLuceneUtilTwoPhaseCommit_withJavaUtilMap_, tpc, commitData)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilTwoPhaseCommitTool_TwoPhaseCommitWrapper)

@implementation OrgApacheLuceneUtilTwoPhaseCommitTool_PrepareCommitFailException

- (instancetype)initWithNSException:(NSException *)cause
withOrgApacheLuceneUtilTwoPhaseCommit:(id<OrgApacheLuceneUtilTwoPhaseCommit>)obj {
  OrgApacheLuceneUtilTwoPhaseCommitTool_PrepareCommitFailException_initWithNSException_withOrgApacheLuceneUtilTwoPhaseCommit_(self, cause, obj);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSException:withOrgApacheLuceneUtilTwoPhaseCommit:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSException;LOrgApacheLuceneUtilTwoPhaseCommit;", "LOrgApacheLuceneUtilTwoPhaseCommitTool;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilTwoPhaseCommitTool_PrepareCommitFailException = { "PrepareCommitFailException", "org.apache.lucene.util", ptrTable, methods, NULL, 7, 0x9, 1, 0, 1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilTwoPhaseCommitTool_PrepareCommitFailException;
}

@end

void OrgApacheLuceneUtilTwoPhaseCommitTool_PrepareCommitFailException_initWithNSException_withOrgApacheLuceneUtilTwoPhaseCommit_(OrgApacheLuceneUtilTwoPhaseCommitTool_PrepareCommitFailException *self, NSException *cause, id<OrgApacheLuceneUtilTwoPhaseCommit> obj) {
  JavaIoIOException_initWithNSString_(self, JreStrcat("$@", @"prepareCommit() failed on ", obj));
  [self initCauseWithNSException:cause];
}

OrgApacheLuceneUtilTwoPhaseCommitTool_PrepareCommitFailException *new_OrgApacheLuceneUtilTwoPhaseCommitTool_PrepareCommitFailException_initWithNSException_withOrgApacheLuceneUtilTwoPhaseCommit_(NSException *cause, id<OrgApacheLuceneUtilTwoPhaseCommit> obj) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilTwoPhaseCommitTool_PrepareCommitFailException, initWithNSException_withOrgApacheLuceneUtilTwoPhaseCommit_, cause, obj)
}

OrgApacheLuceneUtilTwoPhaseCommitTool_PrepareCommitFailException *create_OrgApacheLuceneUtilTwoPhaseCommitTool_PrepareCommitFailException_initWithNSException_withOrgApacheLuceneUtilTwoPhaseCommit_(NSException *cause, id<OrgApacheLuceneUtilTwoPhaseCommit> obj) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilTwoPhaseCommitTool_PrepareCommitFailException, initWithNSException_withOrgApacheLuceneUtilTwoPhaseCommit_, cause, obj)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilTwoPhaseCommitTool_PrepareCommitFailException)

@implementation OrgApacheLuceneUtilTwoPhaseCommitTool_CommitFailException

- (instancetype)initWithNSException:(NSException *)cause
withOrgApacheLuceneUtilTwoPhaseCommit:(id<OrgApacheLuceneUtilTwoPhaseCommit>)obj {
  OrgApacheLuceneUtilTwoPhaseCommitTool_CommitFailException_initWithNSException_withOrgApacheLuceneUtilTwoPhaseCommit_(self, cause, obj);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSException:withOrgApacheLuceneUtilTwoPhaseCommit:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSException;LOrgApacheLuceneUtilTwoPhaseCommit;", "LOrgApacheLuceneUtilTwoPhaseCommitTool;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilTwoPhaseCommitTool_CommitFailException = { "CommitFailException", "org.apache.lucene.util", ptrTable, methods, NULL, 7, 0x9, 1, 0, 1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilTwoPhaseCommitTool_CommitFailException;
}

@end

void OrgApacheLuceneUtilTwoPhaseCommitTool_CommitFailException_initWithNSException_withOrgApacheLuceneUtilTwoPhaseCommit_(OrgApacheLuceneUtilTwoPhaseCommitTool_CommitFailException *self, NSException *cause, id<OrgApacheLuceneUtilTwoPhaseCommit> obj) {
  JavaIoIOException_initWithNSString_(self, JreStrcat("$@", @"commit() failed on ", obj));
  [self initCauseWithNSException:cause];
}

OrgApacheLuceneUtilTwoPhaseCommitTool_CommitFailException *new_OrgApacheLuceneUtilTwoPhaseCommitTool_CommitFailException_initWithNSException_withOrgApacheLuceneUtilTwoPhaseCommit_(NSException *cause, id<OrgApacheLuceneUtilTwoPhaseCommit> obj) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilTwoPhaseCommitTool_CommitFailException, initWithNSException_withOrgApacheLuceneUtilTwoPhaseCommit_, cause, obj)
}

OrgApacheLuceneUtilTwoPhaseCommitTool_CommitFailException *create_OrgApacheLuceneUtilTwoPhaseCommitTool_CommitFailException_initWithNSException_withOrgApacheLuceneUtilTwoPhaseCommit_(NSException *cause, id<OrgApacheLuceneUtilTwoPhaseCommit> obj) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilTwoPhaseCommitTool_CommitFailException, initWithNSException_withOrgApacheLuceneUtilTwoPhaseCommit_, cause, obj)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilTwoPhaseCommitTool_CommitFailException)
