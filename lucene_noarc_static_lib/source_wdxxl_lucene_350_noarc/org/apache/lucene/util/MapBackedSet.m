//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/util/MapBackedSet.java
//

#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/util/AbstractSet.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/lucene/util/MapBackedSet.h"

@interface OrgApacheLuceneUtilMapBackedSet () {
 @public
  id<JavaUtilMap> map_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilMapBackedSet, map_, id<JavaUtilMap>)

inline jlong OrgApacheLuceneUtilMapBackedSet_get_serialVersionUID();
#define OrgApacheLuceneUtilMapBackedSet_serialVersionUID -6761513279741915432LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilMapBackedSet, serialVersionUID, jlong)

@implementation OrgApacheLuceneUtilMapBackedSet

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)map {
  OrgApacheLuceneUtilMapBackedSet_initWithJavaUtilMap_(self, map);
  return self;
}

- (jint)size {
  return [((id<JavaUtilMap>) nil_chk(map_)) size];
}

- (jboolean)containsWithId:(id)o {
  return [((id<JavaUtilMap>) nil_chk(map_)) containsKeyWithId:o];
}

- (jboolean)addWithId:(id)o {
  return [((id<JavaUtilMap>) nil_chk(map_)) putWithId:o withId:JreLoadStatic(JavaLangBoolean, TRUE)] == nil;
}

- (jboolean)removeWithId:(id)o {
  return [((id<JavaUtilMap>) nil_chk(map_)) removeWithId:o] != nil;
}

- (void)clear {
  [((id<JavaUtilMap>) nil_chk(map_)) clear];
}

- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(map_)) keySet])) iterator];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

- (void)dealloc {
  RELEASE_(map_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 3, -1, 5, -1, -1 },
    { NULL, "Z", 0x1, 6, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilMap:);
  methods[1].selector = @selector(size);
  methods[2].selector = @selector(containsWithId:);
  methods[3].selector = @selector(addWithId:);
  methods[4].selector = @selector(removeWithId:);
  methods[5].selector = @selector(clear);
  methods[6].selector = @selector(iterator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgApacheLuceneUtilMapBackedSet_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "map_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilMap;", "(Ljava/util/Map<TE;Ljava/lang/Boolean;>;)V", "contains", "LNSObject;", "add", "(TE;)Z", "remove", "()Ljava/util/Iterator<TE;>;", "Ljava/util/Map<TE;Ljava/lang/Boolean;>;", "<E:Ljava/lang/Object;>Ljava/util/AbstractSet<TE;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilMapBackedSet = { "MapBackedSet", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x11, 7, 2, -1, -1, -1, 9, -1 };
  return &_OrgApacheLuceneUtilMapBackedSet;
}

@end

void OrgApacheLuceneUtilMapBackedSet_initWithJavaUtilMap_(OrgApacheLuceneUtilMapBackedSet *self, id<JavaUtilMap> map) {
  JavaUtilAbstractSet_init(self);
  JreStrongAssign(&self->map_, map);
}

OrgApacheLuceneUtilMapBackedSet *new_OrgApacheLuceneUtilMapBackedSet_initWithJavaUtilMap_(id<JavaUtilMap> map) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilMapBackedSet, initWithJavaUtilMap_, map)
}

OrgApacheLuceneUtilMapBackedSet *create_OrgApacheLuceneUtilMapBackedSet_initWithJavaUtilMap_(id<JavaUtilMap> map) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilMapBackedSet, initWithJavaUtilMap_, map)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilMapBackedSet)
