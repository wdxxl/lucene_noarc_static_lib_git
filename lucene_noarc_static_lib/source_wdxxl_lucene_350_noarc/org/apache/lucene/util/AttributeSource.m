//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/util/AttributeSource.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/InstantiationException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/ref/WeakReference.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/LinkedList.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Set.h"
#include "java/util/WeakHashMap.h"
#include "java/util/function/Consumer.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttributeImpl.h"
#include "org/apache/lucene/analysis/tokenattributes/TermAttribute.h"
#include "org/apache/lucene/util/Attribute.h"
#include "org/apache/lucene/util/AttributeImpl.h"
#include "org/apache/lucene/util/AttributeReflector.h"
#include "org/apache/lucene/util/AttributeSource.h"

@interface OrgApacheLuceneUtilAttributeSource () {
 @public
  id<JavaUtilMap> attributes_;
  id<JavaUtilMap> attributeImpls_;
  IOSObjectArray *currentState_;
  OrgApacheLuceneUtilAttributeSource_AttributeFactory *factory_;
}

- (OrgApacheLuceneUtilAttributeSource_State *)getCurrentState;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilAttributeSource, attributes_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilAttributeSource, attributeImpls_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilAttributeSource, currentState_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilAttributeSource, factory_, OrgApacheLuceneUtilAttributeSource_AttributeFactory *)

inline JavaUtilWeakHashMap *OrgApacheLuceneUtilAttributeSource_get_knownImplClasses();
static JavaUtilWeakHashMap *OrgApacheLuceneUtilAttributeSource_knownImplClasses;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneUtilAttributeSource, knownImplClasses, JavaUtilWeakHashMap *)

__attribute__((unused)) static OrgApacheLuceneUtilAttributeSource_State *OrgApacheLuceneUtilAttributeSource_getCurrentState(OrgApacheLuceneUtilAttributeSource *self);

__attribute__((unused)) static void OrgApacheLuceneUtilAttributeSource_reflectWithWithOrgApacheLuceneUtilAttributeReflector_(OrgApacheLuceneUtilAttributeSource *self, id<OrgApacheLuceneUtilAttributeReflector> reflector);

@interface OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory : OrgApacheLuceneUtilAttributeSource_AttributeFactory

- (instancetype)init;

- (OrgApacheLuceneUtilAttributeImpl *)createAttributeInstanceWithIOSClass:(IOSClass *)attClass;

+ (IOSClass *)getClassForInterfaceWithIOSClass:(IOSClass *)attClass;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory)

inline JavaUtilWeakHashMap *OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_get_attClassImplMap();
static JavaUtilWeakHashMap *OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_attClassImplMap;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory, attClassImplMap, JavaUtilWeakHashMap *)

__attribute__((unused)) static void OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_init(OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory *self);

__attribute__((unused)) static OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory *new_OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory *create_OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_init();

__attribute__((unused)) static IOSClass *OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_getClassForInterfaceWithIOSClass_(IOSClass *attClass);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory)

@interface OrgApacheLuceneUtilAttributeSource_1 : NSObject < JavaUtilIterator > {
 @public
  OrgApacheLuceneUtilAttributeSource_State *state_;
}

- (instancetype)initWithOrgApacheLuceneUtilAttributeSource_State:(OrgApacheLuceneUtilAttributeSource_State *)capture$0;

- (void)remove;

- (OrgApacheLuceneUtilAttributeImpl *)next;

- (jboolean)hasNext;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilAttributeSource_1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilAttributeSource_1, state_, OrgApacheLuceneUtilAttributeSource_State *)

__attribute__((unused)) static void OrgApacheLuceneUtilAttributeSource_1_initWithOrgApacheLuceneUtilAttributeSource_State_(OrgApacheLuceneUtilAttributeSource_1 *self, OrgApacheLuceneUtilAttributeSource_State *capture$0);

__attribute__((unused)) static OrgApacheLuceneUtilAttributeSource_1 *new_OrgApacheLuceneUtilAttributeSource_1_initWithOrgApacheLuceneUtilAttributeSource_State_(OrgApacheLuceneUtilAttributeSource_State *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilAttributeSource_1 *create_OrgApacheLuceneUtilAttributeSource_1_initWithOrgApacheLuceneUtilAttributeSource_State_(OrgApacheLuceneUtilAttributeSource_State *capture$0);

@interface OrgApacheLuceneUtilAttributeSource_2 : NSObject < OrgApacheLuceneUtilAttributeReflector > {
 @public
  JavaLangStringBuilder *val$buffer_;
  jboolean val$prependAttClass_;
}

- (instancetype)initWithJavaLangStringBuilder:(JavaLangStringBuilder *)capture$0
                                  withBoolean:(jboolean)capture$1;

- (void)reflectWithIOSClass:(IOSClass *)attClass
               withNSString:(NSString *)key
                     withId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilAttributeSource_2)

__attribute__((unused)) static void OrgApacheLuceneUtilAttributeSource_2_initWithJavaLangStringBuilder_withBoolean_(OrgApacheLuceneUtilAttributeSource_2 *self, JavaLangStringBuilder *capture$0, jboolean capture$1);

__attribute__((unused)) static OrgApacheLuceneUtilAttributeSource_2 *new_OrgApacheLuceneUtilAttributeSource_2_initWithJavaLangStringBuilder_withBoolean_(JavaLangStringBuilder *capture$0, jboolean capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilAttributeSource_2 *create_OrgApacheLuceneUtilAttributeSource_2_initWithJavaLangStringBuilder_withBoolean_(JavaLangStringBuilder *capture$0, jboolean capture$1);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneUtilAttributeSource)

@implementation OrgApacheLuceneUtilAttributeSource

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilAttributeSource_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgApacheLuceneUtilAttributeSource:(OrgApacheLuceneUtilAttributeSource *)input {
  OrgApacheLuceneUtilAttributeSource_initWithOrgApacheLuceneUtilAttributeSource_(self, input);
  return self;
}

- (instancetype)initWithOrgApacheLuceneUtilAttributeSource_AttributeFactory:(OrgApacheLuceneUtilAttributeSource_AttributeFactory *)factory {
  OrgApacheLuceneUtilAttributeSource_initWithOrgApacheLuceneUtilAttributeSource_AttributeFactory_(self, factory);
  return self;
}

- (OrgApacheLuceneUtilAttributeSource_AttributeFactory *)getAttributeFactory {
  return self->factory_;
}

- (id<JavaUtilIterator>)getAttributeClassesIterator {
  return [((id<JavaUtilSet>) nil_chk(JavaUtilCollections_unmodifiableSetWithJavaUtilSet_([((id<JavaUtilMap>) nil_chk(attributes_)) keySet]))) iterator];
}

- (id<JavaUtilIterator>)getAttributeImplsIterator {
  OrgApacheLuceneUtilAttributeSource_State *initState = OrgApacheLuceneUtilAttributeSource_getCurrentState(self);
  if (initState != nil) {
    return create_OrgApacheLuceneUtilAttributeSource_1_initWithOrgApacheLuceneUtilAttributeSource_State_(initState);
  }
  else {
    return [((id<JavaUtilSet>) nil_chk(JavaUtilCollections_emptySet())) iterator];
  }
}

+ (JavaUtilLinkedList *)getAttributeInterfacesWithIOSClass:(IOSClass *)clazz {
  return OrgApacheLuceneUtilAttributeSource_getAttributeInterfacesWithIOSClass_(clazz);
}

- (void)addAttributeImplWithOrgApacheLuceneUtilAttributeImpl:(OrgApacheLuceneUtilAttributeImpl *)att {
  IOSClass *clazz = [((OrgApacheLuceneUtilAttributeImpl *) nil_chk(att)) java_getClass];
  if ([((id<JavaUtilMap>) nil_chk(attributeImpls_)) containsKeyWithId:clazz]) return;
  JavaUtilLinkedList *foundInterfaces = OrgApacheLuceneUtilAttributeSource_getAttributeInterfacesWithIOSClass_(clazz);
  for (JavaLangRefWeakReference * __strong curInterfaceRef in nil_chk(foundInterfaces)) {
    IOSClass *curInterface = [((JavaLangRefWeakReference *) nil_chk(curInterfaceRef)) get];
    JreAssert(((curInterface != nil)), (@"We have a strong reference on the class holding the interfaces, so they should never get evicted"));
    if (![((id<JavaUtilMap>) nil_chk(attributes_)) containsKeyWithId:curInterface]) {
      IOSObjectArray_Set(nil_chk(self->currentState_), 0, nil);
      [attributes_ putWithId:curInterface withId:att];
      [attributeImpls_ putWithId:clazz withId:att];
    }
  }
}

- (id<OrgApacheLuceneUtilAttribute>)addAttributeWithIOSClass:(IOSClass *)attClass {
  OrgApacheLuceneUtilAttributeImpl *attImpl = [((id<JavaUtilMap>) nil_chk(attributes_)) getWithId:attClass];
  if (attImpl == nil) {
    if (!([((IOSClass *) nil_chk(attClass)) isInterface] && [OrgApacheLuceneUtilAttribute_class_() isAssignableFrom:attClass])) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"addAttribute() only accepts an interface that extends Attribute, but ", [attClass getName], @" does not fulfil this contract."));
    }
    [self addAttributeImplWithOrgApacheLuceneUtilAttributeImpl:attImpl = [((OrgApacheLuceneUtilAttributeSource_AttributeFactory *) nil_chk(self->factory_)) createAttributeInstanceWithIOSClass:attClass]];
  }
  return [((IOSClass *) nil_chk(attClass)) cast:attImpl];
}

- (jboolean)hasAttributes {
  return ![((id<JavaUtilMap>) nil_chk(self->attributes_)) isEmpty];
}

- (jboolean)hasAttributeWithIOSClass:(IOSClass *)attClass {
  return [((id<JavaUtilMap>) nil_chk(self->attributes_)) containsKeyWithId:attClass];
}

- (id<OrgApacheLuceneUtilAttribute>)getAttributeWithIOSClass:(IOSClass *)attClass {
  OrgApacheLuceneUtilAttributeImpl *attImpl = [((id<JavaUtilMap>) nil_chk(attributes_)) getWithId:attClass];
  if (attImpl == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"This AttributeSource does not have the attribute '", [((IOSClass *) nil_chk(attClass)) getName], @"'."));
  }
  return [((IOSClass *) nil_chk(attClass)) cast:attImpl];
}

- (OrgApacheLuceneUtilAttributeSource_State *)getCurrentState {
  return OrgApacheLuceneUtilAttributeSource_getCurrentState(self);
}

- (void)clearAttributes {
  for (OrgApacheLuceneUtilAttributeSource_State *state = OrgApacheLuceneUtilAttributeSource_getCurrentState(self); state != nil; state = state->next_) {
    [((OrgApacheLuceneUtilAttributeImpl *) nil_chk(state->attribute_)) clear];
  }
}

- (OrgApacheLuceneUtilAttributeSource_State *)captureState {
  OrgApacheLuceneUtilAttributeSource_State *state = OrgApacheLuceneUtilAttributeSource_getCurrentState(self);
  return (state == nil) ? nil : (OrgApacheLuceneUtilAttributeSource_State *) cast_chk([((OrgApacheLuceneUtilAttributeSource_State *) nil_chk(state)) java_clone], [OrgApacheLuceneUtilAttributeSource_State class]);
}

- (void)restoreStateWithOrgApacheLuceneUtilAttributeSource_State:(OrgApacheLuceneUtilAttributeSource_State *)state {
  if (state == nil) return;
  do {
    OrgApacheLuceneUtilAttributeImpl *targetImpl = [((id<JavaUtilMap>) nil_chk(attributeImpls_)) getWithId:[((OrgApacheLuceneUtilAttributeImpl *) nil_chk(state->attribute_)) java_getClass]];
    if (targetImpl == nil) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"State contains AttributeImpl of type ", [[((OrgApacheLuceneUtilAttributeImpl *) nil_chk(state->attribute_)) java_getClass] getName], @" that is not in in this AttributeSource"));
    }
    [((OrgApacheLuceneUtilAttributeImpl *) nil_chk(state->attribute_)) copyToWithOrgApacheLuceneUtilAttributeImpl:targetImpl];
    state = state->next_;
  }
  while (state != nil);
}

- (NSUInteger)hash {
  jint code = 0;
  for (OrgApacheLuceneUtilAttributeSource_State *state = OrgApacheLuceneUtilAttributeSource_getCurrentState(self); state != nil; state = state->next_) {
    code = code * 31 + ((jint) [((OrgApacheLuceneUtilAttributeImpl *) nil_chk(state->attribute_)) hash]);
  }
  return code;
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) {
    return true;
  }
  if ([obj isKindOfClass:[OrgApacheLuceneUtilAttributeSource class]]) {
    OrgApacheLuceneUtilAttributeSource *other = (OrgApacheLuceneUtilAttributeSource *) cast_chk(obj, [OrgApacheLuceneUtilAttributeSource class]);
    if ([self hasAttributes]) {
      if (![((OrgApacheLuceneUtilAttributeSource *) nil_chk(other)) hasAttributes]) {
        return false;
      }
      if ([((id<JavaUtilMap>) nil_chk(self->attributeImpls_)) size] != [other->attributeImpls_ size]) {
        return false;
      }
      OrgApacheLuceneUtilAttributeSource_State *thisState = OrgApacheLuceneUtilAttributeSource_getCurrentState(self);
      OrgApacheLuceneUtilAttributeSource_State *otherState = OrgApacheLuceneUtilAttributeSource_getCurrentState(other);
      while (thisState != nil && otherState != nil) {
        if ([((OrgApacheLuceneUtilAttributeImpl *) nil_chk(otherState->attribute_)) java_getClass] != [((OrgApacheLuceneUtilAttributeImpl *) nil_chk(thisState->attribute_)) java_getClass] || ![((OrgApacheLuceneUtilAttributeImpl *) nil_chk(otherState->attribute_)) isEqual:thisState->attribute_]) {
          return false;
        }
        thisState = thisState->next_;
        otherState = otherState->next_;
      }
      return true;
    }
    else {
      return ![((OrgApacheLuceneUtilAttributeSource *) nil_chk(other)) hasAttributes];
    }
  }
  else return false;
}

- (NSString *)description {
  JavaLangStringBuilder *sb = [create_JavaLangStringBuilder_init() appendWithChar:'('];
  if ([self hasAttributes]) {
    for (OrgApacheLuceneUtilAttributeSource_State *state = OrgApacheLuceneUtilAttributeSource_getCurrentState(self); state != nil; state = state->next_) {
      if ([((JavaLangStringBuilder *) nil_chk(sb)) java_length] > 1) [sb appendWithChar:','];
      [sb appendWithNSString:[((OrgApacheLuceneUtilAttributeImpl *) nil_chk(state->attribute_)) description]];
    }
  }
  return [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(sb)) appendWithChar:')'])) description];
}

- (NSString *)reflectAsStringWithBoolean:(jboolean)prependAttClass {
  JavaLangStringBuilder *buffer = create_JavaLangStringBuilder_init();
  OrgApacheLuceneUtilAttributeSource_reflectWithWithOrgApacheLuceneUtilAttributeReflector_(self, create_OrgApacheLuceneUtilAttributeSource_2_initWithJavaLangStringBuilder_withBoolean_(buffer, prependAttClass));
  return [buffer description];
}

- (void)reflectWithWithOrgApacheLuceneUtilAttributeReflector:(id<OrgApacheLuceneUtilAttributeReflector>)reflector {
  OrgApacheLuceneUtilAttributeSource_reflectWithWithOrgApacheLuceneUtilAttributeReflector_(self, reflector);
}

- (OrgApacheLuceneUtilAttributeSource *)cloneAttributes {
  OrgApacheLuceneUtilAttributeSource *clone = create_OrgApacheLuceneUtilAttributeSource_initWithOrgApacheLuceneUtilAttributeSource_AttributeFactory_(self->factory_);
  if ([self hasAttributes]) {
    for (OrgApacheLuceneUtilAttributeSource_State *state = OrgApacheLuceneUtilAttributeSource_getCurrentState(self); state != nil; state = state->next_) {
      [((id<JavaUtilMap>) nil_chk(clone->attributeImpls_)) putWithId:[((OrgApacheLuceneUtilAttributeImpl *) nil_chk(state->attribute_)) java_getClass] withId:(OrgApacheLuceneUtilAttributeImpl *) cast_chk([((OrgApacheLuceneUtilAttributeImpl *) nil_chk(state->attribute_)) java_clone], [OrgApacheLuceneUtilAttributeImpl class])];
    }
    for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(self->attributes_)) entrySet])) {
      [clone->attributes_ putWithId:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey] withId:[((id<JavaUtilMap>) nil_chk(clone->attributeImpls_)) getWithId:[((OrgApacheLuceneUtilAttributeImpl *) nil_chk([entry_ getValue])) java_getClass]]];
    }
  }
  return clone;
}

- (void)copyToWithOrgApacheLuceneUtilAttributeSource:(OrgApacheLuceneUtilAttributeSource *)target {
  for (OrgApacheLuceneUtilAttributeSource_State *state = OrgApacheLuceneUtilAttributeSource_getCurrentState(self); state != nil; state = state->next_) {
    OrgApacheLuceneUtilAttributeImpl *targetImpl = [((id<JavaUtilMap>) nil_chk(((OrgApacheLuceneUtilAttributeSource *) nil_chk(target))->attributeImpls_)) getWithId:[((OrgApacheLuceneUtilAttributeImpl *) nil_chk(state->attribute_)) java_getClass]];
    if (targetImpl == nil) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"This AttributeSource contains AttributeImpl of type ", [[((OrgApacheLuceneUtilAttributeImpl *) nil_chk(state->attribute_)) java_getClass] getName], @" that is not in the target"));
    }
    [((OrgApacheLuceneUtilAttributeImpl *) nil_chk(state->attribute_)) copyToWithOrgApacheLuceneUtilAttributeImpl:targetImpl];
  }
}

- (void)dealloc {
  RELEASE_(attributes_);
  RELEASE_(attributeImpls_);
  RELEASE_(currentState_);
  RELEASE_(factory_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilAttributeSource_AttributeFactory;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "LJavaUtilLinkedList;", 0x8, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilAttribute;", 0x1, 9, 5, -1, 10, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 11, 5, -1, 12, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilAttribute;", 0x1, 13, 5, -1, 10, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilAttributeSource_State;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilAttributeSource_State;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 16, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 19, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, 20, 21, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 22, 23, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilAttributeSource;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 24, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithOrgApacheLuceneUtilAttributeSource:);
  methods[2].selector = @selector(initWithOrgApacheLuceneUtilAttributeSource_AttributeFactory:);
  methods[3].selector = @selector(getAttributeFactory);
  methods[4].selector = @selector(getAttributeClassesIterator);
  methods[5].selector = @selector(getAttributeImplsIterator);
  methods[6].selector = @selector(getAttributeInterfacesWithIOSClass:);
  methods[7].selector = @selector(addAttributeImplWithOrgApacheLuceneUtilAttributeImpl:);
  methods[8].selector = @selector(addAttributeWithIOSClass:);
  methods[9].selector = @selector(hasAttributes);
  methods[10].selector = @selector(hasAttributeWithIOSClass:);
  methods[11].selector = @selector(getAttributeWithIOSClass:);
  methods[12].selector = @selector(getCurrentState);
  methods[13].selector = @selector(clearAttributes);
  methods[14].selector = @selector(captureState);
  methods[15].selector = @selector(restoreStateWithOrgApacheLuceneUtilAttributeSource_State:);
  methods[16].selector = @selector(hash);
  methods[17].selector = @selector(isEqual:);
  methods[18].selector = @selector(description);
  methods[19].selector = @selector(reflectAsStringWithBoolean:);
  methods[20].selector = @selector(reflectWithWithOrgApacheLuceneUtilAttributeReflector:);
  methods[21].selector = @selector(cloneAttributes);
  methods[22].selector = @selector(copyToWithOrgApacheLuceneUtilAttributeSource:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "attributes_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 25, -1 },
    { "attributeImpls_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 26, -1 },
    { "currentState_", "[LOrgApacheLuceneUtilAttributeSource_State;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "factory_", "LOrgApacheLuceneUtilAttributeSource_AttributeFactory;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "knownImplClasses", "LJavaUtilWeakHashMap;", .constantValue.asLong = 0, 0x1a, -1, 27, 28, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilAttributeSource;", "LOrgApacheLuceneUtilAttributeSource_AttributeFactory;", "()Ljava/util/Iterator<Ljava/lang/Class<+Lorg/apache/lucene/util/Attribute;>;>;", "()Ljava/util/Iterator<Lorg/apache/lucene/util/AttributeImpl;>;", "getAttributeInterfaces", "LIOSClass;", "(Ljava/lang/Class<+Lorg/apache/lucene/util/AttributeImpl;>;)Ljava/util/LinkedList<Ljava/lang/ref/WeakReference<Ljava/lang/Class<+Lorg/apache/lucene/util/Attribute;>;>;>;", "addAttributeImpl", "LOrgApacheLuceneUtilAttributeImpl;", "addAttribute", "<A::Lorg/apache/lucene/util/Attribute;>(Ljava/lang/Class<TA;>;)TA;", "hasAttribute", "(Ljava/lang/Class<+Lorg/apache/lucene/util/Attribute;>;)Z", "getAttribute", "restoreState", "LOrgApacheLuceneUtilAttributeSource_State;", "hashCode", "equals", "LNSObject;", "toString", "reflectAsString", "Z", "reflectWith", "LOrgApacheLuceneUtilAttributeReflector;", "copyTo", "Ljava/util/Map<Ljava/lang/Class<+Lorg/apache/lucene/util/Attribute;>;Lorg/apache/lucene/util/AttributeImpl;>;", "Ljava/util/Map<Ljava/lang/Class<+Lorg/apache/lucene/util/AttributeImpl;>;Lorg/apache/lucene/util/AttributeImpl;>;", &OrgApacheLuceneUtilAttributeSource_knownImplClasses, "Ljava/util/WeakHashMap<Ljava/lang/Class<+Lorg/apache/lucene/util/AttributeImpl;>;Ljava/util/LinkedList<Ljava/lang/ref/WeakReference<Ljava/lang/Class<+Lorg/apache/lucene/util/Attribute;>;>;>;>;", "LOrgApacheLuceneUtilAttributeSource_AttributeFactory;LOrgApacheLuceneUtilAttributeSource_State;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilAttributeSource = { "AttributeSource", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x1, 23, 5, -1, 29, -1, -1, -1 };
  return &_OrgApacheLuceneUtilAttributeSource;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneUtilAttributeSource class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneUtilAttributeSource_knownImplClasses, new_JavaUtilWeakHashMap_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneUtilAttributeSource)
  }
}

@end

void OrgApacheLuceneUtilAttributeSource_init(OrgApacheLuceneUtilAttributeSource *self) {
  OrgApacheLuceneUtilAttributeSource_initWithOrgApacheLuceneUtilAttributeSource_AttributeFactory_(self, JreLoadStatic(OrgApacheLuceneUtilAttributeSource_AttributeFactory, DEFAULT_ATTRIBUTE_FACTORY));
}

OrgApacheLuceneUtilAttributeSource *new_OrgApacheLuceneUtilAttributeSource_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilAttributeSource, init)
}

OrgApacheLuceneUtilAttributeSource *create_OrgApacheLuceneUtilAttributeSource_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilAttributeSource, init)
}

void OrgApacheLuceneUtilAttributeSource_initWithOrgApacheLuceneUtilAttributeSource_(OrgApacheLuceneUtilAttributeSource *self, OrgApacheLuceneUtilAttributeSource *input) {
  NSObject_init(self);
  if (input == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"input AttributeSource must not be null");
  }
  JreStrongAssign(&self->attributes_, input->attributes_);
  JreStrongAssign(&self->attributeImpls_, input->attributeImpls_);
  JreStrongAssign(&self->currentState_, input->currentState_);
  JreStrongAssign(&self->factory_, input->factory_);
}

OrgApacheLuceneUtilAttributeSource *new_OrgApacheLuceneUtilAttributeSource_initWithOrgApacheLuceneUtilAttributeSource_(OrgApacheLuceneUtilAttributeSource *input) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilAttributeSource, initWithOrgApacheLuceneUtilAttributeSource_, input)
}

OrgApacheLuceneUtilAttributeSource *create_OrgApacheLuceneUtilAttributeSource_initWithOrgApacheLuceneUtilAttributeSource_(OrgApacheLuceneUtilAttributeSource *input) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilAttributeSource, initWithOrgApacheLuceneUtilAttributeSource_, input)
}

void OrgApacheLuceneUtilAttributeSource_initWithOrgApacheLuceneUtilAttributeSource_AttributeFactory_(OrgApacheLuceneUtilAttributeSource *self, OrgApacheLuceneUtilAttributeSource_AttributeFactory *factory) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->attributes_, new_JavaUtilLinkedHashMap_init());
  JreStrongAssignAndConsume(&self->attributeImpls_, new_JavaUtilLinkedHashMap_init());
  JreStrongAssignAndConsume(&self->currentState_, [IOSObjectArray newArrayWithLength:1 type:OrgApacheLuceneUtilAttributeSource_State_class_()]);
  JreStrongAssign(&self->factory_, factory);
}

OrgApacheLuceneUtilAttributeSource *new_OrgApacheLuceneUtilAttributeSource_initWithOrgApacheLuceneUtilAttributeSource_AttributeFactory_(OrgApacheLuceneUtilAttributeSource_AttributeFactory *factory) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilAttributeSource, initWithOrgApacheLuceneUtilAttributeSource_AttributeFactory_, factory)
}

OrgApacheLuceneUtilAttributeSource *create_OrgApacheLuceneUtilAttributeSource_initWithOrgApacheLuceneUtilAttributeSource_AttributeFactory_(OrgApacheLuceneUtilAttributeSource_AttributeFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilAttributeSource, initWithOrgApacheLuceneUtilAttributeSource_AttributeFactory_, factory)
}

JavaUtilLinkedList *OrgApacheLuceneUtilAttributeSource_getAttributeInterfacesWithIOSClass_(IOSClass *clazz) {
  OrgApacheLuceneUtilAttributeSource_initialize();
  @synchronized(OrgApacheLuceneUtilAttributeSource_knownImplClasses) {
    JavaUtilLinkedList *foundInterfaces = [((JavaUtilWeakHashMap *) nil_chk(OrgApacheLuceneUtilAttributeSource_knownImplClasses)) getWithId:clazz];
    if (foundInterfaces == nil) {
      [OrgApacheLuceneUtilAttributeSource_knownImplClasses putWithId:clazz withId:foundInterfaces = create_JavaUtilLinkedList_init()];
      IOSClass *actClazz = clazz;
      do {
        {
          IOSObjectArray *a__ = [((IOSClass *) nil_chk(actClazz)) getInterfaces];
          IOSClass * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
          IOSClass * const *e__ = b__ + a__->size_;
          while (b__ < e__) {
            IOSClass *curInterface = *b__++;
            if (curInterface != OrgApacheLuceneUtilAttribute_class_() && [OrgApacheLuceneUtilAttribute_class_() isAssignableFrom:curInterface]) {
              [foundInterfaces addWithId:create_JavaLangRefWeakReference_initWithId_([((IOSClass *) nil_chk(curInterface)) asSubclass:OrgApacheLuceneUtilAttribute_class_()])];
            }
          }
        }
        actClazz = [actClazz getSuperclass];
      }
      while (actClazz != nil);
    }
    return foundInterfaces;
  }
}

OrgApacheLuceneUtilAttributeSource_State *OrgApacheLuceneUtilAttributeSource_getCurrentState(OrgApacheLuceneUtilAttributeSource *self) {
  OrgApacheLuceneUtilAttributeSource_State *s = IOSObjectArray_Get(nil_chk(self->currentState_), 0);
  if (s != nil || ![self hasAttributes]) {
    return s;
  }
  OrgApacheLuceneUtilAttributeSource_State *c = s = IOSObjectArray_SetAndConsume(self->currentState_, 0, new_OrgApacheLuceneUtilAttributeSource_State_init());
  id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk([((id<JavaUtilMap>) nil_chk(self->attributeImpls_)) values])) iterator];
  JreStrongAssign(&c->attribute_, [((id<JavaUtilIterator>) nil_chk(it)) next]);
  while ([it hasNext]) {
    JreStrongAssignAndConsume(&c->next_, new_OrgApacheLuceneUtilAttributeSource_State_init());
    c = c->next_;
    JreStrongAssign(&c->attribute_, [it next]);
  }
  return s;
}

void OrgApacheLuceneUtilAttributeSource_reflectWithWithOrgApacheLuceneUtilAttributeReflector_(OrgApacheLuceneUtilAttributeSource *self, id<OrgApacheLuceneUtilAttributeReflector> reflector) {
  for (OrgApacheLuceneUtilAttributeSource_State *state = OrgApacheLuceneUtilAttributeSource_getCurrentState(self); state != nil; state = state->next_) {
    [((OrgApacheLuceneUtilAttributeImpl *) nil_chk(state->attribute_)) reflectWithWithOrgApacheLuceneUtilAttributeReflector:reflector];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilAttributeSource)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneUtilAttributeSource_AttributeFactory)

OrgApacheLuceneUtilAttributeSource_AttributeFactory *OrgApacheLuceneUtilAttributeSource_AttributeFactory_DEFAULT_ATTRIBUTE_FACTORY;

@implementation OrgApacheLuceneUtilAttributeSource_AttributeFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilAttributeSource_AttributeFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneUtilAttributeImpl *)createAttributeInstanceWithIOSClass:(IOSClass *)attClass {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilAttributeImpl;", 0x401, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createAttributeInstanceWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_ATTRIBUTE_FACTORY", "LOrgApacheLuceneUtilAttributeSource_AttributeFactory;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "createAttributeInstance", "LIOSClass;", "(Ljava/lang/Class<+Lorg/apache/lucene/util/Attribute;>;)Lorg/apache/lucene/util/AttributeImpl;", &OrgApacheLuceneUtilAttributeSource_AttributeFactory_DEFAULT_ATTRIBUTE_FACTORY, "LOrgApacheLuceneUtilAttributeSource;", "LOrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilAttributeSource_AttributeFactory = { "AttributeFactory", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x409, 2, 1, 4, 5, -1, -1, -1 };
  return &_OrgApacheLuceneUtilAttributeSource_AttributeFactory;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneUtilAttributeSource_AttributeFactory class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneUtilAttributeSource_AttributeFactory_DEFAULT_ATTRIBUTE_FACTORY, new_OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneUtilAttributeSource_AttributeFactory)
  }
}

@end

void OrgApacheLuceneUtilAttributeSource_AttributeFactory_init(OrgApacheLuceneUtilAttributeSource_AttributeFactory *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilAttributeSource_AttributeFactory)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory)

@implementation OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneUtilAttributeImpl *)createAttributeInstanceWithIOSClass:(IOSClass *)attClass {
  @try {
    return [((IOSClass *) nil_chk(OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_getClassForInterfaceWithIOSClass_(attClass))) newInstance];
  }
  @catch (JavaLangInstantiationException *e) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Could not instantiate implementing class for ", [((IOSClass *) nil_chk(attClass)) getName]));
  }
  @catch (JavaLangIllegalAccessException *e) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Could not instantiate implementing class for ", [((IOSClass *) nil_chk(attClass)) getName]));
  }
}

+ (IOSClass *)getClassForInterfaceWithIOSClass:(IOSClass *)attClass {
  return OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_getClassForInterfaceWithIOSClass_(attClass);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilAttributeImpl;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LIOSClass;", 0xa, 3, 1, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createAttributeInstanceWithIOSClass:);
  methods[2].selector = @selector(getClassForInterfaceWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "attClassImplMap", "LJavaUtilWeakHashMap;", .constantValue.asLong = 0, 0x1a, -1, 5, 6, -1 },
  };
  static const void *ptrTable[] = { "createAttributeInstance", "LIOSClass;", "(Ljava/lang/Class<+Lorg/apache/lucene/util/Attribute;>;)Lorg/apache/lucene/util/AttributeImpl;", "getClassForInterface", "(Ljava/lang/Class<+Lorg/apache/lucene/util/Attribute;>;)Ljava/lang/Class<+Lorg/apache/lucene/util/AttributeImpl;>;", &OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_attClassImplMap, "Ljava/util/WeakHashMap<Ljava/lang/Class<+Lorg/apache/lucene/util/Attribute;>;Ljava/lang/ref/WeakReference<Ljava/lang/Class<+Lorg/apache/lucene/util/AttributeImpl;>;>;>;", "LOrgApacheLuceneUtilAttributeSource_AttributeFactory;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory = { "DefaultAttributeFactory", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x1a, 3, 1, 7, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_attClassImplMap, new_JavaUtilWeakHashMap_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory)
  }
}

@end

void OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_init(OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory *self) {
  OrgApacheLuceneUtilAttributeSource_AttributeFactory_init(self);
}

OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory *new_OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory, init)
}

OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory *create_OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory, init)
}

IOSClass *OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_getClassForInterfaceWithIOSClass_(IOSClass *attClass) {
  OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_initialize();
  @synchronized(OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_attClassImplMap) {
    JavaLangRefWeakReference *ref = [((JavaUtilWeakHashMap *) nil_chk(OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_attClassImplMap)) getWithId:attClass];
    IOSClass *clazz = (ref == nil) ? nil : [((JavaLangRefWeakReference *) nil_chk(ref)) get];
    if (clazz == nil) {
      @try {
        if ([OrgApacheLuceneAnalysisTokenattributesTermAttribute_class_() isEqual:attClass]) {
          clazz = OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl_class_();
        }
        else {
          clazz = [((IOSClass *) nil_chk(IOSClass_forName_initialize_classLoader_(JreStrcat("$$", [((IOSClass *) nil_chk(attClass)) getName], @"Impl"), true, [attClass getClassLoader]))) asSubclass:OrgApacheLuceneUtilAttributeImpl_class_()];
        }
        [OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory_attClassImplMap putWithId:attClass withId:create_JavaLangRefWeakReference_initWithId_(clazz)];
      }
      @catch (JavaLangClassNotFoundException *e) {
        @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Could not find implementing class for ", [((IOSClass *) nil_chk(attClass)) getName]));
      }
    }
    return clazz;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilAttributeSource_AttributeFactory_DefaultAttributeFactory)

@implementation OrgApacheLuceneUtilAttributeSource_State

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilAttributeSource_State_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)java_clone {
  OrgApacheLuceneUtilAttributeSource_State *clone = create_OrgApacheLuceneUtilAttributeSource_State_init();
  JreStrongAssign(&clone->attribute_, (OrgApacheLuceneUtilAttributeImpl *) cast_chk([((OrgApacheLuceneUtilAttributeImpl *) nil_chk(attribute_)) java_clone], [OrgApacheLuceneUtilAttributeImpl class]));
  if (next_ != nil) {
    JreStrongAssign(&clone->next_, (OrgApacheLuceneUtilAttributeSource_State *) cast_chk([next_ java_clone], [OrgApacheLuceneUtilAttributeSource_State class]));
  }
  return clone;
}

- (void)dealloc {
  RELEASE_(attribute_);
  RELEASE_(next_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "attribute_", "LOrgApacheLuceneUtilAttributeImpl;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "next_", "LOrgApacheLuceneUtilAttributeSource_State;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "clone", "LOrgApacheLuceneUtilAttributeSource;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilAttributeSource_State = { "State", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x19, 2, 2, 1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilAttributeSource_State;
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self java_clone] retain];
}

@end

void OrgApacheLuceneUtilAttributeSource_State_init(OrgApacheLuceneUtilAttributeSource_State *self) {
  NSObject_init(self);
}

OrgApacheLuceneUtilAttributeSource_State *new_OrgApacheLuceneUtilAttributeSource_State_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilAttributeSource_State, init)
}

OrgApacheLuceneUtilAttributeSource_State *create_OrgApacheLuceneUtilAttributeSource_State_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilAttributeSource_State, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilAttributeSource_State)

@implementation OrgApacheLuceneUtilAttributeSource_1

- (instancetype)initWithOrgApacheLuceneUtilAttributeSource_State:(OrgApacheLuceneUtilAttributeSource_State *)capture$0 {
  OrgApacheLuceneUtilAttributeSource_1_initWithOrgApacheLuceneUtilAttributeSource_State_(self, capture$0);
  return self;
}

- (void)remove {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (OrgApacheLuceneUtilAttributeImpl *)next {
  if (state_ == nil) @throw create_JavaUtilNoSuchElementException_init();
  OrgApacheLuceneUtilAttributeImpl *att = state_->attribute_;
  JreStrongAssign(&state_, state_->next_);
  return att;
}

- (jboolean)hasNext {
  return state_ != nil;
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

- (void)dealloc {
  RELEASE_(state_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilAttributeImpl;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneUtilAttributeSource_State:);
  methods[1].selector = @selector(remove);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(hasNext);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "state_", "LOrgApacheLuceneUtilAttributeSource_State;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilAttributeSource;", "getAttributeImplsIterator", "Ljava/lang/Object;Ljava/util/Iterator<Lorg/apache/lucene/util/AttributeImpl;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilAttributeSource_1 = { "", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x8018, 4, 1, 0, -1, 1, 2, -1 };
  return &_OrgApacheLuceneUtilAttributeSource_1;
}

@end

void OrgApacheLuceneUtilAttributeSource_1_initWithOrgApacheLuceneUtilAttributeSource_State_(OrgApacheLuceneUtilAttributeSource_1 *self, OrgApacheLuceneUtilAttributeSource_State *capture$0) {
  NSObject_init(self);
  JreStrongAssign(&self->state_, capture$0);
}

OrgApacheLuceneUtilAttributeSource_1 *new_OrgApacheLuceneUtilAttributeSource_1_initWithOrgApacheLuceneUtilAttributeSource_State_(OrgApacheLuceneUtilAttributeSource_State *capture$0) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilAttributeSource_1, initWithOrgApacheLuceneUtilAttributeSource_State_, capture$0)
}

OrgApacheLuceneUtilAttributeSource_1 *create_OrgApacheLuceneUtilAttributeSource_1_initWithOrgApacheLuceneUtilAttributeSource_State_(OrgApacheLuceneUtilAttributeSource_State *capture$0) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilAttributeSource_1, initWithOrgApacheLuceneUtilAttributeSource_State_, capture$0)
}

@implementation OrgApacheLuceneUtilAttributeSource_2

- (instancetype)initWithJavaLangStringBuilder:(JavaLangStringBuilder *)capture$0
                                  withBoolean:(jboolean)capture$1 {
  OrgApacheLuceneUtilAttributeSource_2_initWithJavaLangStringBuilder_withBoolean_(self, capture$0, capture$1);
  return self;
}

- (void)reflectWithIOSClass:(IOSClass *)attClass
               withNSString:(NSString *)key
                     withId:(id)value {
  if ([((JavaLangStringBuilder *) nil_chk(val$buffer_)) java_length] > 0) {
    [val$buffer_ appendWithChar:','];
  }
  if (val$prependAttClass_) {
    [((JavaLangStringBuilder *) nil_chk([val$buffer_ appendWithNSString:[((IOSClass *) nil_chk(attClass)) getName]])) appendWithChar:'#'];
  }
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([val$buffer_ appendWithNSString:key])) appendWithChar:'='])) appendWithId:(value == nil) ? @"null" : value];
}

- (void)dealloc {
  RELEASE_(val$buffer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangStringBuilder:withBoolean:);
  methods[1].selector = @selector(reflectWithIOSClass:withNSString:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$buffer_", "LJavaLangStringBuilder;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$prependAttClass_", "Z", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "reflect", "LIOSClass;LNSString;LNSObject;", "(Ljava/lang/Class<+Lorg/apache/lucene/util/Attribute;>;Ljava/lang/String;Ljava/lang/Object;)V", "LOrgApacheLuceneUtilAttributeSource;", "reflectAsStringWithBoolean:" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilAttributeSource_2 = { "", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x8018, 2, 2, 3, -1, 4, -1, -1 };
  return &_OrgApacheLuceneUtilAttributeSource_2;
}

@end

void OrgApacheLuceneUtilAttributeSource_2_initWithJavaLangStringBuilder_withBoolean_(OrgApacheLuceneUtilAttributeSource_2 *self, JavaLangStringBuilder *capture$0, jboolean capture$1) {
  JreStrongAssign(&self->val$buffer_, capture$0);
  self->val$prependAttClass_ = capture$1;
  NSObject_init(self);
}

OrgApacheLuceneUtilAttributeSource_2 *new_OrgApacheLuceneUtilAttributeSource_2_initWithJavaLangStringBuilder_withBoolean_(JavaLangStringBuilder *capture$0, jboolean capture$1) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilAttributeSource_2, initWithJavaLangStringBuilder_withBoolean_, capture$0, capture$1)
}

OrgApacheLuceneUtilAttributeSource_2 *create_OrgApacheLuceneUtilAttributeSource_2_initWithJavaLangStringBuilder_withBoolean_(JavaLangStringBuilder *capture$0, jboolean capture$1) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilAttributeSource_2, initWithJavaLangStringBuilder_withBoolean_, capture$0, capture$1)
}
