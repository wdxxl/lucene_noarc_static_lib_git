//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/util/fst/PairOutputs.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/store/DataInput.h"
#include "org/apache/lucene/store/DataOutput.h"
#include "org/apache/lucene/util/fst/Outputs.h"
#include "org/apache/lucene/util/fst/PairOutputs.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface OrgApacheLuceneUtilFstPairOutputs () {
 @public
  OrgApacheLuceneUtilFstPairOutputs_Pair *NO_OUTPUT_;
  OrgApacheLuceneUtilFstOutputs *outputs1_;
  OrgApacheLuceneUtilFstOutputs *outputs2_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilFstPairOutputs, NO_OUTPUT_, OrgApacheLuceneUtilFstPairOutputs_Pair *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilFstPairOutputs, outputs1_, OrgApacheLuceneUtilFstOutputs *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilFstPairOutputs, outputs2_, OrgApacheLuceneUtilFstOutputs *)

@implementation OrgApacheLuceneUtilFstPairOutputs

- (instancetype)initWithOrgApacheLuceneUtilFstOutputs:(OrgApacheLuceneUtilFstOutputs *)outputs1
                    withOrgApacheLuceneUtilFstOutputs:(OrgApacheLuceneUtilFstOutputs *)outputs2 {
  OrgApacheLuceneUtilFstPairOutputs_initWithOrgApacheLuceneUtilFstOutputs_withOrgApacheLuceneUtilFstOutputs_(self, outputs1, outputs2);
  return self;
}

- (OrgApacheLuceneUtilFstPairOutputs_Pair *)getWithId:(id)output1
                                               withId:(id)output2 {
  if (output1 == [((OrgApacheLuceneUtilFstOutputs *) nil_chk(outputs1_)) getNoOutput] && output2 == [((OrgApacheLuceneUtilFstOutputs *) nil_chk(outputs2_)) getNoOutput]) {
    return NO_OUTPUT_;
  }
  else {
    return create_OrgApacheLuceneUtilFstPairOutputs_Pair_initWithId_withId_(output1, output2);
  }
}

- (OrgApacheLuceneUtilFstPairOutputs_Pair *)commonWithId:(OrgApacheLuceneUtilFstPairOutputs_Pair *)pair1
                                                  withId:(OrgApacheLuceneUtilFstPairOutputs_Pair *)pair2 {
  return [self getWithId:[((OrgApacheLuceneUtilFstOutputs *) nil_chk(outputs1_)) commonWithId:((OrgApacheLuceneUtilFstPairOutputs_Pair *) nil_chk(pair1))->output1_ withId:((OrgApacheLuceneUtilFstPairOutputs_Pair *) nil_chk(pair2))->output1_] withId:[((OrgApacheLuceneUtilFstOutputs *) nil_chk(outputs2_)) commonWithId:pair1->output2_ withId:pair2->output2_]];
}

- (OrgApacheLuceneUtilFstPairOutputs_Pair *)subtractWithId:(OrgApacheLuceneUtilFstPairOutputs_Pair *)output
                                                    withId:(OrgApacheLuceneUtilFstPairOutputs_Pair *)inc {
  return [self getWithId:[((OrgApacheLuceneUtilFstOutputs *) nil_chk(outputs1_)) subtractWithId:((OrgApacheLuceneUtilFstPairOutputs_Pair *) nil_chk(output))->output1_ withId:((OrgApacheLuceneUtilFstPairOutputs_Pair *) nil_chk(inc))->output1_] withId:[((OrgApacheLuceneUtilFstOutputs *) nil_chk(outputs2_)) subtractWithId:output->output2_ withId:inc->output2_]];
}

- (OrgApacheLuceneUtilFstPairOutputs_Pair *)addWithId:(OrgApacheLuceneUtilFstPairOutputs_Pair *)prefix
                                               withId:(OrgApacheLuceneUtilFstPairOutputs_Pair *)output {
  return [self getWithId:[((OrgApacheLuceneUtilFstOutputs *) nil_chk(outputs1_)) addWithId:((OrgApacheLuceneUtilFstPairOutputs_Pair *) nil_chk(prefix))->output1_ withId:((OrgApacheLuceneUtilFstPairOutputs_Pair *) nil_chk(output))->output1_] withId:[((OrgApacheLuceneUtilFstOutputs *) nil_chk(outputs2_)) addWithId:prefix->output2_ withId:output->output2_]];
}

- (void)writeWithId:(OrgApacheLuceneUtilFstPairOutputs_Pair *)output
withOrgApacheLuceneStoreDataOutput:(OrgApacheLuceneStoreDataOutput *)writer {
  [((OrgApacheLuceneUtilFstOutputs *) nil_chk(outputs1_)) writeWithId:((OrgApacheLuceneUtilFstPairOutputs_Pair *) nil_chk(output))->output1_ withOrgApacheLuceneStoreDataOutput:writer];
  [((OrgApacheLuceneUtilFstOutputs *) nil_chk(outputs2_)) writeWithId:output->output2_ withOrgApacheLuceneStoreDataOutput:writer];
}

- (OrgApacheLuceneUtilFstPairOutputs_Pair *)readWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg {
  id output1 = [((OrgApacheLuceneUtilFstOutputs *) nil_chk(outputs1_)) readWithOrgApacheLuceneStoreDataInput:inArg];
  id output2 = [((OrgApacheLuceneUtilFstOutputs *) nil_chk(outputs2_)) readWithOrgApacheLuceneStoreDataInput:inArg];
  return [self getWithId:output1 withId:output2];
}

- (OrgApacheLuceneUtilFstPairOutputs_Pair *)getNoOutput {
  return NO_OUTPUT_;
}

- (NSString *)outputToStringWithId:(OrgApacheLuceneUtilFstPairOutputs_Pair *)output {
  return JreStrcat("$$C$C", @"<pair:", [((OrgApacheLuceneUtilFstOutputs *) nil_chk(outputs1_)) outputToStringWithId:((OrgApacheLuceneUtilFstPairOutputs_Pair *) nil_chk(output))->output1_], ',', [((OrgApacheLuceneUtilFstOutputs *) nil_chk(outputs2_)) outputToStringWithId:output->output2_], '>');
}

- (void)dealloc {
  RELEASE_(NO_OUTPUT_);
  RELEASE_(outputs1_);
  RELEASE_(outputs2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilFstPairOutputs_Pair;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilFstPairOutputs_Pair;", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilFstPairOutputs_Pair;", 0x1, 8, 6, -1, 7, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilFstPairOutputs_Pair;", 0x1, 9, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x1, 10, 11, 12, 13, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilFstPairOutputs_Pair;", 0x1, 14, 15, 12, 16, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilFstPairOutputs_Pair;", 0x1, -1, -1, -1, 17, -1, -1 },
    { NULL, "LNSString;", 0x1, 18, 19, -1, 20, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneUtilFstOutputs:withOrgApacheLuceneUtilFstOutputs:);
  methods[1].selector = @selector(getWithId:withId:);
  methods[2].selector = @selector(commonWithId:withId:);
  methods[3].selector = @selector(subtractWithId:withId:);
  methods[4].selector = @selector(addWithId:withId:);
  methods[5].selector = @selector(writeWithId:withOrgApacheLuceneStoreDataOutput:);
  methods[6].selector = @selector(readWithOrgApacheLuceneStoreDataInput:);
  methods[7].selector = @selector(getNoOutput);
  methods[8].selector = @selector(outputToStringWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NO_OUTPUT_", "LOrgApacheLuceneUtilFstPairOutputs_Pair;", .constantValue.asLong = 0, 0x12, -1, -1, 21, -1 },
    { "outputs1_", "LOrgApacheLuceneUtilFstOutputs;", .constantValue.asLong = 0, 0x12, -1, -1, 22, -1 },
    { "outputs2_", "LOrgApacheLuceneUtilFstOutputs;", .constantValue.asLong = 0, 0x12, -1, -1, 23, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilFstOutputs;LOrgApacheLuceneUtilFstOutputs;", "(Lorg/apache/lucene/util/fst/Outputs<TA;>;Lorg/apache/lucene/util/fst/Outputs<TB;>;)V", "get", "LNSObject;LNSObject;", "(TA;TB;)Lorg/apache/lucene/util/fst/PairOutputs$Pair<TA;TB;>;", "common", "LOrgApacheLuceneUtilFstPairOutputs_Pair;LOrgApacheLuceneUtilFstPairOutputs_Pair;", "(Lorg/apache/lucene/util/fst/PairOutputs$Pair<TA;TB;>;Lorg/apache/lucene/util/fst/PairOutputs$Pair<TA;TB;>;)Lorg/apache/lucene/util/fst/PairOutputs$Pair<TA;TB;>;", "subtract", "add", "write", "LOrgApacheLuceneUtilFstPairOutputs_Pair;LOrgApacheLuceneStoreDataOutput;", "LJavaIoIOException;", "(Lorg/apache/lucene/util/fst/PairOutputs$Pair<TA;TB;>;Lorg/apache/lucene/store/DataOutput;)V", "read", "LOrgApacheLuceneStoreDataInput;", "(Lorg/apache/lucene/store/DataInput;)Lorg/apache/lucene/util/fst/PairOutputs$Pair<TA;TB;>;", "()Lorg/apache/lucene/util/fst/PairOutputs$Pair<TA;TB;>;", "outputToString", "LOrgApacheLuceneUtilFstPairOutputs_Pair;", "(Lorg/apache/lucene/util/fst/PairOutputs$Pair<TA;TB;>;)Ljava/lang/String;", "Lorg/apache/lucene/util/fst/PairOutputs$Pair<TA;TB;>;", "Lorg/apache/lucene/util/fst/Outputs<TA;>;", "Lorg/apache/lucene/util/fst/Outputs<TB;>;", "<A:Ljava/lang/Object;B:Ljava/lang/Object;>Lorg/apache/lucene/util/fst/Outputs<Lorg/apache/lucene/util/fst/PairOutputs$Pair<TA;TB;>;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilFstPairOutputs = { "PairOutputs", "org.apache.lucene.util.fst", ptrTable, methods, fields, 7, 0x1, 9, 3, -1, 19, -1, 24, -1 };
  return &_OrgApacheLuceneUtilFstPairOutputs;
}

@end

void OrgApacheLuceneUtilFstPairOutputs_initWithOrgApacheLuceneUtilFstOutputs_withOrgApacheLuceneUtilFstOutputs_(OrgApacheLuceneUtilFstPairOutputs *self, OrgApacheLuceneUtilFstOutputs *outputs1, OrgApacheLuceneUtilFstOutputs *outputs2) {
  OrgApacheLuceneUtilFstOutputs_init(self);
  JreStrongAssign(&self->outputs1_, outputs1);
  JreStrongAssign(&self->outputs2_, outputs2);
  JreStrongAssignAndConsume(&self->NO_OUTPUT_, new_OrgApacheLuceneUtilFstPairOutputs_Pair_initWithId_withId_([((OrgApacheLuceneUtilFstOutputs *) nil_chk(outputs1)) getNoOutput], [((OrgApacheLuceneUtilFstOutputs *) nil_chk(outputs2)) getNoOutput]));
}

OrgApacheLuceneUtilFstPairOutputs *new_OrgApacheLuceneUtilFstPairOutputs_initWithOrgApacheLuceneUtilFstOutputs_withOrgApacheLuceneUtilFstOutputs_(OrgApacheLuceneUtilFstOutputs *outputs1, OrgApacheLuceneUtilFstOutputs *outputs2) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilFstPairOutputs, initWithOrgApacheLuceneUtilFstOutputs_withOrgApacheLuceneUtilFstOutputs_, outputs1, outputs2)
}

OrgApacheLuceneUtilFstPairOutputs *create_OrgApacheLuceneUtilFstPairOutputs_initWithOrgApacheLuceneUtilFstOutputs_withOrgApacheLuceneUtilFstOutputs_(OrgApacheLuceneUtilFstOutputs *outputs1, OrgApacheLuceneUtilFstOutputs *outputs2) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilFstPairOutputs, initWithOrgApacheLuceneUtilFstOutputs_withOrgApacheLuceneUtilFstOutputs_, outputs1, outputs2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilFstPairOutputs)

@implementation OrgApacheLuceneUtilFstPairOutputs_Pair

- (instancetype)initWithId:(id)output1
                    withId:(id)output2 {
  OrgApacheLuceneUtilFstPairOutputs_Pair_initWithId_withId_(self, output1, output2);
  return self;
}

- (jboolean)isEqual:(id)other {
  if (other == self) {
    return true;
  }
  else if ([other isKindOfClass:[OrgApacheLuceneUtilFstPairOutputs_Pair class]]) {
    OrgApacheLuceneUtilFstPairOutputs_Pair *pair = (OrgApacheLuceneUtilFstPairOutputs_Pair *) cast_chk(other, [OrgApacheLuceneUtilFstPairOutputs_Pair class]);
    return [nil_chk(output1_) isEqual:((OrgApacheLuceneUtilFstPairOutputs_Pair *) nil_chk(pair))->output1_] && [nil_chk(output2_) isEqual:pair->output2_];
  }
  else {
    return false;
  }
}

- (NSUInteger)hash {
  return ((jint) [nil_chk(output1_) hash]) + ((jint) [nil_chk(output2_) hash]);
}

- (void)dealloc {
  RELEASE_(output1_);
  RELEASE_(output2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:withId:);
  methods[1].selector = @selector(isEqual:);
  methods[2].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "output1_", "LNSObject;", .constantValue.asLong = 0, 0x11, -1, -1, 5, -1 },
    { "output2_", "LNSObject;", .constantValue.asLong = 0, 0x11, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LNSObject;", "(TA;TB;)V", "equals", "LNSObject;", "hashCode", "TA;", "TB;", "LOrgApacheLuceneUtilFstPairOutputs;", "<A:Ljava/lang/Object;B:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilFstPairOutputs_Pair = { "Pair", "org.apache.lucene.util.fst", ptrTable, methods, fields, 7, 0x9, 3, 2, 7, -1, -1, 8, -1 };
  return &_OrgApacheLuceneUtilFstPairOutputs_Pair;
}

@end

void OrgApacheLuceneUtilFstPairOutputs_Pair_initWithId_withId_(OrgApacheLuceneUtilFstPairOutputs_Pair *self, id output1, id output2) {
  NSObject_init(self);
  JreStrongAssign(&self->output1_, output1);
  JreStrongAssign(&self->output2_, output2);
}

OrgApacheLuceneUtilFstPairOutputs_Pair *new_OrgApacheLuceneUtilFstPairOutputs_Pair_initWithId_withId_(id output1, id output2) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilFstPairOutputs_Pair, initWithId_withId_, output1, output2)
}

OrgApacheLuceneUtilFstPairOutputs_Pair *create_OrgApacheLuceneUtilFstPairOutputs_Pair_initWithId_withId_(id output1, id output2) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilFstPairOutputs_Pair, initWithId_withId_, output1, output2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilFstPairOutputs_Pair)
