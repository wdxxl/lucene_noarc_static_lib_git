//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/index/ParallelReader.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Set.h"
#include "java/util/SortedMap.h"
#include "java/util/TreeMap.h"
#include "java/util/concurrent/ConcurrentHashMap.h"
#include "org/apache/lucene/document/Document.h"
#include "org/apache/lucene/document/FieldSelector.h"
#include "org/apache/lucene/document/FieldSelectorResult.h"
#include "org/apache/lucene/document/Fieldable.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/ParallelReader.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/index/TermDocs.h"
#include "org/apache/lucene/index/TermEnum.h"
#include "org/apache/lucene/index/TermFreqVector.h"
#include "org/apache/lucene/index/TermPositions.h"
#include "org/apache/lucene/index/TermVectorMapper.h"
#include "org/apache/lucene/util/MapBackedSet.h"

@interface OrgApacheLuceneIndexParallelReader () {
 @public
  id<JavaUtilList> readers_;
  id<JavaUtilList> decrefOnClose_;
  id<JavaUtilSortedMap> fieldToReader_;
  id<JavaUtilMap> readerToFields_;
  id<JavaUtilList> storedFieldReaders_;
  jint maxDoc_;
  jint numDocs_;
  jboolean hasDeletions_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexParallelReader, readers_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexParallelReader, decrefOnClose_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexParallelReader, fieldToReader_, id<JavaUtilSortedMap>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexParallelReader, readerToFields_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexParallelReader, storedFieldReaders_, id<JavaUtilList>)

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneIndexParallelReader__Annotations$0();

@interface OrgApacheLuceneIndexParallelReader_ParallelTermEnum : OrgApacheLuceneIndexTermEnum {
 @public
  OrgApacheLuceneIndexParallelReader *this$0_;
  NSString *field_;
  id<JavaUtilIterator> fieldIterator_;
  OrgApacheLuceneIndexTermEnum *termEnum_;
}

- (instancetype)initWithOrgApacheLuceneIndexParallelReader:(OrgApacheLuceneIndexParallelReader *)outer$;

- (instancetype)initWithOrgApacheLuceneIndexParallelReader:(OrgApacheLuceneIndexParallelReader *)outer$
                              withOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term;

- (jboolean)next;

- (OrgApacheLuceneIndexTerm *)term;

- (jint)docFreq;

- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexParallelReader_ParallelTermEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexParallelReader_ParallelTermEnum, field_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexParallelReader_ParallelTermEnum, fieldIterator_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexParallelReader_ParallelTermEnum, termEnum_, OrgApacheLuceneIndexTermEnum *)

__attribute__((unused)) static void OrgApacheLuceneIndexParallelReader_ParallelTermEnum_initWithOrgApacheLuceneIndexParallelReader_(OrgApacheLuceneIndexParallelReader_ParallelTermEnum *self, OrgApacheLuceneIndexParallelReader *outer$);

__attribute__((unused)) static OrgApacheLuceneIndexParallelReader_ParallelTermEnum *new_OrgApacheLuceneIndexParallelReader_ParallelTermEnum_initWithOrgApacheLuceneIndexParallelReader_(OrgApacheLuceneIndexParallelReader *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexParallelReader_ParallelTermEnum *create_OrgApacheLuceneIndexParallelReader_ParallelTermEnum_initWithOrgApacheLuceneIndexParallelReader_(OrgApacheLuceneIndexParallelReader *outer$);

__attribute__((unused)) static void OrgApacheLuceneIndexParallelReader_ParallelTermEnum_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexParallelReader_ParallelTermEnum *self, OrgApacheLuceneIndexParallelReader *outer$, OrgApacheLuceneIndexTerm *term);

__attribute__((unused)) static OrgApacheLuceneIndexParallelReader_ParallelTermEnum *new_OrgApacheLuceneIndexParallelReader_ParallelTermEnum_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexParallelReader *outer$, OrgApacheLuceneIndexTerm *term) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexParallelReader_ParallelTermEnum *create_OrgApacheLuceneIndexParallelReader_ParallelTermEnum_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexParallelReader *outer$, OrgApacheLuceneIndexTerm *term);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexParallelReader_ParallelTermEnum)

@interface OrgApacheLuceneIndexParallelReader_ParallelTermDocs : NSObject < OrgApacheLuceneIndexTermDocs > {
 @public
  OrgApacheLuceneIndexParallelReader *this$0_;
  id<OrgApacheLuceneIndexTermDocs> termDocs_;
}

- (instancetype)initWithOrgApacheLuceneIndexParallelReader:(OrgApacheLuceneIndexParallelReader *)outer$;

- (instancetype)initWithOrgApacheLuceneIndexParallelReader:(OrgApacheLuceneIndexParallelReader *)outer$
                              withOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term;

- (jint)doc;

- (jint)freq;

- (void)seekWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term;

- (void)seekWithOrgApacheLuceneIndexTermEnum:(OrgApacheLuceneIndexTermEnum *)termEnum;

- (jboolean)next;

- (jint)readWithIntArray:(IOSIntArray *)docs
            withIntArray:(IOSIntArray *)freqs;

- (jboolean)skipToWithInt:(jint)target;

- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexParallelReader_ParallelTermDocs)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexParallelReader_ParallelTermDocs, termDocs_, id<OrgApacheLuceneIndexTermDocs>)

__attribute__((unused)) static void OrgApacheLuceneIndexParallelReader_ParallelTermDocs_initWithOrgApacheLuceneIndexParallelReader_(OrgApacheLuceneIndexParallelReader_ParallelTermDocs *self, OrgApacheLuceneIndexParallelReader *outer$);

__attribute__((unused)) static OrgApacheLuceneIndexParallelReader_ParallelTermDocs *new_OrgApacheLuceneIndexParallelReader_ParallelTermDocs_initWithOrgApacheLuceneIndexParallelReader_(OrgApacheLuceneIndexParallelReader *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexParallelReader_ParallelTermDocs *create_OrgApacheLuceneIndexParallelReader_ParallelTermDocs_initWithOrgApacheLuceneIndexParallelReader_(OrgApacheLuceneIndexParallelReader *outer$);

__attribute__((unused)) static void OrgApacheLuceneIndexParallelReader_ParallelTermDocs_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexParallelReader_ParallelTermDocs *self, OrgApacheLuceneIndexParallelReader *outer$, OrgApacheLuceneIndexTerm *term);

__attribute__((unused)) static OrgApacheLuceneIndexParallelReader_ParallelTermDocs *new_OrgApacheLuceneIndexParallelReader_ParallelTermDocs_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexParallelReader *outer$, OrgApacheLuceneIndexTerm *term) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexParallelReader_ParallelTermDocs *create_OrgApacheLuceneIndexParallelReader_ParallelTermDocs_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexParallelReader *outer$, OrgApacheLuceneIndexTerm *term);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexParallelReader_ParallelTermDocs)

@interface OrgApacheLuceneIndexParallelReader_ParallelTermPositions : OrgApacheLuceneIndexParallelReader_ParallelTermDocs < OrgApacheLuceneIndexTermPositions > {
 @public
  OrgApacheLuceneIndexParallelReader *this$1_;
}

- (instancetype)initWithOrgApacheLuceneIndexParallelReader:(OrgApacheLuceneIndexParallelReader *)outer$;

- (instancetype)initWithOrgApacheLuceneIndexParallelReader:(OrgApacheLuceneIndexParallelReader *)outer$
                              withOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term;

- (void)seekWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term;

- (jint)nextPosition;

- (jint)getPayloadLength;

- (IOSByteArray *)getPayloadWithByteArray:(IOSByteArray *)data
                                  withInt:(jint)offset;

- (jboolean)isPayloadAvailable;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexParallelReader_ParallelTermPositions)

__attribute__((unused)) static void OrgApacheLuceneIndexParallelReader_ParallelTermPositions_initWithOrgApacheLuceneIndexParallelReader_(OrgApacheLuceneIndexParallelReader_ParallelTermPositions *self, OrgApacheLuceneIndexParallelReader *outer$);

__attribute__((unused)) static OrgApacheLuceneIndexParallelReader_ParallelTermPositions *new_OrgApacheLuceneIndexParallelReader_ParallelTermPositions_initWithOrgApacheLuceneIndexParallelReader_(OrgApacheLuceneIndexParallelReader *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexParallelReader_ParallelTermPositions *create_OrgApacheLuceneIndexParallelReader_ParallelTermPositions_initWithOrgApacheLuceneIndexParallelReader_(OrgApacheLuceneIndexParallelReader *outer$);

__attribute__((unused)) static void OrgApacheLuceneIndexParallelReader_ParallelTermPositions_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexParallelReader_ParallelTermPositions *self, OrgApacheLuceneIndexParallelReader *outer$, OrgApacheLuceneIndexTerm *term);

__attribute__((unused)) static OrgApacheLuceneIndexParallelReader_ParallelTermPositions *new_OrgApacheLuceneIndexParallelReader_ParallelTermPositions_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexParallelReader *outer$, OrgApacheLuceneIndexTerm *term) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexParallelReader_ParallelTermPositions *create_OrgApacheLuceneIndexParallelReader_ParallelTermPositions_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexParallelReader *outer$, OrgApacheLuceneIndexTerm *term);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexParallelReader_ParallelTermPositions)

@implementation OrgApacheLuceneIndexParallelReader

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexParallelReader_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithBoolean:(jboolean)closeSubReaders {
  OrgApacheLuceneIndexParallelReader_initWithBoolean_(self, closeSubReaders);
  return self;
}

- (NSString *)description {
  JavaLangStringBuilder *buffer = create_JavaLangStringBuilder_initWithNSString_(@"ParallelReader(");
  id<JavaUtilIterator> iter = [((id<JavaUtilList>) nil_chk(readers_)) iterator];
  if ([((id<JavaUtilIterator>) nil_chk(iter)) hasNext]) {
    [buffer appendWithId:[iter next]];
  }
  while ([iter hasNext]) {
    [((JavaLangStringBuilder *) nil_chk([buffer appendWithNSString:@", "])) appendWithId:[iter next]];
  }
  [buffer appendWithChar:')'];
  return [buffer description];
}

- (void)addWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  [self ensureOpen];
  [self addWithOrgApacheLuceneIndexIndexReader:reader withBoolean:false];
}

- (void)addWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                   withBoolean:(jboolean)ignoreStoredFields {
  [self ensureOpen];
  if ([((id<JavaUtilList>) nil_chk(readers_)) size] == 0) {
    self->maxDoc_ = [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) maxDoc];
    self->numDocs_ = [reader numDocs];
    self->hasDeletions_ = [reader hasDeletions];
  }
  if ([((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) maxDoc] != maxDoc_) @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"All readers must have same maxDoc: ", maxDoc_, @"!=", [reader maxDoc]));
  if ([reader numDocs] != numDocs_) @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"All readers must have same numDocs: ", numDocs_, @"!=", [reader numDocs]));
  id<JavaUtilCollection> fields = [reader getFieldNamesWithOrgApacheLuceneIndexIndexReader_FieldOption:JreLoadEnum(OrgApacheLuceneIndexIndexReader_FieldOption, ALL)];
  [((id<JavaUtilMap>) nil_chk(readerToFields_)) putWithId:reader withId:fields];
  for (NSString * __strong field in nil_chk(fields)) {
    if ([((id<JavaUtilSortedMap>) nil_chk(fieldToReader_)) getWithId:field] == nil) [((id<JavaUtilSortedMap>) nil_chk(fieldToReader_)) putWithId:field withId:reader];
  }
  if (!ignoreStoredFields) [((id<JavaUtilList>) nil_chk(storedFieldReaders_)) addWithId:reader];
  [((id<JavaUtilList>) nil_chk(readers_)) addWithId:reader];
  if (incRefReaders_) {
    [reader incRef];
  }
  [((id<JavaUtilList>) nil_chk(decrefOnClose_)) addWithId:JavaLangBoolean_valueOfWithBoolean_(incRefReaders_)];
}

- (id)java_clone {
  @synchronized(self) {
    @try {
      return [self doReopenWithBoolean:true];
    }
    @catch (JavaLangException *ex) {
      @throw create_JavaLangRuntimeException_initWithNSException_(ex);
    }
  }
}

- (OrgApacheLuceneIndexIndexReader *)doOpenIfChanged {
  @synchronized(self) {
    return [self doReopenWithBoolean:false];
  }
}

- (OrgApacheLuceneIndexIndexReader *)doReopenWithBoolean:(jboolean)doClone {
  [self ensureOpen];
  jboolean reopened = false;
  id<JavaUtilList> newReaders = create_JavaUtilArrayList_init();
  jboolean success = false;
  @try {
    for (OrgApacheLuceneIndexIndexReader * __strong oldReader in nil_chk(readers_)) {
      OrgApacheLuceneIndexIndexReader *newReader = nil;
      if (doClone) {
        newReader = (OrgApacheLuceneIndexIndexReader *) cast_chk([((OrgApacheLuceneIndexIndexReader *) nil_chk(oldReader)) java_clone], [OrgApacheLuceneIndexIndexReader class]);
        reopened = true;
      }
      else {
        newReader = OrgApacheLuceneIndexIndexReader_openIfChangedWithOrgApacheLuceneIndexIndexReader_(oldReader);
        if (newReader != nil) {
          reopened = true;
        }
        else {
          newReader = oldReader;
        }
      }
      [newReaders addWithId:newReader];
    }
    success = true;
  }
  @finally {
    if (!success && reopened) {
      for (jint i = 0; i < [newReaders size]; i++) {
        OrgApacheLuceneIndexIndexReader *r = [newReaders getWithInt:i];
        if (r != [((id<JavaUtilList>) nil_chk(readers_)) getWithInt:i]) {
          @try {
            [((OrgApacheLuceneIndexIndexReader *) nil_chk(r)) close];
          }
          @catch (JavaIoIOException *ignore) {
          }
        }
      }
    }
  }
  if (reopened) {
    id<JavaUtilList> newDecrefOnClose = create_JavaUtilArrayList_init();
    OrgApacheLuceneIndexParallelReader *pr = create_OrgApacheLuceneIndexParallelReader_init();
    for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(readers_)) size]; i++) {
      OrgApacheLuceneIndexIndexReader *oldReader = [((id<JavaUtilList>) nil_chk(readers_)) getWithInt:i];
      OrgApacheLuceneIndexIndexReader *newReader = [newReaders getWithInt:i];
      if (newReader == oldReader) {
        [newDecrefOnClose addWithId:JreLoadStatic(JavaLangBoolean, TRUE)];
        [((OrgApacheLuceneIndexIndexReader *) nil_chk(newReader)) incRef];
      }
      else {
        [newDecrefOnClose addWithId:JreLoadStatic(JavaLangBoolean, FALSE)];
      }
      [pr addWithOrgApacheLuceneIndexIndexReader:newReader withBoolean:![((id<JavaUtilList>) nil_chk(storedFieldReaders_)) containsWithId:oldReader]];
    }
    JreStrongAssign(&pr->decrefOnClose_, newDecrefOnClose);
    pr->incRefReaders_ = incRefReaders_;
    return pr;
  }
  else {
    return nil;
  }
}

- (jint)numDocs {
  return numDocs_;
}

- (jint)maxDoc {
  return maxDoc_;
}

- (jboolean)hasDeletions {
  [self ensureOpen];
  return hasDeletions_;
}

- (jboolean)isDeletedWithInt:(jint)n {
  if ([((id<JavaUtilList>) nil_chk(readers_)) size] > 0) return [((OrgApacheLuceneIndexIndexReader *) nil_chk([((id<JavaUtilList>) nil_chk(readers_)) getWithInt:0])) isDeletedWithInt:n];
  return false;
}

- (void)doDeleteWithInt:(jint)n {
  for (OrgApacheLuceneIndexIndexReader * __strong reader in nil_chk(readers_)) {
    [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) deleteDocumentWithInt:n];
  }
  hasDeletions_ = true;
}

- (void)doUndeleteAll {
  for (OrgApacheLuceneIndexIndexReader * __strong reader in nil_chk(readers_)) {
    [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) undeleteAll];
  }
  hasDeletions_ = false;
}

- (OrgApacheLuceneDocumentDocument *)documentWithInt:(jint)n
            withOrgApacheLuceneDocumentFieldSelector:(id<OrgApacheLuceneDocumentFieldSelector>)fieldSelector {
  [self ensureOpen];
  OrgApacheLuceneDocumentDocument *result = create_OrgApacheLuceneDocumentDocument_init();
  for (OrgApacheLuceneIndexIndexReader * __strong reader in nil_chk(storedFieldReaders_)) {
    jboolean include = fieldSelector == nil;
    if (!include) {
      id<JavaUtilCollection> fields = [((id<JavaUtilMap>) nil_chk(readerToFields_)) getWithId:reader];
      for (NSString * __strong field in nil_chk(fields)) if ([((id<OrgApacheLuceneDocumentFieldSelector>) nil_chk(fieldSelector)) acceptWithNSString:field] != JreLoadEnum(OrgApacheLuceneDocumentFieldSelectorResult, NO_LOAD)) {
        include = true;
        break;
      }
    }
    if (include) {
      id<JavaUtilList> fields = [((OrgApacheLuceneDocumentDocument *) nil_chk([((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) documentWithInt:n withOrgApacheLuceneDocumentFieldSelector:fieldSelector])) getFields];
      for (id<OrgApacheLuceneDocumentFieldable> __strong field in nil_chk(fields)) {
        [result addWithOrgApacheLuceneDocumentFieldable:field];
      }
    }
  }
  return result;
}

- (IOSObjectArray *)getTermFreqVectorsWithInt:(jint)n {
  [self ensureOpen];
  JavaUtilArrayList *results = create_JavaUtilArrayList_init();
  for (id<JavaUtilMap_Entry> __strong e in nil_chk([((id<JavaUtilSortedMap>) nil_chk(fieldToReader_)) entrySet])) {
    NSString *field = [((id<JavaUtilMap_Entry>) nil_chk(e)) getKey];
    OrgApacheLuceneIndexIndexReader *reader = [e getValue];
    id<OrgApacheLuceneIndexTermFreqVector> vector = [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) getTermFreqVectorWithInt:n withNSString:field];
    if (vector != nil) [results addWithId:vector];
  }
  return [results toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[results size] type:OrgApacheLuceneIndexTermFreqVector_class_()]];
}

- (id<OrgApacheLuceneIndexTermFreqVector>)getTermFreqVectorWithInt:(jint)n
                                                      withNSString:(NSString *)field {
  [self ensureOpen];
  OrgApacheLuceneIndexIndexReader *reader = [((id<JavaUtilSortedMap>) nil_chk(fieldToReader_)) getWithId:field];
  return reader == nil ? nil : [reader getTermFreqVectorWithInt:n withNSString:field];
}

- (void)getTermFreqVectorWithInt:(jint)docNumber
                    withNSString:(NSString *)field
withOrgApacheLuceneIndexTermVectorMapper:(OrgApacheLuceneIndexTermVectorMapper *)mapper {
  [self ensureOpen];
  OrgApacheLuceneIndexIndexReader *reader = [((id<JavaUtilSortedMap>) nil_chk(fieldToReader_)) getWithId:field];
  if (reader != nil) {
    [reader getTermFreqVectorWithInt:docNumber withNSString:field withOrgApacheLuceneIndexTermVectorMapper:mapper];
  }
}

- (void)getTermFreqVectorWithInt:(jint)docNumber
withOrgApacheLuceneIndexTermVectorMapper:(OrgApacheLuceneIndexTermVectorMapper *)mapper {
  [self ensureOpen];
  for (id<JavaUtilMap_Entry> __strong e in nil_chk([((id<JavaUtilSortedMap>) nil_chk(fieldToReader_)) entrySet])) {
    NSString *field = [((id<JavaUtilMap_Entry>) nil_chk(e)) getKey];
    OrgApacheLuceneIndexIndexReader *reader = [e getValue];
    [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) getTermFreqVectorWithInt:docNumber withNSString:field withOrgApacheLuceneIndexTermVectorMapper:mapper];
  }
}

- (jboolean)hasNormsWithNSString:(NSString *)field {
  [self ensureOpen];
  OrgApacheLuceneIndexIndexReader *reader = [((id<JavaUtilSortedMap>) nil_chk(fieldToReader_)) getWithId:field];
  return reader == nil ? false : [reader hasNormsWithNSString:field];
}

- (IOSByteArray *)normsWithNSString:(NSString *)field {
  [self ensureOpen];
  OrgApacheLuceneIndexIndexReader *reader = [((id<JavaUtilSortedMap>) nil_chk(fieldToReader_)) getWithId:field];
  return reader == nil ? nil : [reader normsWithNSString:field];
}

- (void)normsWithNSString:(NSString *)field
            withByteArray:(IOSByteArray *)result
                  withInt:(jint)offset {
  [self ensureOpen];
  OrgApacheLuceneIndexIndexReader *reader = [((id<JavaUtilSortedMap>) nil_chk(fieldToReader_)) getWithId:field];
  if (reader != nil) [reader normsWithNSString:field withByteArray:result withInt:offset];
}

- (void)doSetNormWithInt:(jint)n
            withNSString:(NSString *)field
                withByte:(jbyte)value {
  OrgApacheLuceneIndexIndexReader *reader = [((id<JavaUtilSortedMap>) nil_chk(fieldToReader_)) getWithId:field];
  if (reader != nil) [reader doSetNormWithInt:n withNSString:field withByte:value];
}

- (OrgApacheLuceneIndexTermEnum *)terms {
  [self ensureOpen];
  return create_OrgApacheLuceneIndexParallelReader_ParallelTermEnum_initWithOrgApacheLuceneIndexParallelReader_(self);
}

- (OrgApacheLuceneIndexTermEnum *)termsWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  [self ensureOpen];
  return create_OrgApacheLuceneIndexParallelReader_ParallelTermEnum_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(self, term);
}

- (jint)docFreqWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  [self ensureOpen];
  OrgApacheLuceneIndexIndexReader *reader = [((id<JavaUtilSortedMap>) nil_chk(fieldToReader_)) getWithId:[((OrgApacheLuceneIndexTerm *) nil_chk(term)) field]];
  return reader == nil ? 0 : [reader docFreqWithOrgApacheLuceneIndexTerm:term];
}

- (id<OrgApacheLuceneIndexTermDocs>)termDocsWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  [self ensureOpen];
  return create_OrgApacheLuceneIndexParallelReader_ParallelTermDocs_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(self, term);
}

- (id<OrgApacheLuceneIndexTermDocs>)termDocs {
  [self ensureOpen];
  return create_OrgApacheLuceneIndexParallelReader_ParallelTermDocs_initWithOrgApacheLuceneIndexParallelReader_(self);
}

- (id<OrgApacheLuceneIndexTermPositions>)termPositionsWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  [self ensureOpen];
  return create_OrgApacheLuceneIndexParallelReader_ParallelTermPositions_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(self, term);
}

- (id<OrgApacheLuceneIndexTermPositions>)termPositions {
  [self ensureOpen];
  return create_OrgApacheLuceneIndexParallelReader_ParallelTermPositions_initWithOrgApacheLuceneIndexParallelReader_(self);
}

- (jboolean)isCurrent {
  [self ensureOpen];
  for (OrgApacheLuceneIndexIndexReader * __strong reader in nil_chk(readers_)) {
    if (![((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) isCurrent]) {
      return false;
    }
  }
  return true;
}

- (jboolean)isOptimized {
  [self ensureOpen];
  for (OrgApacheLuceneIndexIndexReader * __strong reader in nil_chk(readers_)) {
    if (![((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) isOptimized]) {
      return false;
    }
  }
  return true;
}

- (jlong)getVersion {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"ParallelReader does not support this method.");
}

- (IOSObjectArray *)getSubReaders {
  return [((id<JavaUtilList>) nil_chk(readers_)) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[readers_ size] type:OrgApacheLuceneIndexIndexReader_class_()]];
}

- (void)doCommitWithJavaUtilMap:(id<JavaUtilMap>)commitUserData {
  for (OrgApacheLuceneIndexIndexReader * __strong reader in nil_chk(readers_)) [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) commitWithJavaUtilMap:commitUserData];
}

- (void)doClose {
  @synchronized(self) {
    for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(readers_)) size]; i++) {
      if ([((JavaLangBoolean *) nil_chk([((id<JavaUtilList>) nil_chk(decrefOnClose_)) getWithInt:i])) booleanValue]) {
        [((OrgApacheLuceneIndexIndexReader *) nil_chk([((id<JavaUtilList>) nil_chk(readers_)) getWithInt:i])) decRef];
      }
      else {
        [((OrgApacheLuceneIndexIndexReader *) nil_chk([((id<JavaUtilList>) nil_chk(readers_)) getWithInt:i])) close];
      }
    }
  }
}

- (id<JavaUtilCollection>)getFieldNamesWithOrgApacheLuceneIndexIndexReader_FieldOption:(OrgApacheLuceneIndexIndexReader_FieldOption *)fieldNames {
  [self ensureOpen];
  id<JavaUtilSet> fieldSet = create_JavaUtilHashSet_init();
  for (OrgApacheLuceneIndexIndexReader * __strong reader in nil_chk(readers_)) {
    id<JavaUtilCollection> names = [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) getFieldNamesWithOrgApacheLuceneIndexIndexReader_FieldOption:fieldNames];
    [fieldSet addAllWithJavaUtilCollection:names];
  }
  return fieldSet;
}

- (void)addReaderFinishedListenerWithOrgApacheLuceneIndexIndexReader_ReaderFinishedListener:(id<OrgApacheLuceneIndexIndexReader_ReaderFinishedListener>)listener {
  [super addReaderFinishedListenerWithOrgApacheLuceneIndexIndexReader_ReaderFinishedListener:listener];
  for (OrgApacheLuceneIndexIndexReader * __strong reader in nil_chk(readers_)) {
    [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) addReaderFinishedListenerWithOrgApacheLuceneIndexIndexReader_ReaderFinishedListener:listener];
  }
}

- (void)removeReaderFinishedListenerWithOrgApacheLuceneIndexIndexReader_ReaderFinishedListener:(id<OrgApacheLuceneIndexIndexReader_ReaderFinishedListener>)listener {
  [super removeReaderFinishedListenerWithOrgApacheLuceneIndexIndexReader_ReaderFinishedListener:listener];
  for (OrgApacheLuceneIndexIndexReader * __strong reader in nil_chk(readers_)) {
    [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) removeReaderFinishedListenerWithOrgApacheLuceneIndexIndexReader_ReaderFinishedListener:listener];
  }
}

- (void)dealloc {
  RELEASE_(readers_);
  RELEASE_(decrefOnClose_);
  RELEASE_(fieldToReader_);
  RELEASE_(readerToFields_);
  RELEASE_(storedFieldReaders_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 0, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 0, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 5, 0, -1, -1, -1 },
    { NULL, "LNSObject;", 0x21, 6, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexReader;", 0x24, -1, -1, 7, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexReader;", 0x4, 8, 1, 7, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 11, 10, 7, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 7, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentDocument;", 0x1, 12, 13, 7, -1, -1, -1 },
    { NULL, "[LOrgApacheLuceneIndexTermFreqVector;", 0x1, 14, 10, 0, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTermFreqVector;", 0x1, 15, 16, 0, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 17, 0, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 18, 0, -1, -1, -1 },
    { NULL, "Z", 0x1, 19, 20, 0, -1, -1, -1 },
    { NULL, "[B", 0x1, 21, 20, 0, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 22, 0, -1, -1, -1 },
    { NULL, "V", 0x4, 23, 24, 7, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTermEnum;", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTermEnum;", 0x1, 25, 26, 0, -1, -1, -1 },
    { NULL, "I", 0x1, 27, 26, 0, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTermDocs;", 0x1, 28, 26, 0, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTermDocs;", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTermPositions;", 0x1, 29, 26, 0, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTermPositions;", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 7, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, 30, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgApacheLuceneIndexIndexReader;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 31, 32, 0, 33, -1, -1 },
    { NULL, "V", 0x24, -1, -1, 0, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, 34, 35, -1, 36, -1, -1 },
    { NULL, "V", 0x1, 37, 38, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 39, 38, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithBoolean:);
  methods[2].selector = @selector(description);
  methods[3].selector = @selector(addWithOrgApacheLuceneIndexIndexReader:);
  methods[4].selector = @selector(addWithOrgApacheLuceneIndexIndexReader:withBoolean:);
  methods[5].selector = @selector(java_clone);
  methods[6].selector = @selector(doOpenIfChanged);
  methods[7].selector = @selector(doReopenWithBoolean:);
  methods[8].selector = @selector(numDocs);
  methods[9].selector = @selector(maxDoc);
  methods[10].selector = @selector(hasDeletions);
  methods[11].selector = @selector(isDeletedWithInt:);
  methods[12].selector = @selector(doDeleteWithInt:);
  methods[13].selector = @selector(doUndeleteAll);
  methods[14].selector = @selector(documentWithInt:withOrgApacheLuceneDocumentFieldSelector:);
  methods[15].selector = @selector(getTermFreqVectorsWithInt:);
  methods[16].selector = @selector(getTermFreqVectorWithInt:withNSString:);
  methods[17].selector = @selector(getTermFreqVectorWithInt:withNSString:withOrgApacheLuceneIndexTermVectorMapper:);
  methods[18].selector = @selector(getTermFreqVectorWithInt:withOrgApacheLuceneIndexTermVectorMapper:);
  methods[19].selector = @selector(hasNormsWithNSString:);
  methods[20].selector = @selector(normsWithNSString:);
  methods[21].selector = @selector(normsWithNSString:withByteArray:withInt:);
  methods[22].selector = @selector(doSetNormWithInt:withNSString:withByte:);
  methods[23].selector = @selector(terms);
  methods[24].selector = @selector(termsWithOrgApacheLuceneIndexTerm:);
  methods[25].selector = @selector(docFreqWithOrgApacheLuceneIndexTerm:);
  methods[26].selector = @selector(termDocsWithOrgApacheLuceneIndexTerm:);
  methods[27].selector = @selector(termDocs);
  methods[28].selector = @selector(termPositionsWithOrgApacheLuceneIndexTerm:);
  methods[29].selector = @selector(termPositions);
  methods[30].selector = @selector(isCurrent);
  methods[31].selector = @selector(isOptimized);
  methods[32].selector = @selector(getVersion);
  methods[33].selector = @selector(getSubReaders);
  methods[34].selector = @selector(doCommitWithJavaUtilMap:);
  methods[35].selector = @selector(doClose);
  methods[36].selector = @selector(getFieldNamesWithOrgApacheLuceneIndexIndexReader_FieldOption:);
  methods[37].selector = @selector(addReaderFinishedListenerWithOrgApacheLuceneIndexIndexReader_ReaderFinishedListener:);
  methods[38].selector = @selector(removeReaderFinishedListenerWithOrgApacheLuceneIndexIndexReader_ReaderFinishedListener:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "readers_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 40, -1 },
    { "decrefOnClose_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 41, -1 },
    { "incRefReaders_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "fieldToReader_", "LJavaUtilSortedMap;", .constantValue.asLong = 0, 0x2, -1, -1, 42, -1 },
    { "readerToFields_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 43, -1 },
    { "storedFieldReaders_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 40, -1 },
    { "maxDoc_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "numDocs_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hasDeletions_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoIOException;", "Z", "toString", "add", "LOrgApacheLuceneIndexIndexReader;", "LOrgApacheLuceneIndexIndexReader;Z", "clone", "LOrgApacheLuceneIndexCorruptIndexException;LJavaIoIOException;", "doReopen", "isDeleted", "I", "doDelete", "document", "ILOrgApacheLuceneDocumentFieldSelector;", "getTermFreqVectors", "getTermFreqVector", "ILNSString;", "ILNSString;LOrgApacheLuceneIndexTermVectorMapper;", "ILOrgApacheLuceneIndexTermVectorMapper;", "hasNorms", "LNSString;", "norms", "LNSString;[BI", "doSetNorm", "ILNSString;B", "terms", "LOrgApacheLuceneIndexTerm;", "docFreq", "termDocs", "termPositions", (void *)&OrgApacheLuceneIndexParallelReader__Annotations$0, "doCommit", "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V", "getFieldNames", "LOrgApacheLuceneIndexIndexReader_FieldOption;", "(Lorg/apache/lucene/index/IndexReader$FieldOption;)Ljava/util/Collection<Ljava/lang/String;>;", "addReaderFinishedListener", "LOrgApacheLuceneIndexIndexReader_ReaderFinishedListener;", "removeReaderFinishedListener", "Ljava/util/List<Lorg/apache/lucene/index/IndexReader;>;", "Ljava/util/List<Ljava/lang/Boolean;>;", "Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/lucene/index/IndexReader;>;", "Ljava/util/Map<Lorg/apache/lucene/index/IndexReader;Ljava/util/Collection<Ljava/lang/String;>;>;", "LOrgApacheLuceneIndexParallelReader_ParallelTermEnum;LOrgApacheLuceneIndexParallelReader_ParallelTermDocs;LOrgApacheLuceneIndexParallelReader_ParallelTermPositions;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexParallelReader = { "ParallelReader", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x1, 39, 9, -1, 44, -1, -1, -1 };
  return &_OrgApacheLuceneIndexParallelReader;
}

@end

void OrgApacheLuceneIndexParallelReader_init(OrgApacheLuceneIndexParallelReader *self) {
  OrgApacheLuceneIndexParallelReader_initWithBoolean_(self, true);
}

OrgApacheLuceneIndexParallelReader *new_OrgApacheLuceneIndexParallelReader_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexParallelReader, init)
}

OrgApacheLuceneIndexParallelReader *create_OrgApacheLuceneIndexParallelReader_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexParallelReader, init)
}

void OrgApacheLuceneIndexParallelReader_initWithBoolean_(OrgApacheLuceneIndexParallelReader *self, jboolean closeSubReaders) {
  OrgApacheLuceneIndexIndexReader_init(self);
  JreStrongAssignAndConsume(&self->readers_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&self->decrefOnClose_, new_JavaUtilArrayList_init());
  self->incRefReaders_ = false;
  JreStrongAssignAndConsume(&self->fieldToReader_, new_JavaUtilTreeMap_init());
  JreStrongAssignAndConsume(&self->readerToFields_, new_JavaUtilHashMap_init());
  JreStrongAssignAndConsume(&self->storedFieldReaders_, new_JavaUtilArrayList_init());
  self->incRefReaders_ = !closeSubReaders;
  JreVolatileStrongAssign(&self->readerFinishedListeners_, create_OrgApacheLuceneUtilMapBackedSet_initWithJavaUtilMap_(create_JavaUtilConcurrentConcurrentHashMap_init()));
}

OrgApacheLuceneIndexParallelReader *new_OrgApacheLuceneIndexParallelReader_initWithBoolean_(jboolean closeSubReaders) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexParallelReader, initWithBoolean_, closeSubReaders)
}

OrgApacheLuceneIndexParallelReader *create_OrgApacheLuceneIndexParallelReader_initWithBoolean_(jboolean closeSubReaders) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexParallelReader, initWithBoolean_, closeSubReaders)
}

IOSObjectArray *OrgApacheLuceneIndexParallelReader__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexParallelReader)

@implementation OrgApacheLuceneIndexParallelReader_ParallelTermEnum

- (instancetype)initWithOrgApacheLuceneIndexParallelReader:(OrgApacheLuceneIndexParallelReader *)outer$ {
  OrgApacheLuceneIndexParallelReader_ParallelTermEnum_initWithOrgApacheLuceneIndexParallelReader_(self, outer$);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexParallelReader:(OrgApacheLuceneIndexParallelReader *)outer$
                              withOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  OrgApacheLuceneIndexParallelReader_ParallelTermEnum_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(self, outer$, term);
  return self;
}

- (jboolean)next {
  if (termEnum_ == nil) return false;
  if ([termEnum_ next] && [((OrgApacheLuceneIndexTerm *) nil_chk([((OrgApacheLuceneIndexTermEnum *) nil_chk(termEnum_)) term])) field] == field_) return true;
  [((OrgApacheLuceneIndexTermEnum *) nil_chk(termEnum_)) close];
  if (fieldIterator_ == nil) {
    JreStrongAssign(&fieldIterator_, [((id<JavaUtilSet>) nil_chk([((id<JavaUtilSortedMap>) nil_chk([((id<JavaUtilSortedMap>) nil_chk(this$0_->fieldToReader_)) tailMapWithId:field_])) keySet])) iterator]);
    [((id<JavaUtilIterator>) nil_chk(fieldIterator_)) next];
  }
  while ([((id<JavaUtilIterator>) nil_chk(fieldIterator_)) hasNext]) {
    JreStrongAssign(&field_, [((id<JavaUtilIterator>) nil_chk(fieldIterator_)) next]);
    JreStrongAssign(&termEnum_, [((OrgApacheLuceneIndexIndexReader *) nil_chk([((id<JavaUtilSortedMap>) nil_chk(this$0_->fieldToReader_)) getWithId:field_])) termsWithOrgApacheLuceneIndexTerm:create_OrgApacheLuceneIndexTerm_initWithNSString_(field_)]);
    OrgApacheLuceneIndexTerm *term = [((OrgApacheLuceneIndexTermEnum *) nil_chk(termEnum_)) term];
    if (term != nil && [term field] == field_) return true;
    else [((OrgApacheLuceneIndexTermEnum *) nil_chk(termEnum_)) close];
  }
  return false;
}

- (OrgApacheLuceneIndexTerm *)term {
  if (termEnum_ == nil) return nil;
  return [termEnum_ term];
}

- (jint)docFreq {
  if (termEnum_ == nil) return 0;
  return [termEnum_ docFreq];
}

- (void)close {
  if (termEnum_ != nil) [termEnum_ close];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(field_);
  RELEASE_(fieldIterator_);
  RELEASE_(termEnum_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 0, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTerm;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexParallelReader:);
  methods[1].selector = @selector(initWithOrgApacheLuceneIndexParallelReader:withOrgApacheLuceneIndexTerm:);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(term);
  methods[4].selector = @selector(docFreq);
  methods[5].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneIndexParallelReader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "field_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fieldIterator_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x2, -1, -1, 2, -1 },
    { "termEnum_", "LOrgApacheLuceneIndexTermEnum;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoIOException;", "LOrgApacheLuceneIndexTerm;", "Ljava/util/Iterator<Ljava/lang/String;>;", "LOrgApacheLuceneIndexParallelReader;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexParallelReader_ParallelTermEnum = { "ParallelTermEnum", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x2, 6, 4, 3, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexParallelReader_ParallelTermEnum;
}

@end

void OrgApacheLuceneIndexParallelReader_ParallelTermEnum_initWithOrgApacheLuceneIndexParallelReader_(OrgApacheLuceneIndexParallelReader_ParallelTermEnum *self, OrgApacheLuceneIndexParallelReader *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneIndexTermEnum_init(self);
  @try {
    JreStrongAssign(&self->field_, [((id<JavaUtilSortedMap>) nil_chk(outer$->fieldToReader_)) firstKey]);
  }
  @catch (JavaUtilNoSuchElementException *e) {
    return;
  }
  if (self->field_ != nil) JreStrongAssign(&self->termEnum_, [((OrgApacheLuceneIndexIndexReader *) nil_chk([((id<JavaUtilSortedMap>) nil_chk(outer$->fieldToReader_)) getWithId:self->field_])) terms]);
}

OrgApacheLuceneIndexParallelReader_ParallelTermEnum *new_OrgApacheLuceneIndexParallelReader_ParallelTermEnum_initWithOrgApacheLuceneIndexParallelReader_(OrgApacheLuceneIndexParallelReader *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexParallelReader_ParallelTermEnum, initWithOrgApacheLuceneIndexParallelReader_, outer$)
}

OrgApacheLuceneIndexParallelReader_ParallelTermEnum *create_OrgApacheLuceneIndexParallelReader_ParallelTermEnum_initWithOrgApacheLuceneIndexParallelReader_(OrgApacheLuceneIndexParallelReader *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexParallelReader_ParallelTermEnum, initWithOrgApacheLuceneIndexParallelReader_, outer$)
}

void OrgApacheLuceneIndexParallelReader_ParallelTermEnum_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexParallelReader_ParallelTermEnum *self, OrgApacheLuceneIndexParallelReader *outer$, OrgApacheLuceneIndexTerm *term) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneIndexTermEnum_init(self);
  JreStrongAssign(&self->field_, [((OrgApacheLuceneIndexTerm *) nil_chk(term)) field]);
  OrgApacheLuceneIndexIndexReader *reader = [((id<JavaUtilSortedMap>) nil_chk(outer$->fieldToReader_)) getWithId:self->field_];
  if (reader != nil) JreStrongAssign(&self->termEnum_, [reader termsWithOrgApacheLuceneIndexTerm:term]);
}

OrgApacheLuceneIndexParallelReader_ParallelTermEnum *new_OrgApacheLuceneIndexParallelReader_ParallelTermEnum_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexParallelReader *outer$, OrgApacheLuceneIndexTerm *term) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexParallelReader_ParallelTermEnum, initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_, outer$, term)
}

OrgApacheLuceneIndexParallelReader_ParallelTermEnum *create_OrgApacheLuceneIndexParallelReader_ParallelTermEnum_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexParallelReader *outer$, OrgApacheLuceneIndexTerm *term) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexParallelReader_ParallelTermEnum, initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_, outer$, term)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexParallelReader_ParallelTermEnum)

@implementation OrgApacheLuceneIndexParallelReader_ParallelTermDocs

- (instancetype)initWithOrgApacheLuceneIndexParallelReader:(OrgApacheLuceneIndexParallelReader *)outer$ {
  OrgApacheLuceneIndexParallelReader_ParallelTermDocs_initWithOrgApacheLuceneIndexParallelReader_(self, outer$);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexParallelReader:(OrgApacheLuceneIndexParallelReader *)outer$
                              withOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  OrgApacheLuceneIndexParallelReader_ParallelTermDocs_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(self, outer$, term);
  return self;
}

- (jint)doc {
  return [((id<OrgApacheLuceneIndexTermDocs>) nil_chk(termDocs_)) doc];
}

- (jint)freq {
  return [((id<OrgApacheLuceneIndexTermDocs>) nil_chk(termDocs_)) freq];
}

- (void)seekWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  OrgApacheLuceneIndexIndexReader *reader = [((id<JavaUtilSortedMap>) nil_chk(this$0_->fieldToReader_)) getWithId:[((OrgApacheLuceneIndexTerm *) nil_chk(term)) field]];
  JreStrongAssign(&termDocs_, reader != nil ? [reader termDocsWithOrgApacheLuceneIndexTerm:term] : nil);
}

- (void)seekWithOrgApacheLuceneIndexTermEnum:(OrgApacheLuceneIndexTermEnum *)termEnum {
  [self seekWithOrgApacheLuceneIndexTerm:[((OrgApacheLuceneIndexTermEnum *) nil_chk(termEnum)) term]];
}

- (jboolean)next {
  if (termDocs_ == nil) return false;
  return [termDocs_ next];
}

- (jint)readWithIntArray:(IOSIntArray *)docs
            withIntArray:(IOSIntArray *)freqs {
  if (termDocs_ == nil) return 0;
  return [termDocs_ readWithIntArray:docs withIntArray:freqs];
}

- (jboolean)skipToWithInt:(jint)target {
  if (termDocs_ == nil) return false;
  return [termDocs_ skipToWithInt:target];
}

- (void)close {
  if (termDocs_ != nil) [termDocs_ close];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(termDocs_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 5, 1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 7, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexParallelReader:);
  methods[1].selector = @selector(initWithOrgApacheLuceneIndexParallelReader:withOrgApacheLuceneIndexTerm:);
  methods[2].selector = @selector(doc);
  methods[3].selector = @selector(freq);
  methods[4].selector = @selector(seekWithOrgApacheLuceneIndexTerm:);
  methods[5].selector = @selector(seekWithOrgApacheLuceneIndexTermEnum:);
  methods[6].selector = @selector(next);
  methods[7].selector = @selector(readWithIntArray:withIntArray:);
  methods[8].selector = @selector(skipToWithInt:);
  methods[9].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneIndexParallelReader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "termDocs_", "LOrgApacheLuceneIndexTermDocs;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexTerm;", "LJavaIoIOException;", "seek", "LOrgApacheLuceneIndexTermEnum;", "read", "[I[I", "skipTo", "I", "LOrgApacheLuceneIndexParallelReader;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexParallelReader_ParallelTermDocs = { "ParallelTermDocs", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x2, 10, 2, 8, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexParallelReader_ParallelTermDocs;
}

@end

void OrgApacheLuceneIndexParallelReader_ParallelTermDocs_initWithOrgApacheLuceneIndexParallelReader_(OrgApacheLuceneIndexParallelReader_ParallelTermDocs *self, OrgApacheLuceneIndexParallelReader *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

OrgApacheLuceneIndexParallelReader_ParallelTermDocs *new_OrgApacheLuceneIndexParallelReader_ParallelTermDocs_initWithOrgApacheLuceneIndexParallelReader_(OrgApacheLuceneIndexParallelReader *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexParallelReader_ParallelTermDocs, initWithOrgApacheLuceneIndexParallelReader_, outer$)
}

OrgApacheLuceneIndexParallelReader_ParallelTermDocs *create_OrgApacheLuceneIndexParallelReader_ParallelTermDocs_initWithOrgApacheLuceneIndexParallelReader_(OrgApacheLuceneIndexParallelReader *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexParallelReader_ParallelTermDocs, initWithOrgApacheLuceneIndexParallelReader_, outer$)
}

void OrgApacheLuceneIndexParallelReader_ParallelTermDocs_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexParallelReader_ParallelTermDocs *self, OrgApacheLuceneIndexParallelReader *outer$, OrgApacheLuceneIndexTerm *term) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  if (term == nil) JreStrongAssign(&self->termDocs_, [((id<JavaUtilList>) nil_chk(outer$->readers_)) isEmpty] ? nil : [((OrgApacheLuceneIndexIndexReader *) nil_chk([((id<JavaUtilList>) nil_chk(outer$->readers_)) getWithInt:0])) termDocsWithOrgApacheLuceneIndexTerm:nil]);
  else [self seekWithOrgApacheLuceneIndexTerm:term];
}

OrgApacheLuceneIndexParallelReader_ParallelTermDocs *new_OrgApacheLuceneIndexParallelReader_ParallelTermDocs_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexParallelReader *outer$, OrgApacheLuceneIndexTerm *term) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexParallelReader_ParallelTermDocs, initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_, outer$, term)
}

OrgApacheLuceneIndexParallelReader_ParallelTermDocs *create_OrgApacheLuceneIndexParallelReader_ParallelTermDocs_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexParallelReader *outer$, OrgApacheLuceneIndexTerm *term) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexParallelReader_ParallelTermDocs, initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_, outer$, term)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexParallelReader_ParallelTermDocs)

@implementation OrgApacheLuceneIndexParallelReader_ParallelTermPositions

- (instancetype)initWithOrgApacheLuceneIndexParallelReader:(OrgApacheLuceneIndexParallelReader *)outer$ {
  OrgApacheLuceneIndexParallelReader_ParallelTermPositions_initWithOrgApacheLuceneIndexParallelReader_(self, outer$);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexParallelReader:(OrgApacheLuceneIndexParallelReader *)outer$
                              withOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  OrgApacheLuceneIndexParallelReader_ParallelTermPositions_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(self, outer$, term);
  return self;
}

- (void)seekWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  OrgApacheLuceneIndexIndexReader *reader = [((id<JavaUtilSortedMap>) nil_chk(this$1_->fieldToReader_)) getWithId:[((OrgApacheLuceneIndexTerm *) nil_chk(term)) field]];
  JreStrongAssign(&termDocs_, reader != nil ? [reader termPositionsWithOrgApacheLuceneIndexTerm:term] : nil);
}

- (jint)nextPosition {
  return [((id<OrgApacheLuceneIndexTermPositions>) nil_chk(((id<OrgApacheLuceneIndexTermPositions>) cast_check(termDocs_, OrgApacheLuceneIndexTermPositions_class_())))) nextPosition];
}

- (jint)getPayloadLength {
  return [((id<OrgApacheLuceneIndexTermPositions>) nil_chk(((id<OrgApacheLuceneIndexTermPositions>) cast_check(termDocs_, OrgApacheLuceneIndexTermPositions_class_())))) getPayloadLength];
}

- (IOSByteArray *)getPayloadWithByteArray:(IOSByteArray *)data
                                  withInt:(jint)offset {
  return [((id<OrgApacheLuceneIndexTermPositions>) nil_chk(((id<OrgApacheLuceneIndexTermPositions>) cast_check(termDocs_, OrgApacheLuceneIndexTermPositions_class_())))) getPayloadWithByteArray:data withInt:offset];
}

- (jboolean)isPayloadAvailable {
  return [((id<OrgApacheLuceneIndexTermPositions>) nil_chk(((id<OrgApacheLuceneIndexTermPositions>) cast_check(termDocs_, OrgApacheLuceneIndexTermPositions_class_())))) isPayloadAvailable];
}

- (void)dealloc {
  RELEASE_(this$1_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 0, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 3, 4, 1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexParallelReader:);
  methods[1].selector = @selector(initWithOrgApacheLuceneIndexParallelReader:withOrgApacheLuceneIndexTerm:);
  methods[2].selector = @selector(seekWithOrgApacheLuceneIndexTerm:);
  methods[3].selector = @selector(nextPosition);
  methods[4].selector = @selector(getPayloadLength);
  methods[5].selector = @selector(getPayloadWithByteArray:withInt:);
  methods[6].selector = @selector(isPayloadAvailable);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", "LOrgApacheLuceneIndexParallelReader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexTerm;", "LJavaIoIOException;", "seek", "getPayload", "[BI", "LOrgApacheLuceneIndexParallelReader;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexParallelReader_ParallelTermPositions = { "ParallelTermPositions", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x2, 7, 1, 5, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexParallelReader_ParallelTermPositions;
}

@end

void OrgApacheLuceneIndexParallelReader_ParallelTermPositions_initWithOrgApacheLuceneIndexParallelReader_(OrgApacheLuceneIndexParallelReader_ParallelTermPositions *self, OrgApacheLuceneIndexParallelReader *outer$) {
  JreStrongAssign(&self->this$1_, outer$);
  OrgApacheLuceneIndexParallelReader_ParallelTermDocs_initWithOrgApacheLuceneIndexParallelReader_(self, outer$);
}

OrgApacheLuceneIndexParallelReader_ParallelTermPositions *new_OrgApacheLuceneIndexParallelReader_ParallelTermPositions_initWithOrgApacheLuceneIndexParallelReader_(OrgApacheLuceneIndexParallelReader *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexParallelReader_ParallelTermPositions, initWithOrgApacheLuceneIndexParallelReader_, outer$)
}

OrgApacheLuceneIndexParallelReader_ParallelTermPositions *create_OrgApacheLuceneIndexParallelReader_ParallelTermPositions_initWithOrgApacheLuceneIndexParallelReader_(OrgApacheLuceneIndexParallelReader *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexParallelReader_ParallelTermPositions, initWithOrgApacheLuceneIndexParallelReader_, outer$)
}

void OrgApacheLuceneIndexParallelReader_ParallelTermPositions_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexParallelReader_ParallelTermPositions *self, OrgApacheLuceneIndexParallelReader *outer$, OrgApacheLuceneIndexTerm *term) {
  JreStrongAssign(&self->this$1_, outer$);
  OrgApacheLuceneIndexParallelReader_ParallelTermDocs_initWithOrgApacheLuceneIndexParallelReader_(self, outer$);
  [self seekWithOrgApacheLuceneIndexTerm:term];
}

OrgApacheLuceneIndexParallelReader_ParallelTermPositions *new_OrgApacheLuceneIndexParallelReader_ParallelTermPositions_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexParallelReader *outer$, OrgApacheLuceneIndexTerm *term) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexParallelReader_ParallelTermPositions, initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_, outer$, term)
}

OrgApacheLuceneIndexParallelReader_ParallelTermPositions *create_OrgApacheLuceneIndexParallelReader_ParallelTermPositions_initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexParallelReader *outer$, OrgApacheLuceneIndexTerm *term) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexParallelReader_ParallelTermPositions, initWithOrgApacheLuceneIndexParallelReader_withOrgApacheLuceneIndexTerm_, outer$, term)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexParallelReader_ParallelTermPositions)
