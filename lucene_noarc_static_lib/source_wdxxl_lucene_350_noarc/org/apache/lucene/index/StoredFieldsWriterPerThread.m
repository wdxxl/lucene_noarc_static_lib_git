//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/index/StoredFieldsWriterPerThread.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/document/Fieldable.h"
#include "org/apache/lucene/index/DocumentsWriter.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/FieldsWriter.h"
#include "org/apache/lucene/index/StoredFieldsWriter.h"
#include "org/apache/lucene/index/StoredFieldsWriterPerThread.h"
#include "org/apache/lucene/store/RAMOutputStream.h"

@implementation OrgApacheLuceneIndexStoredFieldsWriterPerThread

- (instancetype)initWithOrgApacheLuceneIndexDocumentsWriter_DocState:(OrgApacheLuceneIndexDocumentsWriter_DocState *)docState
                          withOrgApacheLuceneIndexStoredFieldsWriter:(OrgApacheLuceneIndexStoredFieldsWriter *)storedFieldsWriter {
  OrgApacheLuceneIndexStoredFieldsWriterPerThread_initWithOrgApacheLuceneIndexDocumentsWriter_DocState_withOrgApacheLuceneIndexStoredFieldsWriter_(self, docState, storedFieldsWriter);
  return self;
}

- (void)startDocument {
  if (doc_ != nil) {
    [doc_ reset];
    ((OrgApacheLuceneIndexStoredFieldsWriter_PerDoc *) nil_chk(doc_))->docID_ = ((OrgApacheLuceneIndexDocumentsWriter_DocState *) nil_chk(docState_))->docID_;
  }
}

- (void)addFieldWithOrgApacheLuceneDocumentFieldable:(id<OrgApacheLuceneDocumentFieldable>)field
                   withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo {
  if (doc_ == nil) {
    JreStrongAssign(&doc_, [((OrgApacheLuceneIndexStoredFieldsWriter *) nil_chk(storedFieldsWriter_)) getPerDoc]);
    ((OrgApacheLuceneIndexStoredFieldsWriter_PerDoc *) nil_chk(doc_))->docID_ = ((OrgApacheLuceneIndexDocumentsWriter_DocState *) nil_chk(docState_))->docID_;
    [((OrgApacheLuceneIndexFieldsWriter *) nil_chk(localFieldsWriter_)) setFieldsStreamWithOrgApacheLuceneStoreIndexOutput:doc_->fdt_];
    JreAssert((((OrgApacheLuceneIndexStoredFieldsWriter_PerDoc *) nil_chk(doc_))->numStoredFields_ == 0), (JreStrcat("$I", @"doc.numStoredFields=", doc_->numStoredFields_)));
    JreAssert((0 == [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(doc_->fdt_)) length]), (@"org/apache/lucene/index/StoredFieldsWriterPerThread.java:54 condition failed: assert 0 == doc.fdt.length();"));
    JreAssert((0 == [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(((OrgApacheLuceneIndexStoredFieldsWriter_PerDoc *) nil_chk(doc_))->fdt_)) getFilePointer]), (@"org/apache/lucene/index/StoredFieldsWriterPerThread.java:55 condition failed: assert 0 == doc.fdt.getFilePointer();"));
  }
  [((OrgApacheLuceneIndexFieldsWriter *) nil_chk(localFieldsWriter_)) writeFieldWithOrgApacheLuceneIndexFieldInfo:fieldInfo withOrgApacheLuceneDocumentFieldable:field];
  JreAssert(([((OrgApacheLuceneIndexDocumentsWriter_DocState *) nil_chk(docState_)) testPointWithNSString:@"StoredFieldsWriterPerThread.processFields.writeField"]), (@"org/apache/lucene/index/StoredFieldsWriterPerThread.java:59 condition failed: assert docState.testPoint(\"StoredFieldsWriterPerThread.processFields.writeField\");"));
  ((OrgApacheLuceneIndexStoredFieldsWriter_PerDoc *) nil_chk(doc_))->numStoredFields_++;
}

- (OrgApacheLuceneIndexDocumentsWriter_DocWriter *)finishDocument {
  @try {
    return doc_;
  }
  @finally {
    JreStrongAssign(&doc_, nil);
  }
}

- (void)abort {
  if (doc_ != nil) {
    [doc_ abort];
    JreStrongAssign(&doc_, nil);
  }
}

- (void)dealloc {
  RELEASE_(localFieldsWriter_);
  RELEASE_(storedFieldsWriter_);
  RELEASE_(docState_);
  RELEASE_(doc_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexDocumentsWriter_DocWriter;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexDocumentsWriter_DocState:withOrgApacheLuceneIndexStoredFieldsWriter:);
  methods[1].selector = @selector(startDocument);
  methods[2].selector = @selector(addFieldWithOrgApacheLuceneDocumentFieldable:withOrgApacheLuceneIndexFieldInfo:);
  methods[3].selector = @selector(finishDocument);
  methods[4].selector = @selector(abort);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "localFieldsWriter_", "LOrgApacheLuceneIndexFieldsWriter;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "storedFieldsWriter_", "LOrgApacheLuceneIndexStoredFieldsWriter;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "docState_", "LOrgApacheLuceneIndexDocumentsWriter_DocState;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "doc_", "LOrgApacheLuceneIndexStoredFieldsWriter_PerDoc;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexDocumentsWriter_DocState;LOrgApacheLuceneIndexStoredFieldsWriter;", "LJavaIoIOException;", "addField", "LOrgApacheLuceneDocumentFieldable;LOrgApacheLuceneIndexFieldInfo;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexStoredFieldsWriterPerThread = { "StoredFieldsWriterPerThread", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x10, 5, 4, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexStoredFieldsWriterPerThread;
}

@end

void OrgApacheLuceneIndexStoredFieldsWriterPerThread_initWithOrgApacheLuceneIndexDocumentsWriter_DocState_withOrgApacheLuceneIndexStoredFieldsWriter_(OrgApacheLuceneIndexStoredFieldsWriterPerThread *self, OrgApacheLuceneIndexDocumentsWriter_DocState *docState, OrgApacheLuceneIndexStoredFieldsWriter *storedFieldsWriter) {
  NSObject_init(self);
  JreStrongAssign(&self->storedFieldsWriter_, storedFieldsWriter);
  JreStrongAssign(&self->docState_, docState);
  JreStrongAssignAndConsume(&self->localFieldsWriter_, new_OrgApacheLuceneIndexFieldsWriter_initWithOrgApacheLuceneStoreIndexOutput_withOrgApacheLuceneStoreIndexOutput_withOrgApacheLuceneIndexFieldInfos_(nil, nil, ((OrgApacheLuceneIndexStoredFieldsWriter *) nil_chk(storedFieldsWriter))->fieldInfos_));
}

OrgApacheLuceneIndexStoredFieldsWriterPerThread *new_OrgApacheLuceneIndexStoredFieldsWriterPerThread_initWithOrgApacheLuceneIndexDocumentsWriter_DocState_withOrgApacheLuceneIndexStoredFieldsWriter_(OrgApacheLuceneIndexDocumentsWriter_DocState *docState, OrgApacheLuceneIndexStoredFieldsWriter *storedFieldsWriter) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexStoredFieldsWriterPerThread, initWithOrgApacheLuceneIndexDocumentsWriter_DocState_withOrgApacheLuceneIndexStoredFieldsWriter_, docState, storedFieldsWriter)
}

OrgApacheLuceneIndexStoredFieldsWriterPerThread *create_OrgApacheLuceneIndexStoredFieldsWriterPerThread_initWithOrgApacheLuceneIndexDocumentsWriter_DocState_withOrgApacheLuceneIndexStoredFieldsWriter_(OrgApacheLuceneIndexDocumentsWriter_DocState *docState, OrgApacheLuceneIndexStoredFieldsWriter *storedFieldsWriter) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexStoredFieldsWriterPerThread, initWithOrgApacheLuceneIndexDocumentsWriter_DocState_withOrgApacheLuceneIndexStoredFieldsWriter_, docState, storedFieldsWriter)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexStoredFieldsWriterPerThread)
