//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/index/MultipleTermPositions.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Arrays.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/MultipleTermPositions.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/index/TermEnum.h"
#include "org/apache/lucene/index/TermPositions.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/PriorityQueue.h"

@class OrgApacheLuceneIndexMultipleTermPositions_IntQueue;
@class OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue;

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface OrgApacheLuceneIndexMultipleTermPositions () {
 @public
  jint _doc_;
  jint _freq_;
  OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue *_termPositionsQueue_;
  OrgApacheLuceneIndexMultipleTermPositions_IntQueue *_posList_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMultipleTermPositions, _termPositionsQueue_, OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMultipleTermPositions, _posList_, OrgApacheLuceneIndexMultipleTermPositions_IntQueue *)

__attribute__((unused)) static jboolean OrgApacheLuceneIndexMultipleTermPositions_next(OrgApacheLuceneIndexMultipleTermPositions *self);

@interface OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue : OrgApacheLuceneUtilPriorityQueue

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)termPositions;

- (id<OrgApacheLuceneIndexTermPositions>)peek;

- (jboolean)lessThanWithId:(id<OrgApacheLuceneIndexTermPositions>)a
                    withId:(id<OrgApacheLuceneIndexTermPositions>)b;

- (id<OrgApacheLuceneIndexTermPositions>)pop;

- (id<OrgApacheLuceneIndexTermPositions>)top;

- (id<OrgApacheLuceneIndexTermPositions>)insertWithOverflowWithId:(id<OrgApacheLuceneIndexTermPositions>)arg0;

- (id<OrgApacheLuceneIndexTermPositions>)addWithId:(id<OrgApacheLuceneIndexTermPositions>)arg0;

- (id<OrgApacheLuceneIndexTermPositions>)getSentinelObject;

- (id<OrgApacheLuceneIndexTermPositions>)updateTop;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue)

__attribute__((unused)) static void OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue_initWithJavaUtilList_(OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue *self, id<JavaUtilList> termPositions);

__attribute__((unused)) static OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue *new_OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue_initWithJavaUtilList_(id<JavaUtilList> termPositions) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue *create_OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue_initWithJavaUtilList_(id<JavaUtilList> termPositions);

__attribute__((unused)) static id<OrgApacheLuceneIndexTermPositions> OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue_peek(OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue)

@interface OrgApacheLuceneIndexMultipleTermPositions_IntQueue : NSObject {
 @public
  jint _arraySize_;
  jint _index_;
  jint _lastIndex_;
  IOSIntArray *_array_;
}

- (instancetype)init;

- (void)addWithInt:(jint)i;

- (jint)next;

- (void)sort;

- (void)clear;

- (jint)size;

- (void)growArray;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMultipleTermPositions_IntQueue)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMultipleTermPositions_IntQueue, _array_, IOSIntArray *)

__attribute__((unused)) static void OrgApacheLuceneIndexMultipleTermPositions_IntQueue_init(OrgApacheLuceneIndexMultipleTermPositions_IntQueue *self);

__attribute__((unused)) static OrgApacheLuceneIndexMultipleTermPositions_IntQueue *new_OrgApacheLuceneIndexMultipleTermPositions_IntQueue_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMultipleTermPositions_IntQueue *create_OrgApacheLuceneIndexMultipleTermPositions_IntQueue_init();

__attribute__((unused)) static void OrgApacheLuceneIndexMultipleTermPositions_IntQueue_addWithInt_(OrgApacheLuceneIndexMultipleTermPositions_IntQueue *self, jint i);

__attribute__((unused)) static jint OrgApacheLuceneIndexMultipleTermPositions_IntQueue_next(OrgApacheLuceneIndexMultipleTermPositions_IntQueue *self);

__attribute__((unused)) static void OrgApacheLuceneIndexMultipleTermPositions_IntQueue_sort(OrgApacheLuceneIndexMultipleTermPositions_IntQueue *self);

__attribute__((unused)) static void OrgApacheLuceneIndexMultipleTermPositions_IntQueue_clear(OrgApacheLuceneIndexMultipleTermPositions_IntQueue *self);

__attribute__((unused)) static jint OrgApacheLuceneIndexMultipleTermPositions_IntQueue_size(OrgApacheLuceneIndexMultipleTermPositions_IntQueue *self);

__attribute__((unused)) static void OrgApacheLuceneIndexMultipleTermPositions_IntQueue_growArray(OrgApacheLuceneIndexMultipleTermPositions_IntQueue *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexMultipleTermPositions_IntQueue)

@implementation OrgApacheLuceneIndexMultipleTermPositions

- (instancetype)initWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)indexReader
                      withOrgApacheLuceneIndexTermArray:(IOSObjectArray *)terms {
  OrgApacheLuceneIndexMultipleTermPositions_initWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexTermArray_(self, indexReader, terms);
  return self;
}

- (jboolean)next {
  return OrgApacheLuceneIndexMultipleTermPositions_next(self);
}

- (jint)nextPosition {
  return OrgApacheLuceneIndexMultipleTermPositions_IntQueue_next(nil_chk(_posList_));
}

- (jboolean)skipToWithInt:(jint)target {
  while (OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue_peek(nil_chk(_termPositionsQueue_)) != nil && target > [((id<OrgApacheLuceneIndexTermPositions>) nil_chk(OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue_peek(nil_chk(_termPositionsQueue_)))) doc]) {
    id<OrgApacheLuceneIndexTermPositions> tp = [((OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue *) nil_chk(_termPositionsQueue_)) pop];
    if ([((id<OrgApacheLuceneIndexTermPositions>) nil_chk(tp)) skipToWithInt:target]) [((OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue *) nil_chk(_termPositionsQueue_)) addWithId:tp];
    else [tp close];
  }
  return OrgApacheLuceneIndexMultipleTermPositions_next(self);
}

- (jint)doc {
  return _doc_;
}

- (jint)freq {
  return _freq_;
}

- (void)close {
  while ([((OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue *) nil_chk(_termPositionsQueue_)) size] > 0) [((id<OrgApacheLuceneIndexTermPositions>) nil_chk([((OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue *) nil_chk(_termPositionsQueue_)) pop])) close];
}

- (void)seekWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)arg0 {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)seekWithOrgApacheLuceneIndexTermEnum:(OrgApacheLuceneIndexTermEnum *)termEnum {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jint)readWithIntArray:(IOSIntArray *)arg0
            withIntArray:(IOSIntArray *)arg1 {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jint)getPayloadLength {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (IOSByteArray *)getPayloadWithByteArray:(IOSByteArray *)data
                                  withInt:(jint)offset {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jboolean)isPayloadAvailable {
  return false;
}

- (void)dealloc {
  RELEASE_(_termPositionsQueue_);
  RELEASE_(_posList_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 2, 3, 1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 6, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, 8, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 9, 10, 1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexIndexReader:withOrgApacheLuceneIndexTermArray:);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(nextPosition);
  methods[3].selector = @selector(skipToWithInt:);
  methods[4].selector = @selector(doc);
  methods[5].selector = @selector(freq);
  methods[6].selector = @selector(close);
  methods[7].selector = @selector(seekWithOrgApacheLuceneIndexTerm:);
  methods[8].selector = @selector(seekWithOrgApacheLuceneIndexTermEnum:);
  methods[9].selector = @selector(readWithIntArray:withIntArray:);
  methods[10].selector = @selector(getPayloadLength);
  methods[11].selector = @selector(getPayloadWithByteArray:withInt:);
  methods[12].selector = @selector(isPayloadAvailable);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_doc_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_freq_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_termPositionsQueue_", "LOrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_posList_", "LOrgApacheLuceneIndexMultipleTermPositions_IntQueue;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexIndexReader;[LOrgApacheLuceneIndexTerm;", "LJavaIoIOException;", "skipTo", "I", "seek", "LOrgApacheLuceneIndexTerm;", "LOrgApacheLuceneIndexTermEnum;", "read", "[I[I", "getPayload", "[BI", "LOrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue;LOrgApacheLuceneIndexMultipleTermPositions_IntQueue;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMultipleTermPositions = { "MultipleTermPositions", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x1, 13, 4, -1, 11, -1, -1, -1 };
  return &_OrgApacheLuceneIndexMultipleTermPositions;
}

@end

void OrgApacheLuceneIndexMultipleTermPositions_initWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexTermArray_(OrgApacheLuceneIndexMultipleTermPositions *self, OrgApacheLuceneIndexIndexReader *indexReader, IOSObjectArray *terms) {
  NSObject_init(self);
  id<JavaUtilList> termPositions = create_JavaUtilLinkedList_init();
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(terms))->size_; i++) [termPositions addWithId:[((OrgApacheLuceneIndexIndexReader *) nil_chk(indexReader)) termPositionsWithOrgApacheLuceneIndexTerm:IOSObjectArray_Get(terms, i)]];
  JreStrongAssignAndConsume(&self->_termPositionsQueue_, new_OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue_initWithJavaUtilList_(termPositions));
  JreStrongAssignAndConsume(&self->_posList_, new_OrgApacheLuceneIndexMultipleTermPositions_IntQueue_init());
}

OrgApacheLuceneIndexMultipleTermPositions *new_OrgApacheLuceneIndexMultipleTermPositions_initWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexTermArray_(OrgApacheLuceneIndexIndexReader *indexReader, IOSObjectArray *terms) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMultipleTermPositions, initWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexTermArray_, indexReader, terms)
}

OrgApacheLuceneIndexMultipleTermPositions *create_OrgApacheLuceneIndexMultipleTermPositions_initWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexTermArray_(OrgApacheLuceneIndexIndexReader *indexReader, IOSObjectArray *terms) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMultipleTermPositions, initWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexTermArray_, indexReader, terms)
}

jboolean OrgApacheLuceneIndexMultipleTermPositions_next(OrgApacheLuceneIndexMultipleTermPositions *self) {
  if ([((OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue *) nil_chk(self->_termPositionsQueue_)) size] == 0) return false;
  OrgApacheLuceneIndexMultipleTermPositions_IntQueue_clear(nil_chk(self->_posList_));
  self->_doc_ = [((id<OrgApacheLuceneIndexTermPositions>) nil_chk(OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue_peek(nil_chk(self->_termPositionsQueue_)))) doc];
  id<OrgApacheLuceneIndexTermPositions> tp;
  do {
    tp = OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue_peek(nil_chk(self->_termPositionsQueue_));
    for (jint i = 0; i < [((id<OrgApacheLuceneIndexTermPositions>) nil_chk(tp)) freq]; i++) {
      OrgApacheLuceneIndexMultipleTermPositions_IntQueue_addWithInt_(nil_chk(self->_posList_), [tp nextPosition]);
    }
    if ([tp next]) [((OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue *) nil_chk(self->_termPositionsQueue_)) updateTop];
    else {
      [((OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue *) nil_chk(self->_termPositionsQueue_)) pop];
      [tp close];
    }
  }
  while ([((OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue *) nil_chk(self->_termPositionsQueue_)) size] > 0 && [((id<OrgApacheLuceneIndexTermPositions>) nil_chk(OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue_peek(nil_chk(self->_termPositionsQueue_)))) doc] == self->_doc_);
  OrgApacheLuceneIndexMultipleTermPositions_IntQueue_sort(nil_chk(self->_posList_));
  self->_freq_ = OrgApacheLuceneIndexMultipleTermPositions_IntQueue_size(nil_chk(self->_posList_));
  return true;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMultipleTermPositions)

@implementation OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)termPositions {
  OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue_initWithJavaUtilList_(self, termPositions);
  return self;
}

- (id<OrgApacheLuceneIndexTermPositions>)peek {
  return OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue_peek(self);
}

- (jboolean)lessThanWithId:(id<OrgApacheLuceneIndexTermPositions>)a
                    withId:(id<OrgApacheLuceneIndexTermPositions>)b {
  return [((id<OrgApacheLuceneIndexTermPositions>) nil_chk(a)) doc] < [((id<OrgApacheLuceneIndexTermPositions>) nil_chk(b)) doc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, 2, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTermPositions;", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(peek);
  methods[2].selector = @selector(lessThanWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaUtilList;", "LJavaIoIOException;", "(Ljava/util/List<Lorg/apache/lucene/index/TermPositions;>;)V", "lessThan", "LOrgApacheLuceneIndexTermPositions;LOrgApacheLuceneIndexTermPositions;", "LOrgApacheLuceneIndexMultipleTermPositions;", "Lorg/apache/lucene/util/PriorityQueue<Lorg/apache/lucene/index/TermPositions;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue = { "TermPositionsQueue", "org.apache.lucene.index", ptrTable, methods, NULL, 7, 0x1a, 3, 0, 5, -1, -1, 6, -1 };
  return &_OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue;
}

@end

void OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue_initWithJavaUtilList_(OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue *self, id<JavaUtilList> termPositions) {
  OrgApacheLuceneUtilPriorityQueue_init(self);
  [self initialize__WithInt:[((id<JavaUtilList>) nil_chk(termPositions)) size]];
  for (id<OrgApacheLuceneIndexTermPositions> __strong tp in termPositions) {
    if ([((id<OrgApacheLuceneIndexTermPositions>) nil_chk(tp)) next]) [self addWithId:tp];
  }
}

OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue *new_OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue_initWithJavaUtilList_(id<JavaUtilList> termPositions) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue, initWithJavaUtilList_, termPositions)
}

OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue *create_OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue_initWithJavaUtilList_(id<JavaUtilList> termPositions) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue, initWithJavaUtilList_, termPositions)
}

id<OrgApacheLuceneIndexTermPositions> OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue_peek(OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue *self) {
  return [self top];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMultipleTermPositions_TermPositionsQueue)

@implementation OrgApacheLuceneIndexMultipleTermPositions_IntQueue

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexMultipleTermPositions_IntQueue_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)addWithInt:(jint)i {
  OrgApacheLuceneIndexMultipleTermPositions_IntQueue_addWithInt_(self, i);
}

- (jint)next {
  return OrgApacheLuceneIndexMultipleTermPositions_IntQueue_next(self);
}

- (void)sort {
  OrgApacheLuceneIndexMultipleTermPositions_IntQueue_sort(self);
}

- (void)clear {
  OrgApacheLuceneIndexMultipleTermPositions_IntQueue_clear(self);
}

- (jint)size {
  return OrgApacheLuceneIndexMultipleTermPositions_IntQueue_size(self);
}

- (void)growArray {
  OrgApacheLuceneIndexMultipleTermPositions_IntQueue_growArray(self);
}

- (void)dealloc {
  RELEASE_(_array_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addWithInt:);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(sort);
  methods[4].selector = @selector(clear);
  methods[5].selector = @selector(size);
  methods[6].selector = @selector(growArray);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_arraySize_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_index_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_lastIndex_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_array_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "add", "I", "LOrgApacheLuceneIndexMultipleTermPositions;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMultipleTermPositions_IntQueue = { "IntQueue", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x1a, 7, 4, 2, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexMultipleTermPositions_IntQueue;
}

@end

void OrgApacheLuceneIndexMultipleTermPositions_IntQueue_init(OrgApacheLuceneIndexMultipleTermPositions_IntQueue *self) {
  NSObject_init(self);
  self->_arraySize_ = 16;
  self->_index_ = 0;
  self->_lastIndex_ = 0;
  JreStrongAssignAndConsume(&self->_array_, [IOSIntArray newArrayWithLength:self->_arraySize_]);
}

OrgApacheLuceneIndexMultipleTermPositions_IntQueue *new_OrgApacheLuceneIndexMultipleTermPositions_IntQueue_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMultipleTermPositions_IntQueue, init)
}

OrgApacheLuceneIndexMultipleTermPositions_IntQueue *create_OrgApacheLuceneIndexMultipleTermPositions_IntQueue_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMultipleTermPositions_IntQueue, init)
}

void OrgApacheLuceneIndexMultipleTermPositions_IntQueue_addWithInt_(OrgApacheLuceneIndexMultipleTermPositions_IntQueue *self, jint i) {
  if (self->_lastIndex_ == self->_arraySize_) OrgApacheLuceneIndexMultipleTermPositions_IntQueue_growArray(self);
  *IOSIntArray_GetRef(nil_chk(self->_array_), self->_lastIndex_++) = i;
}

jint OrgApacheLuceneIndexMultipleTermPositions_IntQueue_next(OrgApacheLuceneIndexMultipleTermPositions_IntQueue *self) {
  return IOSIntArray_Get(nil_chk(self->_array_), self->_index_++);
}

void OrgApacheLuceneIndexMultipleTermPositions_IntQueue_sort(OrgApacheLuceneIndexMultipleTermPositions_IntQueue *self) {
  JavaUtilArrays_sortWithIntArray_withInt_withInt_(self->_array_, self->_index_, self->_lastIndex_);
}

void OrgApacheLuceneIndexMultipleTermPositions_IntQueue_clear(OrgApacheLuceneIndexMultipleTermPositions_IntQueue *self) {
  self->_index_ = 0;
  self->_lastIndex_ = 0;
}

jint OrgApacheLuceneIndexMultipleTermPositions_IntQueue_size(OrgApacheLuceneIndexMultipleTermPositions_IntQueue *self) {
  return (self->_lastIndex_ - self->_index_);
}

void OrgApacheLuceneIndexMultipleTermPositions_IntQueue_growArray(OrgApacheLuceneIndexMultipleTermPositions_IntQueue *self) {
  JreStrongAssign(&self->_array_, OrgApacheLuceneUtilArrayUtil_growWithIntArray_withInt_(self->_array_, self->_arraySize_ + 1));
  self->_arraySize_ = ((IOSIntArray *) nil_chk(self->_array_))->size_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMultipleTermPositions_IntQueue)
