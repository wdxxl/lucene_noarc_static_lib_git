//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/index/TieredMergePolicy.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "org/apache/lucene/index/IndexWriter.h"
#include "org/apache/lucene/index/MergePolicy.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentInfos.h"
#include "org/apache/lucene/index/TieredMergePolicy.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/util/SetOnce.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgApacheLuceneIndexTieredMergePolicy () {
 @public
  jint maxMergeAtOnce_;
  jlong maxMergedSegmentBytes_;
  jint maxMergeAtOnceExplicit_;
  jlong floorSegmentBytes_;
  jdouble segsPerTier_;
  jdouble forceMergeDeletesPctAllowed_;
  jboolean useCompoundFile_;
  jdouble noCFSRatio_;
  jdouble reclaimDeletesWeight_;
  id<JavaUtilComparator> segmentByteSizeDescending_;
}

- (jboolean)isMergedWithOrgApacheLuceneIndexSegmentInfo:(OrgApacheLuceneIndexSegmentInfo *)info;

- (jlong)sizeWithOrgApacheLuceneIndexSegmentInfo:(OrgApacheLuceneIndexSegmentInfo *)info;

- (jlong)floorSizeWithLong:(jlong)bytes;

- (jboolean)verbose;

- (void)messageWithNSString:(NSString *)message;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexTieredMergePolicy, segmentByteSizeDescending_, id<JavaUtilComparator>)

__attribute__((unused)) static jboolean OrgApacheLuceneIndexTieredMergePolicy_isMergedWithOrgApacheLuceneIndexSegmentInfo_(OrgApacheLuceneIndexTieredMergePolicy *self, OrgApacheLuceneIndexSegmentInfo *info);

__attribute__((unused)) static jlong OrgApacheLuceneIndexTieredMergePolicy_sizeWithOrgApacheLuceneIndexSegmentInfo_(OrgApacheLuceneIndexTieredMergePolicy *self, OrgApacheLuceneIndexSegmentInfo *info);

__attribute__((unused)) static jlong OrgApacheLuceneIndexTieredMergePolicy_floorSizeWithLong_(OrgApacheLuceneIndexTieredMergePolicy *self, jlong bytes);

__attribute__((unused)) static jboolean OrgApacheLuceneIndexTieredMergePolicy_verbose(OrgApacheLuceneIndexTieredMergePolicy *self);

__attribute__((unused)) static void OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_(OrgApacheLuceneIndexTieredMergePolicy *self, NSString *message);

@interface OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending : NSObject < JavaUtilComparator > {
 @public
  OrgApacheLuceneIndexTieredMergePolicy *this$0_;
}

- (instancetype)initWithOrgApacheLuceneIndexTieredMergePolicy:(OrgApacheLuceneIndexTieredMergePolicy *)outer$;

- (jint)compareWithId:(OrgApacheLuceneIndexSegmentInfo *)o1
               withId:(OrgApacheLuceneIndexSegmentInfo *)o2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending)

__attribute__((unused)) static void OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending_initWithOrgApacheLuceneIndexTieredMergePolicy_(OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending *self, OrgApacheLuceneIndexTieredMergePolicy *outer$);

__attribute__((unused)) static OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending *new_OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending_initWithOrgApacheLuceneIndexTieredMergePolicy_(OrgApacheLuceneIndexTieredMergePolicy *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending *create_OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending_initWithOrgApacheLuceneIndexTieredMergePolicy_(OrgApacheLuceneIndexTieredMergePolicy *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending)

@interface OrgApacheLuceneIndexTieredMergePolicy_1 : OrgApacheLuceneIndexTieredMergePolicy_MergeScore {
 @public
  jdouble val$finalMergeScore_;
  jdouble val$skew_;
  jdouble val$nonDelRatio_;
}

- (instancetype)initWithDouble:(jdouble)capture$0
                    withDouble:(jdouble)capture$1
                    withDouble:(jdouble)capture$2;

- (jdouble)getScore;

- (NSString *)getExplanation;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexTieredMergePolicy_1)

__attribute__((unused)) static void OrgApacheLuceneIndexTieredMergePolicy_1_initWithDouble_withDouble_withDouble_(OrgApacheLuceneIndexTieredMergePolicy_1 *self, jdouble capture$0, jdouble capture$1, jdouble capture$2);

__attribute__((unused)) static OrgApacheLuceneIndexTieredMergePolicy_1 *new_OrgApacheLuceneIndexTieredMergePolicy_1_initWithDouble_withDouble_withDouble_(jdouble capture$0, jdouble capture$1, jdouble capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexTieredMergePolicy_1 *create_OrgApacheLuceneIndexTieredMergePolicy_1_initWithDouble_withDouble_withDouble_(jdouble capture$0, jdouble capture$1, jdouble capture$2);

@implementation OrgApacheLuceneIndexTieredMergePolicy

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexTieredMergePolicy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneIndexTieredMergePolicy *)setMaxMergeAtOnceWithInt:(jint)v {
  if (v < 2) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$IC", @"maxMergeAtOnce must be > 1 (got ", v, ')'));
  }
  maxMergeAtOnce_ = v;
  return self;
}

- (jint)getMaxMergeAtOnce {
  return maxMergeAtOnce_;
}

- (OrgApacheLuceneIndexTieredMergePolicy *)setMaxMergeAtOnceExplicitWithInt:(jint)v {
  if (v < 2) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$IC", @"maxMergeAtOnceExplicit must be > 1 (got ", v, ')'));
  }
  maxMergeAtOnceExplicit_ = v;
  return self;
}

- (jint)getMaxMergeAtOnceExplicit {
  return maxMergeAtOnceExplicit_;
}

- (OrgApacheLuceneIndexTieredMergePolicy *)setMaxMergedSegmentMBWithDouble:(jdouble)v {
  maxMergedSegmentBytes_ = JreFpToLong((v * 1024 * 1024));
  return self;
}

- (jdouble)getMaxMergedSegmentMB {
  return maxMergedSegmentBytes_ / 1024 / 1024.;
}

- (OrgApacheLuceneIndexTieredMergePolicy *)setReclaimDeletesWeightWithDouble:(jdouble)v {
  if (v < 0.0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$DC", @"reclaimDeletesWeight must be >= 0.0 (got ", v, ')'));
  }
  reclaimDeletesWeight_ = v;
  return self;
}

- (jdouble)getReclaimDeletesWeight {
  return reclaimDeletesWeight_;
}

- (OrgApacheLuceneIndexTieredMergePolicy *)setFloorSegmentMBWithDouble:(jdouble)v {
  if (v <= 0.0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$DC", @"floorSegmentMB must be >= 0.0 (got ", v, ')'));
  }
  floorSegmentBytes_ = JreFpToLong((v * 1024 * 1024));
  return self;
}

- (jdouble)getFloorSegmentMB {
  return floorSegmentBytes_ / 1024 * 1024.;
}

- (OrgApacheLuceneIndexTieredMergePolicy *)setForceMergeDeletesPctAllowedWithDouble:(jdouble)v {
  if (v < 0.0 || v > 100.0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$DC", @"forceMergeDeletesPctAllowed must be between 0.0 and 100.0 inclusive (got ", v, ')'));
  }
  forceMergeDeletesPctAllowed_ = v;
  return self;
}

- (jdouble)getForceMergeDeletesPctAllowed {
  return forceMergeDeletesPctAllowed_;
}

- (OrgApacheLuceneIndexTieredMergePolicy *)setSegmentsPerTierWithDouble:(jdouble)v {
  if (v < 2.0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$DC", @"segmentsPerTier must be >= 2.0 (got ", v, ')'));
  }
  segsPerTier_ = v;
  return self;
}

- (jdouble)getSegmentsPerTier {
  return segsPerTier_;
}

- (OrgApacheLuceneIndexTieredMergePolicy *)setUseCompoundFileWithBoolean:(jboolean)useCompoundFile {
  self->useCompoundFile_ = useCompoundFile;
  return self;
}

- (jboolean)getUseCompoundFile {
  return useCompoundFile_;
}

- (OrgApacheLuceneIndexTieredMergePolicy *)setNoCFSRatioWithDouble:(jdouble)noCFSRatio {
  if (noCFSRatio < 0.0 || noCFSRatio > 1.0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$D", @"noCFSRatio must be 0.0 to 1.0 inclusive; got ", noCFSRatio));
  }
  self->noCFSRatio_ = noCFSRatio;
  return self;
}

- (jdouble)getNoCFSRatio {
  return noCFSRatio_;
}

- (OrgApacheLuceneIndexMergePolicy_MergeSpecification *)findMergesWithOrgApacheLuceneIndexSegmentInfos:(OrgApacheLuceneIndexSegmentInfos *)infos {
  if (OrgApacheLuceneIndexTieredMergePolicy_verbose(self)) {
    OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_(self, JreStrcat("$I$", @"findMerges: ", [((OrgApacheLuceneIndexSegmentInfos *) nil_chk(infos)) size], @" segments"));
  }
  if ([((OrgApacheLuceneIndexSegmentInfos *) nil_chk(infos)) size] == 0) {
    return nil;
  }
  id<JavaUtilCollection> merging = [((OrgApacheLuceneIndexIndexWriter *) nil_chk([((OrgApacheLuceneUtilSetOnce *) nil_chk(writer_)) get])) getMergingSegments];
  id<JavaUtilCollection> toBeMerged = create_JavaUtilHashSet_init();
  id<JavaUtilList> infosSorted = create_JavaUtilArrayList_initWithJavaUtilCollection_([infos asList]);
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(infosSorted, segmentByteSizeDescending_);
  jlong totIndexBytes = 0;
  jlong minSegmentBytes = JavaLangLong_MAX_VALUE;
  for (OrgApacheLuceneIndexSegmentInfo * __strong info in infosSorted) {
    jlong segBytes = OrgApacheLuceneIndexTieredMergePolicy_sizeWithOrgApacheLuceneIndexSegmentInfo_(self, info);
    if (OrgApacheLuceneIndexTieredMergePolicy_verbose(self)) {
      NSString *extra = [((id<JavaUtilCollection>) nil_chk(merging)) containsWithId:info] ? @" [merging]" : @"";
      if (segBytes >= maxMergedSegmentBytes_ / 2.0) {
        JreStrAppend(&extra, "$", @" [skip: too large]");
      }
      else if (segBytes < floorSegmentBytes_) {
        JreStrAppend(&extra, "$", @" [floored]");
      }
      OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_(self, JreStrcat("$$$$$$", @"  seg=", [((OrgApacheLuceneIndexIndexWriter *) nil_chk([writer_ get])) segStringWithOrgApacheLuceneIndexSegmentInfo:info], @" size=", NSString_java_formatWithNSString_withNSObjectArray_(@"%.3f", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(segBytes / 1024 / 1024.) } count:1 type:NSObject_class_()]), @" MB", extra));
    }
    minSegmentBytes = JavaLangMath_minWithLong_withLong_(segBytes, minSegmentBytes);
    totIndexBytes += segBytes;
  }
  jint tooBigCount = 0;
  while (tooBigCount < [infosSorted size] && OrgApacheLuceneIndexTieredMergePolicy_sizeWithOrgApacheLuceneIndexSegmentInfo_(self, [infosSorted getWithInt:tooBigCount]) >= maxMergedSegmentBytes_ / 2.0) {
    totIndexBytes -= OrgApacheLuceneIndexTieredMergePolicy_sizeWithOrgApacheLuceneIndexSegmentInfo_(self, [infosSorted getWithInt:tooBigCount]);
    tooBigCount++;
  }
  minSegmentBytes = OrgApacheLuceneIndexTieredMergePolicy_floorSizeWithLong_(self, minSegmentBytes);
  jlong levelSize = minSegmentBytes;
  jlong bytesLeft = totIndexBytes;
  jdouble allowedSegCount = 0;
  while (true) {
    jdouble segCountLevel = bytesLeft / (jdouble) levelSize;
    if (segCountLevel < segsPerTier_) {
      JrePlusAssignDoubleD(&allowedSegCount, JavaLangMath_ceilWithDouble_(segCountLevel));
      break;
    }
    JrePlusAssignDoubleD(&allowedSegCount, segsPerTier_);
    JreMinusAssignLongD(&bytesLeft, segsPerTier_ * levelSize);
    levelSize *= maxMergeAtOnce_;
  }
  jint allowedSegCountInt = JreFpToInt(allowedSegCount);
  OrgApacheLuceneIndexMergePolicy_MergeSpecification *spec = nil;
  while (true) {
    jlong mergingBytes = 0;
    id<JavaUtilList> eligible = create_JavaUtilArrayList_init();
    for (jint idx = tooBigCount; idx < [infosSorted size]; idx++) {
      OrgApacheLuceneIndexSegmentInfo *info = [infosSorted getWithInt:idx];
      if ([((id<JavaUtilCollection>) nil_chk(merging)) containsWithId:info]) {
        mergingBytes += [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info)) sizeInBytesWithBoolean:true];
      }
      else if (![toBeMerged containsWithId:info]) {
        [eligible addWithId:info];
      }
    }
    jboolean maxMergeIsRunning = mergingBytes >= maxMergedSegmentBytes_;
    OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_(self, JreStrcat("$I$I$I$I", @"  allowedSegmentCount=", allowedSegCountInt, @" vs count=", [infosSorted size], @" (eligible count=", [eligible size], @") tooBigCount=", tooBigCount));
    if ([eligible size] == 0) {
      return spec;
    }
    if ([eligible size] >= allowedSegCountInt) {
      OrgApacheLuceneIndexTieredMergePolicy_MergeScore *bestScore = nil;
      id<JavaUtilList> best = nil;
      jboolean bestTooLarge = false;
      jlong bestMergeBytes = 0;
      for (jint startIdx = 0; startIdx <= [eligible size] - maxMergeAtOnce_; startIdx++) {
        jlong totAfterMergeBytes = 0;
        id<JavaUtilList> candidate = create_JavaUtilArrayList_init();
        jboolean hitTooLarge = false;
        for (jint idx = startIdx; idx < [eligible size] && [candidate size] < maxMergeAtOnce_; idx++) {
          OrgApacheLuceneIndexSegmentInfo *info = [eligible getWithInt:idx];
          jlong segBytes = OrgApacheLuceneIndexTieredMergePolicy_sizeWithOrgApacheLuceneIndexSegmentInfo_(self, info);
          if (totAfterMergeBytes + segBytes > maxMergedSegmentBytes_) {
            hitTooLarge = true;
            continue;
          }
          [candidate addWithId:info];
          totAfterMergeBytes += segBytes;
        }
        OrgApacheLuceneIndexTieredMergePolicy_MergeScore *score = [self scoreWithJavaUtilList:candidate withBoolean:hitTooLarge withLong:mergingBytes];
        OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_(self, JreStrcat("$$$DC$$Z$$", @"  maybe=", [((OrgApacheLuceneIndexIndexWriter *) nil_chk([writer_ get])) segStringWithJavaLangIterable:candidate], @" score=", [((OrgApacheLuceneIndexTieredMergePolicy_MergeScore *) nil_chk(score)) getScore], ' ', [score getExplanation], @" tooLarge=", hitTooLarge, @" size=", NSString_java_formatWithNSString_withNSObjectArray_(@"%.3f MB", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(totAfterMergeBytes / 1024. / 1024.) } count:1 type:NSObject_class_()])));
        if ((bestScore == nil || [score getScore] < [bestScore getScore]) && (!hitTooLarge || !maxMergeIsRunning)) {
          best = candidate;
          bestScore = score;
          bestTooLarge = hitTooLarge;
          bestMergeBytes = totAfterMergeBytes;
        }
      }
      if (best != nil) {
        if (spec == nil) {
          spec = create_OrgApacheLuceneIndexMergePolicy_MergeSpecification_init();
        }
        OrgApacheLuceneIndexMergePolicy_OneMerge *merge = create_OrgApacheLuceneIndexMergePolicy_OneMerge_initWithJavaUtilList_(best);
        [spec addWithOrgApacheLuceneIndexMergePolicy_OneMerge:merge];
        for (OrgApacheLuceneIndexSegmentInfo * __strong info in nil_chk(merge->segments_)) {
          [toBeMerged addWithId:info];
        }
        if (OrgApacheLuceneIndexTieredMergePolicy_verbose(self)) {
          OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_(self, JreStrcat("$$$$$$C$$", @"  add merge=", [((OrgApacheLuceneIndexIndexWriter *) nil_chk([writer_ get])) segStringWithJavaLangIterable:merge->segments_], @" size=", NSString_java_formatWithNSString_withNSObjectArray_(@"%.3f MB", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(bestMergeBytes / 1024. / 1024.) } count:1 type:NSObject_class_()]), @" score=", NSString_java_formatWithNSString_withNSObjectArray_(@"%.3f", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_([((OrgApacheLuceneIndexTieredMergePolicy_MergeScore *) nil_chk(bestScore)) getScore]) } count:1 type:NSObject_class_()]), ' ', [bestScore getExplanation], (bestTooLarge ? @" [max merge]" : @"")));
        }
      }
      else {
        return spec;
      }
    }
    else {
      return spec;
    }
  }
}

- (OrgApacheLuceneIndexTieredMergePolicy_MergeScore *)scoreWithJavaUtilList:(id<JavaUtilList>)candidate
                                                                withBoolean:(jboolean)hitTooLarge
                                                                   withLong:(jlong)mergingBytes {
  jlong totBeforeMergeBytes = 0;
  jlong totAfterMergeBytes = 0;
  jlong totAfterMergeBytesFloored = 0;
  for (OrgApacheLuceneIndexSegmentInfo * __strong info in nil_chk(candidate)) {
    jlong segBytes = OrgApacheLuceneIndexTieredMergePolicy_sizeWithOrgApacheLuceneIndexSegmentInfo_(self, info);
    totAfterMergeBytes += segBytes;
    totAfterMergeBytesFloored += OrgApacheLuceneIndexTieredMergePolicy_floorSizeWithLong_(self, segBytes);
    totBeforeMergeBytes += [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info)) sizeInBytesWithBoolean:true];
  }
  jdouble skew;
  if (hitTooLarge) {
    skew = 1.0 / maxMergeAtOnce_;
  }
  else {
    skew = ((jdouble) OrgApacheLuceneIndexTieredMergePolicy_floorSizeWithLong_(self, OrgApacheLuceneIndexTieredMergePolicy_sizeWithOrgApacheLuceneIndexSegmentInfo_(self, [candidate getWithInt:0]))) / totAfterMergeBytesFloored;
  }
  jdouble mergeScore = skew;
  JreTimesAssignDoubleD(&mergeScore, JavaLangMath_powWithDouble_withDouble_(totAfterMergeBytes, 0.05));
  jdouble nonDelRatio = ((jdouble) totAfterMergeBytes) / totBeforeMergeBytes;
  JreTimesAssignDoubleD(&mergeScore, JavaLangMath_powWithDouble_withDouble_(nonDelRatio, reclaimDeletesWeight_));
  jdouble finalMergeScore = mergeScore;
  return create_OrgApacheLuceneIndexTieredMergePolicy_1_initWithDouble_withDouble_withDouble_(finalMergeScore, skew, nonDelRatio);
}

- (OrgApacheLuceneIndexMergePolicy_MergeSpecification *)findForcedMergesWithOrgApacheLuceneIndexSegmentInfos:(OrgApacheLuceneIndexSegmentInfos *)infos
                                                                                                     withInt:(jint)maxSegmentCount
                                                                                             withJavaUtilMap:(id<JavaUtilMap>)segmentsToMerge {
  if (OrgApacheLuceneIndexTieredMergePolicy_verbose(self)) {
    OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_(self, JreStrcat("$I$$$@", @"findForcedMerges maxSegmentCount=", maxSegmentCount, @" infos=", [((OrgApacheLuceneIndexIndexWriter *) nil_chk([((OrgApacheLuceneUtilSetOnce *) nil_chk(writer_)) get])) segStringWithJavaLangIterable:infos], @" segmentsToMerge=", segmentsToMerge));
  }
  id<JavaUtilList> eligible = create_JavaUtilArrayList_init();
  jboolean forceMergeRunning = false;
  id<JavaUtilCollection> merging = [((OrgApacheLuceneIndexIndexWriter *) nil_chk([((OrgApacheLuceneUtilSetOnce *) nil_chk(writer_)) get])) getMergingSegments];
  jboolean segmentIsOriginal = false;
  for (OrgApacheLuceneIndexSegmentInfo * __strong info in nil_chk(infos)) {
    JavaLangBoolean *isOriginal = [((id<JavaUtilMap>) nil_chk(segmentsToMerge)) getWithId:info];
    if (isOriginal != nil) {
      segmentIsOriginal = [isOriginal booleanValue];
      if (![((id<JavaUtilCollection>) nil_chk(merging)) containsWithId:info]) {
        [eligible addWithId:info];
      }
      else {
        forceMergeRunning = true;
      }
    }
  }
  if ([eligible size] == 0) {
    return nil;
  }
  if ((maxSegmentCount > 1 && [eligible size] <= maxSegmentCount) || (maxSegmentCount == 1 && [eligible size] == 1 && (!segmentIsOriginal || OrgApacheLuceneIndexTieredMergePolicy_isMergedWithOrgApacheLuceneIndexSegmentInfo_(self, [eligible getWithInt:0])))) {
    if (OrgApacheLuceneIndexTieredMergePolicy_verbose(self)) {
      OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_(self, @"already merged");
    }
    return nil;
  }
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(eligible, segmentByteSizeDescending_);
  if (OrgApacheLuceneIndexTieredMergePolicy_verbose(self)) {
    OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_(self, JreStrcat("$@", @"eligible=", eligible));
    OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_(self, JreStrcat("$Z", @"forceMergeRunning=", forceMergeRunning));
  }
  jint end = [eligible size];
  OrgApacheLuceneIndexMergePolicy_MergeSpecification *spec = nil;
  while (end >= maxMergeAtOnceExplicit_ + maxSegmentCount - 1) {
    if (spec == nil) {
      spec = create_OrgApacheLuceneIndexMergePolicy_MergeSpecification_init();
    }
    OrgApacheLuceneIndexMergePolicy_OneMerge *merge = create_OrgApacheLuceneIndexMergePolicy_OneMerge_initWithJavaUtilList_([eligible subListWithInt:end - maxMergeAtOnceExplicit_ withInt:end]);
    if (OrgApacheLuceneIndexTieredMergePolicy_verbose(self)) {
      OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_(self, JreStrcat("$$", @"add merge=", [((OrgApacheLuceneIndexIndexWriter *) nil_chk([writer_ get])) segStringWithJavaLangIterable:merge->segments_]));
    }
    [spec addWithOrgApacheLuceneIndexMergePolicy_OneMerge:merge];
    end -= maxMergeAtOnceExplicit_;
  }
  if (spec == nil && !forceMergeRunning) {
    jint numToMerge = end - maxSegmentCount + 1;
    OrgApacheLuceneIndexMergePolicy_OneMerge *merge = create_OrgApacheLuceneIndexMergePolicy_OneMerge_initWithJavaUtilList_([eligible subListWithInt:end - numToMerge withInt:end]);
    if (OrgApacheLuceneIndexTieredMergePolicy_verbose(self)) {
      OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_(self, JreStrcat("$$", @"add final merge=", [merge segStringWithOrgApacheLuceneStoreDirectory:[((OrgApacheLuceneIndexIndexWriter *) nil_chk([writer_ get])) getDirectory]]));
    }
    spec = create_OrgApacheLuceneIndexMergePolicy_MergeSpecification_init();
    [spec addWithOrgApacheLuceneIndexMergePolicy_OneMerge:merge];
  }
  return spec;
}

- (OrgApacheLuceneIndexMergePolicy_MergeSpecification *)findForcedDeletesMergesWithOrgApacheLuceneIndexSegmentInfos:(OrgApacheLuceneIndexSegmentInfos *)infos {
  if (OrgApacheLuceneIndexTieredMergePolicy_verbose(self)) {
    OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_(self, JreStrcat("$$$D", @"findForcedDeletesMerges infos=", [((OrgApacheLuceneIndexIndexWriter *) nil_chk([((OrgApacheLuceneUtilSetOnce *) nil_chk(writer_)) get])) segStringWithJavaLangIterable:infos], @" forceMergeDeletesPctAllowed=", forceMergeDeletesPctAllowed_));
  }
  id<JavaUtilList> eligible = create_JavaUtilArrayList_init();
  id<JavaUtilCollection> merging = [((OrgApacheLuceneIndexIndexWriter *) nil_chk([((OrgApacheLuceneUtilSetOnce *) nil_chk(writer_)) get])) getMergingSegments];
  for (OrgApacheLuceneIndexSegmentInfo * __strong info in nil_chk(infos)) {
    jdouble pctDeletes = 100. * ((jdouble) [((OrgApacheLuceneIndexIndexWriter *) nil_chk([writer_ get])) numDeletedDocsWithOrgApacheLuceneIndexSegmentInfo:info]) / ((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info))->docCount_;
    if (pctDeletes > forceMergeDeletesPctAllowed_ && ![((id<JavaUtilCollection>) nil_chk(merging)) containsWithId:info]) {
      [eligible addWithId:info];
    }
  }
  if ([eligible size] == 0) {
    return nil;
  }
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(eligible, segmentByteSizeDescending_);
  if (OrgApacheLuceneIndexTieredMergePolicy_verbose(self)) {
    OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_(self, JreStrcat("$@", @"eligible=", eligible));
  }
  jint start = 0;
  OrgApacheLuceneIndexMergePolicy_MergeSpecification *spec = nil;
  while (start < [eligible size]) {
    jint end = JavaLangMath_minWithInt_withInt_(start + maxMergeAtOnceExplicit_, [eligible size]);
    if (spec == nil) {
      spec = create_OrgApacheLuceneIndexMergePolicy_MergeSpecification_init();
    }
    OrgApacheLuceneIndexMergePolicy_OneMerge *merge = create_OrgApacheLuceneIndexMergePolicy_OneMerge_initWithJavaUtilList_([eligible subListWithInt:start withInt:end]);
    if (OrgApacheLuceneIndexTieredMergePolicy_verbose(self)) {
      OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_(self, JreStrcat("$$", @"add merge=", [((OrgApacheLuceneIndexIndexWriter *) nil_chk([writer_ get])) segStringWithJavaLangIterable:merge->segments_]));
    }
    [spec addWithOrgApacheLuceneIndexMergePolicy_OneMerge:merge];
    start = end;
  }
  return spec;
}

- (jboolean)useCompoundFileWithOrgApacheLuceneIndexSegmentInfos:(OrgApacheLuceneIndexSegmentInfos *)infos
                            withOrgApacheLuceneIndexSegmentInfo:(OrgApacheLuceneIndexSegmentInfo *)mergedInfo {
  jboolean doCFS;
  if (!useCompoundFile_) {
    doCFS = false;
  }
  else if (noCFSRatio_ == 1.0) {
    doCFS = true;
  }
  else {
    jlong totalSize = 0;
    for (OrgApacheLuceneIndexSegmentInfo * __strong info in nil_chk(infos)) totalSize += OrgApacheLuceneIndexTieredMergePolicy_sizeWithOrgApacheLuceneIndexSegmentInfo_(self, info);
    doCFS = (OrgApacheLuceneIndexTieredMergePolicy_sizeWithOrgApacheLuceneIndexSegmentInfo_(self, mergedInfo) <= noCFSRatio_ * totalSize);
  }
  return doCFS;
}

- (void)close {
}

- (jboolean)isMergedWithOrgApacheLuceneIndexSegmentInfo:(OrgApacheLuceneIndexSegmentInfo *)info {
  return OrgApacheLuceneIndexTieredMergePolicy_isMergedWithOrgApacheLuceneIndexSegmentInfo_(self, info);
}

- (jlong)sizeWithOrgApacheLuceneIndexSegmentInfo:(OrgApacheLuceneIndexSegmentInfo *)info {
  return OrgApacheLuceneIndexTieredMergePolicy_sizeWithOrgApacheLuceneIndexSegmentInfo_(self, info);
}

- (jlong)floorSizeWithLong:(jlong)bytes {
  return OrgApacheLuceneIndexTieredMergePolicy_floorSizeWithLong_(self, bytes);
}

- (jboolean)verbose {
  return OrgApacheLuceneIndexTieredMergePolicy_verbose(self);
}

- (void)messageWithNSString:(NSString *)message {
  OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_(self, message);
}

- (NSString *)description {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithNSString_(JreStrcat("C$$", '[', [[self java_getClass] getSimpleName], @": "));
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"maxMergeAtOnce="])) appendWithInt:maxMergeAtOnce_])) appendWithNSString:@", "];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"maxMergeAtOnceExplicit="])) appendWithInt:maxMergeAtOnceExplicit_])) appendWithNSString:@", "];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"maxMergedSegmentMB="])) appendWithDouble:maxMergedSegmentBytes_ / 1024 / 1024.])) appendWithNSString:@", "];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"floorSegmentMB="])) appendWithDouble:floorSegmentBytes_ / 1024 / 1024.])) appendWithNSString:@", "];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"forceMergeDeletesPctAllowed="])) appendWithDouble:forceMergeDeletesPctAllowed_])) appendWithNSString:@", "];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"segmentsPerTier="])) appendWithDouble:segsPerTier_])) appendWithNSString:@", "];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"useCompoundFile="])) appendWithBoolean:useCompoundFile_])) appendWithNSString:@", "];
  [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"noCFSRatio="])) appendWithDouble:noCFSRatio_];
  return [sb description];
}

- (void)dealloc {
  RELEASE_(segmentByteSizeDescending_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTieredMergePolicy;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTieredMergePolicy;", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTieredMergePolicy;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTieredMergePolicy;", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTieredMergePolicy;", 0x1, 6, 4, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTieredMergePolicy;", 0x1, 7, 4, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTieredMergePolicy;", 0x1, 8, 4, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTieredMergePolicy;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTieredMergePolicy;", 0x1, 11, 4, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexMergePolicy_MergeSpecification;", 0x1, 12, 13, 14, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTieredMergePolicy_MergeScore;", 0x4, 15, 16, 14, 17, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexMergePolicy_MergeSpecification;", 0x1, 18, 19, 14, 20, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexMergePolicy_MergeSpecification;", 0x1, 21, 13, 22, -1, -1, -1 },
    { NULL, "Z", 0x1, 23, 24, 14, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 25, 26, 14, -1, -1, -1 },
    { NULL, "J", 0x2, 27, 26, 14, -1, -1, -1 },
    { NULL, "J", 0x2, 28, 29, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 30, 31, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 32, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setMaxMergeAtOnceWithInt:);
  methods[2].selector = @selector(getMaxMergeAtOnce);
  methods[3].selector = @selector(setMaxMergeAtOnceExplicitWithInt:);
  methods[4].selector = @selector(getMaxMergeAtOnceExplicit);
  methods[5].selector = @selector(setMaxMergedSegmentMBWithDouble:);
  methods[6].selector = @selector(getMaxMergedSegmentMB);
  methods[7].selector = @selector(setReclaimDeletesWeightWithDouble:);
  methods[8].selector = @selector(getReclaimDeletesWeight);
  methods[9].selector = @selector(setFloorSegmentMBWithDouble:);
  methods[10].selector = @selector(getFloorSegmentMB);
  methods[11].selector = @selector(setForceMergeDeletesPctAllowedWithDouble:);
  methods[12].selector = @selector(getForceMergeDeletesPctAllowed);
  methods[13].selector = @selector(setSegmentsPerTierWithDouble:);
  methods[14].selector = @selector(getSegmentsPerTier);
  methods[15].selector = @selector(setUseCompoundFileWithBoolean:);
  methods[16].selector = @selector(getUseCompoundFile);
  methods[17].selector = @selector(setNoCFSRatioWithDouble:);
  methods[18].selector = @selector(getNoCFSRatio);
  methods[19].selector = @selector(findMergesWithOrgApacheLuceneIndexSegmentInfos:);
  methods[20].selector = @selector(scoreWithJavaUtilList:withBoolean:withLong:);
  methods[21].selector = @selector(findForcedMergesWithOrgApacheLuceneIndexSegmentInfos:withInt:withJavaUtilMap:);
  methods[22].selector = @selector(findForcedDeletesMergesWithOrgApacheLuceneIndexSegmentInfos:);
  methods[23].selector = @selector(useCompoundFileWithOrgApacheLuceneIndexSegmentInfos:withOrgApacheLuceneIndexSegmentInfo:);
  methods[24].selector = @selector(close);
  methods[25].selector = @selector(isMergedWithOrgApacheLuceneIndexSegmentInfo:);
  methods[26].selector = @selector(sizeWithOrgApacheLuceneIndexSegmentInfo:);
  methods[27].selector = @selector(floorSizeWithLong:);
  methods[28].selector = @selector(verbose);
  methods[29].selector = @selector(messageWithNSString:);
  methods[30].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "maxMergeAtOnce_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "maxMergedSegmentBytes_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "maxMergeAtOnceExplicit_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "floorSegmentBytes_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "segsPerTier_", "D", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "forceMergeDeletesPctAllowed_", "D", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "useCompoundFile_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "noCFSRatio_", "D", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "reclaimDeletesWeight_", "D", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "segmentByteSizeDescending_", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x12, -1, -1, 33, -1 },
  };
  static const void *ptrTable[] = { "setMaxMergeAtOnce", "I", "setMaxMergeAtOnceExplicit", "setMaxMergedSegmentMB", "D", "setReclaimDeletesWeight", "setFloorSegmentMB", "setForceMergeDeletesPctAllowed", "setSegmentsPerTier", "setUseCompoundFile", "Z", "setNoCFSRatio", "findMerges", "LOrgApacheLuceneIndexSegmentInfos;", "LJavaIoIOException;", "score", "LJavaUtilList;ZJ", "(Ljava/util/List<Lorg/apache/lucene/index/SegmentInfo;>;ZJ)Lorg/apache/lucene/index/TieredMergePolicy$MergeScore;", "findForcedMerges", "LOrgApacheLuceneIndexSegmentInfos;ILJavaUtilMap;", "(Lorg/apache/lucene/index/SegmentInfos;ILjava/util/Map<Lorg/apache/lucene/index/SegmentInfo;Ljava/lang/Boolean;>;)Lorg/apache/lucene/index/MergePolicy$MergeSpecification;", "findForcedDeletesMerges", "LOrgApacheLuceneIndexCorruptIndexException;LJavaIoIOException;", "useCompoundFile", "LOrgApacheLuceneIndexSegmentInfos;LOrgApacheLuceneIndexSegmentInfo;", "isMerged", "LOrgApacheLuceneIndexSegmentInfo;", "size", "floorSize", "J", "message", "LNSString;", "toString", "Ljava/util/Comparator<Lorg/apache/lucene/index/SegmentInfo;>;", "LOrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending;LOrgApacheLuceneIndexTieredMergePolicy_MergeScore;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexTieredMergePolicy = { "TieredMergePolicy", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x1, 31, 10, -1, 34, -1, -1, -1 };
  return &_OrgApacheLuceneIndexTieredMergePolicy;
}

@end

void OrgApacheLuceneIndexTieredMergePolicy_init(OrgApacheLuceneIndexTieredMergePolicy *self) {
  OrgApacheLuceneIndexMergePolicy_init(self);
  self->maxMergeAtOnce_ = 10;
  self->maxMergedSegmentBytes_ = 5 * 1024 * 1024 * 1024LL;
  self->maxMergeAtOnceExplicit_ = 30;
  self->floorSegmentBytes_ = 2 * 1024 * 1024LL;
  self->segsPerTier_ = 10.0;
  self->forceMergeDeletesPctAllowed_ = 10.0;
  self->useCompoundFile_ = true;
  self->noCFSRatio_ = 0.1;
  self->reclaimDeletesWeight_ = 2.0;
  JreStrongAssignAndConsume(&self->segmentByteSizeDescending_, new_OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending_initWithOrgApacheLuceneIndexTieredMergePolicy_(self));
}

OrgApacheLuceneIndexTieredMergePolicy *new_OrgApacheLuceneIndexTieredMergePolicy_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexTieredMergePolicy, init)
}

OrgApacheLuceneIndexTieredMergePolicy *create_OrgApacheLuceneIndexTieredMergePolicy_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexTieredMergePolicy, init)
}

jboolean OrgApacheLuceneIndexTieredMergePolicy_isMergedWithOrgApacheLuceneIndexSegmentInfo_(OrgApacheLuceneIndexTieredMergePolicy *self, OrgApacheLuceneIndexSegmentInfo *info) {
  OrgApacheLuceneIndexIndexWriter *w = [((OrgApacheLuceneUtilSetOnce *) nil_chk(self->writer_)) get];
  JreAssert((w != nil), (@"org/apache/lucene/index/TieredMergePolicy.java:623 condition failed: assert w != null;"));
  jboolean hasDeletions = [((OrgApacheLuceneIndexIndexWriter *) nil_chk(w)) numDeletedDocsWithOrgApacheLuceneIndexSegmentInfo:info] > 0;
  return !hasDeletions && ![((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info)) hasSeparateNorms] && info->dir_ == [w getDirectory] && ([info getUseCompoundFile] == self->useCompoundFile_ || self->noCFSRatio_ < 1.0);
}

jlong OrgApacheLuceneIndexTieredMergePolicy_sizeWithOrgApacheLuceneIndexSegmentInfo_(OrgApacheLuceneIndexTieredMergePolicy *self, OrgApacheLuceneIndexSegmentInfo *info) {
  jlong byteSize = [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info)) sizeInBytesWithBoolean:true];
  jint delCount = [((OrgApacheLuceneIndexIndexWriter *) nil_chk([((OrgApacheLuceneUtilSetOnce *) nil_chk(self->writer_)) get])) numDeletedDocsWithOrgApacheLuceneIndexSegmentInfo:info];
  jdouble delRatio = (info->docCount_ <= 0 ? 0.0f : ((jdouble) delCount / (jdouble) info->docCount_));
  JreAssert((delRatio <= 1.0), (@"org/apache/lucene/index/TieredMergePolicy.java:636 condition failed: assert delRatio <= 1.0;"));
  return JreFpToLong((byteSize * (1.0 - delRatio)));
}

jlong OrgApacheLuceneIndexTieredMergePolicy_floorSizeWithLong_(OrgApacheLuceneIndexTieredMergePolicy *self, jlong bytes) {
  return JavaLangMath_maxWithLong_withLong_(self->floorSegmentBytes_, bytes);
}

jboolean OrgApacheLuceneIndexTieredMergePolicy_verbose(OrgApacheLuceneIndexTieredMergePolicy *self) {
  OrgApacheLuceneIndexIndexWriter *w = [((OrgApacheLuceneUtilSetOnce *) nil_chk(self->writer_)) get];
  return w != nil && [w verbose];
}

void OrgApacheLuceneIndexTieredMergePolicy_messageWithNSString_(OrgApacheLuceneIndexTieredMergePolicy *self, NSString *message) {
  if (OrgApacheLuceneIndexTieredMergePolicy_verbose(self)) {
    [((OrgApacheLuceneIndexIndexWriter *) nil_chk([((OrgApacheLuceneUtilSetOnce *) nil_chk(self->writer_)) get])) messageWithNSString:JreStrcat("$$", @"TMP: ", message)];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexTieredMergePolicy)

@implementation OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending

- (instancetype)initWithOrgApacheLuceneIndexTieredMergePolicy:(OrgApacheLuceneIndexTieredMergePolicy *)outer$ {
  OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending_initWithOrgApacheLuceneIndexTieredMergePolicy_(self, outer$);
  return self;
}

- (jint)compareWithId:(OrgApacheLuceneIndexSegmentInfo *)o1
               withId:(OrgApacheLuceneIndexSegmentInfo *)o2 {
  @try {
    jlong sz1 = OrgApacheLuceneIndexTieredMergePolicy_sizeWithOrgApacheLuceneIndexSegmentInfo_(this$0_, o1);
    jlong sz2 = OrgApacheLuceneIndexTieredMergePolicy_sizeWithOrgApacheLuceneIndexSegmentInfo_(this$0_, o2);
    if (sz1 > sz2) {
      return -1;
    }
    else if (sz2 > sz1) {
      return 1;
    }
    else {
      return [((NSString *) nil_chk(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(o1))->name_)) compareToWithId:((OrgApacheLuceneIndexSegmentInfo *) nil_chk(o2))->name_];
    }
  }
  @catch (JavaIoIOException *ioe) {
    @throw create_JavaLangRuntimeException_initWithNSException_(ioe);
  }
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexTieredMergePolicy:);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneIndexTieredMergePolicy;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "compare", "LOrgApacheLuceneIndexSegmentInfo;LOrgApacheLuceneIndexSegmentInfo;", "LOrgApacheLuceneIndexTieredMergePolicy;", "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/index/SegmentInfo;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending = { "SegmentByteSizeDescending", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x2, 2, 1, 2, -1, -1, 3, -1 };
  return &_OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending;
}

@end

void OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending_initWithOrgApacheLuceneIndexTieredMergePolicy_(OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending *self, OrgApacheLuceneIndexTieredMergePolicy *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending *new_OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending_initWithOrgApacheLuceneIndexTieredMergePolicy_(OrgApacheLuceneIndexTieredMergePolicy *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending, initWithOrgApacheLuceneIndexTieredMergePolicy_, outer$)
}

OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending *create_OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending_initWithOrgApacheLuceneIndexTieredMergePolicy_(OrgApacheLuceneIndexTieredMergePolicy *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending, initWithOrgApacheLuceneIndexTieredMergePolicy_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexTieredMergePolicy_SegmentByteSizeDescending)

@implementation OrgApacheLuceneIndexTieredMergePolicy_MergeScore

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexTieredMergePolicy_MergeScore_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jdouble)getScore {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getExplanation {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x400, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getScore);
  methods[2].selector = @selector(getExplanation);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexTieredMergePolicy;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexTieredMergePolicy_MergeScore = { "MergeScore", "org.apache.lucene.index", ptrTable, methods, NULL, 7, 0x40c, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexTieredMergePolicy_MergeScore;
}

@end

void OrgApacheLuceneIndexTieredMergePolicy_MergeScore_init(OrgApacheLuceneIndexTieredMergePolicy_MergeScore *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexTieredMergePolicy_MergeScore)

@implementation OrgApacheLuceneIndexTieredMergePolicy_1

- (instancetype)initWithDouble:(jdouble)capture$0
                    withDouble:(jdouble)capture$1
                    withDouble:(jdouble)capture$2 {
  OrgApacheLuceneIndexTieredMergePolicy_1_initWithDouble_withDouble_withDouble_(self, capture$0, capture$1, capture$2);
  return self;
}

- (jdouble)getScore {
  return val$finalMergeScore_;
}

- (NSString *)getExplanation {
  return JreStrcat("$$$$", @"skew=", NSString_java_formatWithNSString_withNSObjectArray_(@"%.3f", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(val$skew_) } count:1 type:NSObject_class_()]), @" nonDelRatio=", NSString_java_formatWithNSString_withNSObjectArray_(@"%.3f", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(val$nonDelRatio_) } count:1 type:NSObject_class_()]));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDouble:withDouble:withDouble:);
  methods[1].selector = @selector(getScore);
  methods[2].selector = @selector(getExplanation);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$finalMergeScore_", "D", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$skew_", "D", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$nonDelRatio_", "D", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexTieredMergePolicy;", "scoreWithJavaUtilList:withBoolean:withLong:" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexTieredMergePolicy_1 = { "", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x8018, 3, 3, 0, -1, 1, -1, -1 };
  return &_OrgApacheLuceneIndexTieredMergePolicy_1;
}

@end

void OrgApacheLuceneIndexTieredMergePolicy_1_initWithDouble_withDouble_withDouble_(OrgApacheLuceneIndexTieredMergePolicy_1 *self, jdouble capture$0, jdouble capture$1, jdouble capture$2) {
  self->val$finalMergeScore_ = capture$0;
  self->val$skew_ = capture$1;
  self->val$nonDelRatio_ = capture$2;
  OrgApacheLuceneIndexTieredMergePolicy_MergeScore_init(self);
}

OrgApacheLuceneIndexTieredMergePolicy_1 *new_OrgApacheLuceneIndexTieredMergePolicy_1_initWithDouble_withDouble_withDouble_(jdouble capture$0, jdouble capture$1, jdouble capture$2) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexTieredMergePolicy_1, initWithDouble_withDouble_withDouble_, capture$0, capture$1, capture$2)
}

OrgApacheLuceneIndexTieredMergePolicy_1 *create_OrgApacheLuceneIndexTieredMergePolicy_1_initWithDouble_withDouble_withDouble_(jdouble capture$0, jdouble capture$1, jdouble capture$2) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexTieredMergePolicy_1, initWithDouble_withDouble_withDouble_, capture$0, capture$1, capture$2)
}
