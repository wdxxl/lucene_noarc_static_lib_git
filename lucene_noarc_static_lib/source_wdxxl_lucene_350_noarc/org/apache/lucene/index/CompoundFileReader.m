//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/index/CompoundFileReader.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/EOFException.h"
#include "java/io/FileNotFoundException.h"
#include "java/io/IOException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/HashMap.h"
#include "java/util/Set.h"
#include "org/apache/lucene/index/CompoundFileReader.h"
#include "org/apache/lucene/index/CompoundFileWriter.h"
#include "org/apache/lucene/index/CorruptIndexException.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/store/BufferedIndexInput.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/store/Lock.h"

@interface OrgApacheLuceneIndexCompoundFileReader () {
 @public
  jint readBufferSize_;
  OrgApacheLuceneStoreDirectory *directory_;
  NSString *fileName_;
  OrgApacheLuceneStoreIndexInput *stream_;
  JavaUtilHashMap *entries_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCompoundFileReader, directory_, OrgApacheLuceneStoreDirectory *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCompoundFileReader, fileName_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCompoundFileReader, stream_, OrgApacheLuceneStoreIndexInput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCompoundFileReader, entries_, JavaUtilHashMap *)

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneIndexCompoundFileReader__Annotations$0();

@interface OrgApacheLuceneIndexCompoundFileReader_FileEntry : NSObject {
 @public
  jlong offset_;
  jlong length_;
}

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexCompoundFileReader_FileEntry)

__attribute__((unused)) static void OrgApacheLuceneIndexCompoundFileReader_FileEntry_init(OrgApacheLuceneIndexCompoundFileReader_FileEntry *self);

__attribute__((unused)) static OrgApacheLuceneIndexCompoundFileReader_FileEntry *new_OrgApacheLuceneIndexCompoundFileReader_FileEntry_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexCompoundFileReader_FileEntry *create_OrgApacheLuceneIndexCompoundFileReader_FileEntry_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexCompoundFileReader_FileEntry)

@implementation OrgApacheLuceneIndexCompoundFileReader

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                                         withNSString:(NSString *)name {
  OrgApacheLuceneIndexCompoundFileReader_initWithOrgApacheLuceneStoreDirectory_withNSString_(self, dir, name);
  return self;
}

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                                         withNSString:(NSString *)name
                                              withInt:(jint)readBufferSize {
  OrgApacheLuceneIndexCompoundFileReader_initWithOrgApacheLuceneStoreDirectory_withNSString_withInt_(self, dir, name, readBufferSize);
  return self;
}

- (OrgApacheLuceneStoreDirectory *)getDirectory {
  return directory_;
}

- (NSString *)getName {
  return fileName_;
}

- (void)close {
  @synchronized(self) {
    if (stream_ == nil) @throw create_JavaIoIOException_initWithNSString_(@"Already closed");
    [((JavaUtilHashMap *) nil_chk(entries_)) clear];
    [((OrgApacheLuceneStoreIndexInput *) nil_chk(stream_)) close];
    JreStrongAssign(&stream_, nil);
  }
}

- (OrgApacheLuceneStoreIndexInput *)openInputWithNSString:(NSString *)id_ {
  @synchronized(self) {
    return [self openInputWithNSString:id_ withInt:readBufferSize_];
  }
}

- (OrgApacheLuceneStoreIndexInput *)openInputWithNSString:(NSString *)id_
                                                  withInt:(jint)readBufferSize {
  @synchronized(self) {
    if (stream_ == nil) @throw create_JavaIoIOException_initWithNSString_(@"Stream closed");
    id_ = OrgApacheLuceneIndexIndexFileNames_stripSegmentNameWithNSString_(id_);
    OrgApacheLuceneIndexCompoundFileReader_FileEntry *entry_ = [((JavaUtilHashMap *) nil_chk(entries_)) getWithId:id_];
    if (entry_ == nil) {
      @throw create_JavaIoIOException_initWithNSString_(JreStrcat("$$$$$@C", @"No sub-file with id ", id_, @" found (fileName=", fileName_, @" files: ", [((JavaUtilHashMap *) nil_chk(entries_)) keySet], ')'));
    }
    return create_OrgApacheLuceneIndexCompoundFileReader_CSIndexInput_initWithOrgApacheLuceneStoreIndexInput_withLong_withLong_withInt_(stream_, entry_->offset_, entry_->length_, readBufferSize);
  }
}

- (IOSObjectArray *)listAll {
  IOSObjectArray *res = [((id<JavaUtilSet>) nil_chk([((JavaUtilHashMap *) nil_chk(entries_)) keySet])) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[((JavaUtilHashMap *) nil_chk(entries_)) size] type:NSString_class_()]];
  NSString *seg = [((NSString *) nil_chk(fileName_)) java_substring:0 endIndex:[fileName_ java_indexOf:'.']];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(res))->size_; i++) {
    IOSObjectArray_Set(res, i, JreStrcat("$$", seg, IOSObjectArray_Get(res, i)));
  }
  return res;
}

- (jboolean)fileExistsWithNSString:(NSString *)name {
  return [((JavaUtilHashMap *) nil_chk(entries_)) containsKeyWithId:OrgApacheLuceneIndexIndexFileNames_stripSegmentNameWithNSString_(name)];
}

- (jlong)fileModifiedWithNSString:(NSString *)name {
  return [((OrgApacheLuceneStoreDirectory *) nil_chk(directory_)) fileModifiedWithNSString:fileName_];
}

- (void)touchFileWithNSString:(NSString *)name {
  [((OrgApacheLuceneStoreDirectory *) nil_chk(directory_)) touchFileWithNSString:fileName_];
}

- (void)deleteFileWithNSString:(NSString *)name {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)renameFileWithNSString:(NSString *)from
                  withNSString:(NSString *)to {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jlong)fileLengthWithNSString:(NSString *)name {
  OrgApacheLuceneIndexCompoundFileReader_FileEntry *e = [((JavaUtilHashMap *) nil_chk(entries_)) getWithId:OrgApacheLuceneIndexIndexFileNames_stripSegmentNameWithNSString_(name)];
  if (e == nil) @throw create_JavaIoFileNotFoundException_initWithNSString_(name);
  return e->length_;
}

- (OrgApacheLuceneStoreIndexOutput *)createOutputWithNSString:(NSString *)name {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (OrgApacheLuceneStoreLock *)makeLockWithNSString:(NSString *)name {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)dealloc {
  RELEASE_(directory_);
  RELEASE_(fileName_);
  RELEASE_(stream_);
  RELEASE_(entries_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreDirectory;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x21, -1, -1, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexInput;", 0x21, 3, 4, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexInput;", 0x21, 3, 5, 1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 4, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 7, 4, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 4, 1, -1, 9, -1 },
    { NULL, "V", 0x1, 10, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 13, 4, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexOutput;", 0x1, 14, 4, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreLock;", 0x1, 15, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneStoreDirectory:withNSString:);
  methods[1].selector = @selector(initWithOrgApacheLuceneStoreDirectory:withNSString:withInt:);
  methods[2].selector = @selector(getDirectory);
  methods[3].selector = @selector(getName);
  methods[4].selector = @selector(close);
  methods[5].selector = @selector(openInputWithNSString:);
  methods[6].selector = @selector(openInputWithNSString:withInt:);
  methods[7].selector = @selector(listAll);
  methods[8].selector = @selector(fileExistsWithNSString:);
  methods[9].selector = @selector(fileModifiedWithNSString:);
  methods[10].selector = @selector(touchFileWithNSString:);
  methods[11].selector = @selector(deleteFileWithNSString:);
  methods[12].selector = @selector(renameFileWithNSString:withNSString:);
  methods[13].selector = @selector(fileLengthWithNSString:);
  methods[14].selector = @selector(createOutputWithNSString:);
  methods[15].selector = @selector(makeLockWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "readBufferSize_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "directory_", "LOrgApacheLuceneStoreDirectory;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fileName_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "stream_", "LOrgApacheLuceneStoreIndexInput;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "entries_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x2, -1, -1, 16, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneStoreDirectory;LNSString;", "LJavaIoIOException;", "LOrgApacheLuceneStoreDirectory;LNSString;I", "openInput", "LNSString;", "LNSString;I", "fileExists", "fileModified", "touchFile", (void *)&OrgApacheLuceneIndexCompoundFileReader__Annotations$0, "deleteFile", "renameFile", "LNSString;LNSString;", "fileLength", "createOutput", "makeLock", "Ljava/util/HashMap<Ljava/lang/String;Lorg/apache/lucene/index/CompoundFileReader$FileEntry;>;", "LOrgApacheLuceneIndexCompoundFileReader_FileEntry;LOrgApacheLuceneIndexCompoundFileReader_CSIndexInput;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexCompoundFileReader = { "CompoundFileReader", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x0, 16, 5, -1, 17, -1, -1, -1 };
  return &_OrgApacheLuceneIndexCompoundFileReader;
}

@end

void OrgApacheLuceneIndexCompoundFileReader_initWithOrgApacheLuceneStoreDirectory_withNSString_(OrgApacheLuceneIndexCompoundFileReader *self, OrgApacheLuceneStoreDirectory *dir, NSString *name) {
  OrgApacheLuceneIndexCompoundFileReader_initWithOrgApacheLuceneStoreDirectory_withNSString_withInt_(self, dir, name, OrgApacheLuceneStoreBufferedIndexInput_BUFFER_SIZE);
}

OrgApacheLuceneIndexCompoundFileReader *new_OrgApacheLuceneIndexCompoundFileReader_initWithOrgApacheLuceneStoreDirectory_withNSString_(OrgApacheLuceneStoreDirectory *dir, NSString *name) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexCompoundFileReader, initWithOrgApacheLuceneStoreDirectory_withNSString_, dir, name)
}

OrgApacheLuceneIndexCompoundFileReader *create_OrgApacheLuceneIndexCompoundFileReader_initWithOrgApacheLuceneStoreDirectory_withNSString_(OrgApacheLuceneStoreDirectory *dir, NSString *name) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexCompoundFileReader, initWithOrgApacheLuceneStoreDirectory_withNSString_, dir, name)
}

void OrgApacheLuceneIndexCompoundFileReader_initWithOrgApacheLuceneStoreDirectory_withNSString_withInt_(OrgApacheLuceneIndexCompoundFileReader *self, OrgApacheLuceneStoreDirectory *dir, NSString *name, jint readBufferSize) {
  OrgApacheLuceneStoreDirectory_init(self);
  JreStrongAssignAndConsume(&self->entries_, new_JavaUtilHashMap_init());
  JreAssert((!([dir isKindOfClass:[OrgApacheLuceneIndexCompoundFileReader class]])), (JreStrcat("$$", @"compound file inside of compound file: ", name)));
  JreStrongAssign(&self->directory_, dir);
  JreStrongAssign(&self->fileName_, name);
  self->readBufferSize_ = readBufferSize;
  jboolean success = false;
  @try {
    JreStrongAssign(&self->stream_, [((OrgApacheLuceneStoreDirectory *) nil_chk(dir)) openInputWithNSString:name withInt:readBufferSize]);
    jint firstInt = [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->stream_)) readVInt];
    jint count;
    jboolean stripSegmentName;
    if (firstInt < OrgApacheLuceneIndexCompoundFileWriter_FORMAT_PRE_VERSION) {
      if (firstInt < OrgApacheLuceneIndexCompoundFileWriter_FORMAT_CURRENT) {
        @throw create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_(JreStrcat("$I$I$@C", @"Incompatible format version: ", firstInt, @" expected ", OrgApacheLuceneIndexCompoundFileWriter_FORMAT_CURRENT, @" (resource: ", self->stream_, ')'));
      }
      count = [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->stream_)) readVInt];
      stripSegmentName = false;
    }
    else {
      count = firstInt;
      stripSegmentName = true;
    }
    OrgApacheLuceneIndexCompoundFileReader_FileEntry *entry_ = nil;
    for (jint i = 0; i < count; i++) {
      jlong offset = [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->stream_)) readLong];
      NSString *id_ = [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->stream_)) readString];
      if (stripSegmentName) {
        id_ = OrgApacheLuceneIndexIndexFileNames_stripSegmentNameWithNSString_(id_);
      }
      if (entry_ != nil) {
        entry_->length_ = offset - entry_->offset_;
      }
      entry_ = create_OrgApacheLuceneIndexCompoundFileReader_FileEntry_init();
      entry_->offset_ = offset;
      [((JavaUtilHashMap *) nil_chk(self->entries_)) putWithId:id_ withId:entry_];
    }
    if (entry_ != nil) {
      entry_->length_ = [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->stream_)) length] - entry_->offset_;
    }
    success = true;
  }
  @finally {
    if (!success && (self->stream_ != nil)) {
      @try {
        [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->stream_)) close];
      }
      @catch (JavaIoIOException *e) {
      }
    }
  }
}

OrgApacheLuceneIndexCompoundFileReader *new_OrgApacheLuceneIndexCompoundFileReader_initWithOrgApacheLuceneStoreDirectory_withNSString_withInt_(OrgApacheLuceneStoreDirectory *dir, NSString *name, jint readBufferSize) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexCompoundFileReader, initWithOrgApacheLuceneStoreDirectory_withNSString_withInt_, dir, name, readBufferSize)
}

OrgApacheLuceneIndexCompoundFileReader *create_OrgApacheLuceneIndexCompoundFileReader_initWithOrgApacheLuceneStoreDirectory_withNSString_withInt_(OrgApacheLuceneStoreDirectory *dir, NSString *name, jint readBufferSize) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexCompoundFileReader, initWithOrgApacheLuceneStoreDirectory_withNSString_withInt_, dir, name, readBufferSize)
}

IOSObjectArray *OrgApacheLuceneIndexCompoundFileReader__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexCompoundFileReader)

@implementation OrgApacheLuceneIndexCompoundFileReader_FileEntry

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexCompoundFileReader_FileEntry_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "offset_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "length_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexCompoundFileReader;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexCompoundFileReader_FileEntry = { "FileEntry", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x1a, 1, 2, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexCompoundFileReader_FileEntry;
}

@end

void OrgApacheLuceneIndexCompoundFileReader_FileEntry_init(OrgApacheLuceneIndexCompoundFileReader_FileEntry *self) {
  NSObject_init(self);
}

OrgApacheLuceneIndexCompoundFileReader_FileEntry *new_OrgApacheLuceneIndexCompoundFileReader_FileEntry_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexCompoundFileReader_FileEntry, init)
}

OrgApacheLuceneIndexCompoundFileReader_FileEntry *create_OrgApacheLuceneIndexCompoundFileReader_FileEntry_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexCompoundFileReader_FileEntry, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexCompoundFileReader_FileEntry)

@implementation OrgApacheLuceneIndexCompoundFileReader_CSIndexInput

- (instancetype)initWithOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)base
                                              withLong:(jlong)fileOffset
                                              withLong:(jlong)length {
  OrgApacheLuceneIndexCompoundFileReader_CSIndexInput_initWithOrgApacheLuceneStoreIndexInput_withLong_withLong_(self, base, fileOffset, length);
  return self;
}

- (instancetype)initWithOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)base
                                              withLong:(jlong)fileOffset
                                              withLong:(jlong)length
                                               withInt:(jint)readBufferSize {
  OrgApacheLuceneIndexCompoundFileReader_CSIndexInput_initWithOrgApacheLuceneStoreIndexInput_withLong_withLong_withInt_(self, base, fileOffset, length, readBufferSize);
  return self;
}

- (id)java_clone {
  OrgApacheLuceneIndexCompoundFileReader_CSIndexInput *clone = (OrgApacheLuceneIndexCompoundFileReader_CSIndexInput *) cast_chk([super java_clone], [OrgApacheLuceneIndexCompoundFileReader_CSIndexInput class]);
  JreStrongAssign(&((OrgApacheLuceneIndexCompoundFileReader_CSIndexInput *) nil_chk(clone))->base_, (OrgApacheLuceneStoreIndexInput *) cast_chk([((OrgApacheLuceneStoreIndexInput *) nil_chk(base_)) java_clone], [OrgApacheLuceneStoreIndexInput class]));
  clone->fileOffset_ = fileOffset_;
  clone->length_ = length_;
  return clone;
}

- (void)readInternalWithByteArray:(IOSByteArray *)b
                          withInt:(jint)offset
                          withInt:(jint)len {
  jlong start = [self getFilePointer];
  if (start + len > length_) @throw create_JavaIoEOFException_initWithNSString_(JreStrcat("$@C", @"read past EOF (resource: ", base_, ')'));
  [((OrgApacheLuceneStoreIndexInput *) nil_chk(base_)) seekWithLong:fileOffset_ + start];
  [((OrgApacheLuceneStoreIndexInput *) nil_chk(base_)) readBytesWithByteArray:b withInt:offset withInt:len withBoolean:false];
}

- (void)seekInternalWithLong:(jlong)pos {
}

- (void)close {
  [((OrgApacheLuceneStoreIndexInput *) nil_chk(base_)) close];
}

- (jlong)length {
  return length_;
}

- (void)copyBytesWithOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)outArg
                                            withLong:(jlong)numBytes {
  numBytes -= [self flushBufferWithOrgApacheLuceneStoreIndexOutput:outArg withLong:numBytes];
  if (numBytes > 0) {
    jlong start = [self getFilePointer];
    if (start + numBytes > length_) {
      @throw create_JavaIoEOFException_initWithNSString_(JreStrcat("$@C", @"read past EOF (resource: ", base_, ')'));
    }
    [((OrgApacheLuceneStoreIndexInput *) nil_chk(base_)) seekWithLong:fileOffset_ + start];
    [((OrgApacheLuceneStoreIndexInput *) nil_chk(base_)) copyBytesWithOrgApacheLuceneStoreIndexOutput:outArg withLong:numBytes];
  }
}

- (void)dealloc {
  RELEASE_(base_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x4, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneStoreIndexInput:withLong:withLong:);
  methods[1].selector = @selector(initWithOrgApacheLuceneStoreIndexInput:withLong:withLong:withInt:);
  methods[2].selector = @selector(java_clone);
  methods[3].selector = @selector(readInternalWithByteArray:withInt:withInt:);
  methods[4].selector = @selector(seekInternalWithLong:);
  methods[5].selector = @selector(close);
  methods[6].selector = @selector(length);
  methods[7].selector = @selector(copyBytesWithOrgApacheLuceneStoreIndexOutput:withLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "base_", "LOrgApacheLuceneStoreIndexInput;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "fileOffset_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "length_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneStoreIndexInput;JJ", "LOrgApacheLuceneStoreIndexInput;JJI", "clone", "readInternal", "[BII", "LJavaIoIOException;", "seekInternal", "J", "copyBytes", "LOrgApacheLuceneStoreIndexOutput;J", "LOrgApacheLuceneIndexCompoundFileReader;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexCompoundFileReader_CSIndexInput = { "CSIndexInput", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x18, 8, 3, 10, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexCompoundFileReader_CSIndexInput;
}

@end

void OrgApacheLuceneIndexCompoundFileReader_CSIndexInput_initWithOrgApacheLuceneStoreIndexInput_withLong_withLong_(OrgApacheLuceneIndexCompoundFileReader_CSIndexInput *self, OrgApacheLuceneStoreIndexInput *base, jlong fileOffset, jlong length) {
  OrgApacheLuceneIndexCompoundFileReader_CSIndexInput_initWithOrgApacheLuceneStoreIndexInput_withLong_withLong_withInt_(self, base, fileOffset, length, OrgApacheLuceneStoreBufferedIndexInput_BUFFER_SIZE);
}

OrgApacheLuceneIndexCompoundFileReader_CSIndexInput *new_OrgApacheLuceneIndexCompoundFileReader_CSIndexInput_initWithOrgApacheLuceneStoreIndexInput_withLong_withLong_(OrgApacheLuceneStoreIndexInput *base, jlong fileOffset, jlong length) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexCompoundFileReader_CSIndexInput, initWithOrgApacheLuceneStoreIndexInput_withLong_withLong_, base, fileOffset, length)
}

OrgApacheLuceneIndexCompoundFileReader_CSIndexInput *create_OrgApacheLuceneIndexCompoundFileReader_CSIndexInput_initWithOrgApacheLuceneStoreIndexInput_withLong_withLong_(OrgApacheLuceneStoreIndexInput *base, jlong fileOffset, jlong length) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexCompoundFileReader_CSIndexInput, initWithOrgApacheLuceneStoreIndexInput_withLong_withLong_, base, fileOffset, length)
}

void OrgApacheLuceneIndexCompoundFileReader_CSIndexInput_initWithOrgApacheLuceneStoreIndexInput_withLong_withLong_withInt_(OrgApacheLuceneIndexCompoundFileReader_CSIndexInput *self, OrgApacheLuceneStoreIndexInput *base, jlong fileOffset, jlong length, jint readBufferSize) {
  OrgApacheLuceneStoreBufferedIndexInput_initWithInt_(self, readBufferSize);
  JreStrongAssign(&self->base_, (OrgApacheLuceneStoreIndexInput *) cast_chk([((OrgApacheLuceneStoreIndexInput *) nil_chk(base)) java_clone], [OrgApacheLuceneStoreIndexInput class]));
  self->fileOffset_ = fileOffset;
  self->length_ = length;
}

OrgApacheLuceneIndexCompoundFileReader_CSIndexInput *new_OrgApacheLuceneIndexCompoundFileReader_CSIndexInput_initWithOrgApacheLuceneStoreIndexInput_withLong_withLong_withInt_(OrgApacheLuceneStoreIndexInput *base, jlong fileOffset, jlong length, jint readBufferSize) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexCompoundFileReader_CSIndexInput, initWithOrgApacheLuceneStoreIndexInput_withLong_withLong_withInt_, base, fileOffset, length, readBufferSize)
}

OrgApacheLuceneIndexCompoundFileReader_CSIndexInput *create_OrgApacheLuceneIndexCompoundFileReader_CSIndexInput_initWithOrgApacheLuceneStoreIndexInput_withLong_withLong_withInt_(OrgApacheLuceneStoreIndexInput *base, jlong fileOffset, jlong length, jint readBufferSize) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexCompoundFileReader_CSIndexInput, initWithOrgApacheLuceneStoreIndexInput_withLong_withLong_withInt_, base, fileOffset, length, readBufferSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexCompoundFileReader_CSIndexInput)
