//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/index/DefaultSkipListReader.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/util/Arrays.h"
#include "org/apache/lucene/index/DefaultSkipListReader.h"
#include "org/apache/lucene/index/MultiLevelSkipListReader.h"
#include "org/apache/lucene/store/IndexInput.h"

@interface OrgApacheLuceneIndexDefaultSkipListReader () {
 @public
  jboolean currentFieldStoresPayloads_;
  IOSLongArray *freqPointer_;
  IOSLongArray *proxPointer_;
  IOSIntArray *payloadLength_;
  jlong lastFreqPointer_;
  jlong lastProxPointer_;
  jint lastPayloadLength_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexDefaultSkipListReader, freqPointer_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexDefaultSkipListReader, proxPointer_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexDefaultSkipListReader, payloadLength_, IOSIntArray *)

@implementation OrgApacheLuceneIndexDefaultSkipListReader

- (instancetype)initWithOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)skipStream
                                               withInt:(jint)maxSkipLevels
                                               withInt:(jint)skipInterval {
  OrgApacheLuceneIndexDefaultSkipListReader_initWithOrgApacheLuceneStoreIndexInput_withInt_withInt_(self, skipStream, maxSkipLevels, skipInterval);
  return self;
}

- (void)init__WithLong:(jlong)skipPointer
              withLong:(jlong)freqBasePointer
              withLong:(jlong)proxBasePointer
               withInt:(jint)df
           withBoolean:(jboolean)storesPayloads {
  [super init__WithLong:skipPointer withInt:df];
  self->currentFieldStoresPayloads_ = storesPayloads;
  lastFreqPointer_ = freqBasePointer;
  lastProxPointer_ = proxBasePointer;
  JavaUtilArrays_fillWithLongArray_withLong_(freqPointer_, freqBasePointer);
  JavaUtilArrays_fillWithLongArray_withLong_(proxPointer_, proxBasePointer);
  JavaUtilArrays_fillWithIntArray_withInt_(payloadLength_, 0);
}

- (jlong)getFreqPointer {
  return lastFreqPointer_;
}

- (jlong)getProxPointer {
  return lastProxPointer_;
}

- (jint)getPayloadLength {
  return lastPayloadLength_;
}

- (void)seekChildWithInt:(jint)level {
  [super seekChildWithInt:level];
  *IOSLongArray_GetRef(nil_chk(freqPointer_), level) = lastFreqPointer_;
  *IOSLongArray_GetRef(nil_chk(proxPointer_), level) = lastProxPointer_;
  *IOSIntArray_GetRef(nil_chk(payloadLength_), level) = lastPayloadLength_;
}

- (void)setLastSkipDataWithInt:(jint)level {
  [super setLastSkipDataWithInt:level];
  lastFreqPointer_ = IOSLongArray_Get(nil_chk(freqPointer_), level);
  lastProxPointer_ = IOSLongArray_Get(nil_chk(proxPointer_), level);
  lastPayloadLength_ = IOSIntArray_Get(nil_chk(payloadLength_), level);
}

- (jint)readSkipDataWithInt:(jint)level
withOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)skipStream {
  jint delta;
  if (currentFieldStoresPayloads_) {
    delta = [((OrgApacheLuceneStoreIndexInput *) nil_chk(skipStream)) readVInt];
    if ((delta & 1) != 0) {
      *IOSIntArray_GetRef(nil_chk(payloadLength_), level) = [skipStream readVInt];
    }
    JreURShiftAssignInt(&delta, 1);
  }
  else {
    delta = [((OrgApacheLuceneStoreIndexInput *) nil_chk(skipStream)) readVInt];
  }
  *IOSLongArray_GetRef(nil_chk(freqPointer_), level) += [skipStream readVInt];
  *IOSLongArray_GetRef(nil_chk(proxPointer_), level) += [skipStream readVInt];
  return delta;
}

- (void)dealloc {
  RELEASE_(freqPointer_);
  RELEASE_(proxPointer_);
  RELEASE_(payloadLength_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x4, 6, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 7, 8, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneStoreIndexInput:withInt:withInt:);
  methods[1].selector = @selector(init__WithLong:withLong:withLong:withInt:withBoolean:);
  methods[2].selector = @selector(getFreqPointer);
  methods[3].selector = @selector(getProxPointer);
  methods[4].selector = @selector(getPayloadLength);
  methods[5].selector = @selector(seekChildWithInt:);
  methods[6].selector = @selector(setLastSkipDataWithInt:);
  methods[7].selector = @selector(readSkipDataWithInt:withOrgApacheLuceneStoreIndexInput:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "currentFieldStoresPayloads_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "freqPointer_", "[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "proxPointer_", "[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "payloadLength_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "lastFreqPointer_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "lastProxPointer_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "lastPayloadLength_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneStoreIndexInput;II", "init", "JJJIZ", "seekChild", "I", "LJavaIoIOException;", "setLastSkipData", "readSkipData", "ILOrgApacheLuceneStoreIndexInput;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexDefaultSkipListReader = { "DefaultSkipListReader", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x0, 8, 7, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexDefaultSkipListReader;
}

@end

void OrgApacheLuceneIndexDefaultSkipListReader_initWithOrgApacheLuceneStoreIndexInput_withInt_withInt_(OrgApacheLuceneIndexDefaultSkipListReader *self, OrgApacheLuceneStoreIndexInput *skipStream, jint maxSkipLevels, jint skipInterval) {
  OrgApacheLuceneIndexMultiLevelSkipListReader_initWithOrgApacheLuceneStoreIndexInput_withInt_withInt_(self, skipStream, maxSkipLevels, skipInterval);
  JreStrongAssignAndConsume(&self->freqPointer_, [IOSLongArray newArrayWithLength:maxSkipLevels]);
  JreStrongAssignAndConsume(&self->proxPointer_, [IOSLongArray newArrayWithLength:maxSkipLevels]);
  JreStrongAssignAndConsume(&self->payloadLength_, [IOSIntArray newArrayWithLength:maxSkipLevels]);
}

OrgApacheLuceneIndexDefaultSkipListReader *new_OrgApacheLuceneIndexDefaultSkipListReader_initWithOrgApacheLuceneStoreIndexInput_withInt_withInt_(OrgApacheLuceneStoreIndexInput *skipStream, jint maxSkipLevels, jint skipInterval) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexDefaultSkipListReader, initWithOrgApacheLuceneStoreIndexInput_withInt_withInt_, skipStream, maxSkipLevels, skipInterval)
}

OrgApacheLuceneIndexDefaultSkipListReader *create_OrgApacheLuceneIndexDefaultSkipListReader_initWithOrgApacheLuceneStoreIndexInput_withInt_withInt_(OrgApacheLuceneStoreIndexInput *skipStream, jint maxSkipLevels, jint skipInterval) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexDefaultSkipListReader, initWithOrgApacheLuceneStoreIndexInput_withInt_withInt_, skipStream, maxSkipLevels, skipInterval)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexDefaultSkipListReader)
