//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/index/DocInverterPerThread.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/OffsetAttribute.h"
#include "org/apache/lucene/index/DocFieldConsumerPerField.h"
#include "org/apache/lucene/index/DocFieldConsumerPerThread.h"
#include "org/apache/lucene/index/DocFieldProcessorPerThread.h"
#include "org/apache/lucene/index/DocInverter.h"
#include "org/apache/lucene/index/DocInverterPerField.h"
#include "org/apache/lucene/index/DocInverterPerThread.h"
#include "org/apache/lucene/index/DocumentsWriter.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FieldInvertState.h"
#include "org/apache/lucene/index/InvertedDocConsumer.h"
#include "org/apache/lucene/index/InvertedDocConsumerPerThread.h"
#include "org/apache/lucene/index/InvertedDocEndConsumer.h"
#include "org/apache/lucene/index/InvertedDocEndConsumerPerThread.h"
#include "org/apache/lucene/index/ReusableStringReader.h"
#include "org/apache/lucene/util/AttributeSource.h"

@interface OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource_init(OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource *self);

__attribute__((unused)) static OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource *new_OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource *create_OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource_init();

@implementation OrgApacheLuceneIndexDocInverterPerThread

- (instancetype)initWithOrgApacheLuceneIndexDocFieldProcessorPerThread:(OrgApacheLuceneIndexDocFieldProcessorPerThread *)docFieldProcessorPerThread
                                   withOrgApacheLuceneIndexDocInverter:(OrgApacheLuceneIndexDocInverter *)docInverter {
  OrgApacheLuceneIndexDocInverterPerThread_initWithOrgApacheLuceneIndexDocFieldProcessorPerThread_withOrgApacheLuceneIndexDocInverter_(self, docFieldProcessorPerThread, docInverter);
  return self;
}

- (void)startDocument {
  [((OrgApacheLuceneIndexInvertedDocConsumerPerThread *) nil_chk(consumer_)) startDocument];
  [((OrgApacheLuceneIndexInvertedDocEndConsumerPerThread *) nil_chk(endConsumer_)) startDocument];
}

- (OrgApacheLuceneIndexDocumentsWriter_DocWriter *)finishDocument {
  [((OrgApacheLuceneIndexInvertedDocEndConsumerPerThread *) nil_chk(endConsumer_)) finishDocument];
  return [((OrgApacheLuceneIndexInvertedDocConsumerPerThread *) nil_chk(consumer_)) finishDocument];
}

- (void)abort {
  @try {
    [((OrgApacheLuceneIndexInvertedDocConsumerPerThread *) nil_chk(consumer_)) abort];
  }
  @finally {
    [((OrgApacheLuceneIndexInvertedDocEndConsumerPerThread *) nil_chk(endConsumer_)) abort];
  }
}

- (OrgApacheLuceneIndexDocFieldConsumerPerField *)addFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fi {
  return create_OrgApacheLuceneIndexDocInverterPerField_initWithOrgApacheLuceneIndexDocInverterPerThread_withOrgApacheLuceneIndexFieldInfo_(self, fi);
}

- (void)dealloc {
  RELEASE_(docInverter_);
  RELEASE_(consumer_);
  RELEASE_(endConsumer_);
  RELEASE_(singleToken_);
  RELEASE_(docState_);
  RELEASE_(fieldState_);
  RELEASE_(stringReader_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexDocumentsWriter_DocWriter;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexDocFieldConsumerPerField;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexDocFieldProcessorPerThread:withOrgApacheLuceneIndexDocInverter:);
  methods[1].selector = @selector(startDocument);
  methods[2].selector = @selector(finishDocument);
  methods[3].selector = @selector(abort);
  methods[4].selector = @selector(addFieldWithOrgApacheLuceneIndexFieldInfo:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "docInverter_", "LOrgApacheLuceneIndexDocInverter;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "consumer_", "LOrgApacheLuceneIndexInvertedDocConsumerPerThread;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "endConsumer_", "LOrgApacheLuceneIndexInvertedDocEndConsumerPerThread;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "singleToken_", "LOrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "docState_", "LOrgApacheLuceneIndexDocumentsWriter_DocState;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "fieldState_", "LOrgApacheLuceneIndexFieldInvertState;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "stringReader_", "LOrgApacheLuceneIndexReusableStringReader;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexDocFieldProcessorPerThread;LOrgApacheLuceneIndexDocInverter;", "LJavaIoIOException;", "addField", "LOrgApacheLuceneIndexFieldInfo;", "LOrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexDocInverterPerThread = { "DocInverterPerThread", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x10, 5, 7, -1, 4, -1, -1, -1 };
  return &_OrgApacheLuceneIndexDocInverterPerThread;
}

@end

void OrgApacheLuceneIndexDocInverterPerThread_initWithOrgApacheLuceneIndexDocFieldProcessorPerThread_withOrgApacheLuceneIndexDocInverter_(OrgApacheLuceneIndexDocInverterPerThread *self, OrgApacheLuceneIndexDocFieldProcessorPerThread *docFieldProcessorPerThread, OrgApacheLuceneIndexDocInverter *docInverter) {
  OrgApacheLuceneIndexDocFieldConsumerPerThread_init(self);
  JreStrongAssignAndConsume(&self->singleToken_, new_OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource_init());
  JreStrongAssignAndConsume(&self->fieldState_, new_OrgApacheLuceneIndexFieldInvertState_init());
  JreStrongAssignAndConsume(&self->stringReader_, new_OrgApacheLuceneIndexReusableStringReader_init());
  JreStrongAssign(&self->docInverter_, docInverter);
  JreStrongAssign(&self->docState_, ((OrgApacheLuceneIndexDocFieldProcessorPerThread *) nil_chk(docFieldProcessorPerThread))->docState_);
  JreStrongAssign(&self->consumer_, [((OrgApacheLuceneIndexInvertedDocConsumer *) nil_chk(((OrgApacheLuceneIndexDocInverter *) nil_chk(docInverter))->consumer_)) addThreadWithOrgApacheLuceneIndexDocInverterPerThread:self]);
  JreStrongAssign(&self->endConsumer_, [((OrgApacheLuceneIndexInvertedDocEndConsumer *) nil_chk(docInverter->endConsumer_)) addThreadWithOrgApacheLuceneIndexDocInverterPerThread:self]);
}

OrgApacheLuceneIndexDocInverterPerThread *new_OrgApacheLuceneIndexDocInverterPerThread_initWithOrgApacheLuceneIndexDocFieldProcessorPerThread_withOrgApacheLuceneIndexDocInverter_(OrgApacheLuceneIndexDocFieldProcessorPerThread *docFieldProcessorPerThread, OrgApacheLuceneIndexDocInverter *docInverter) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexDocInverterPerThread, initWithOrgApacheLuceneIndexDocFieldProcessorPerThread_withOrgApacheLuceneIndexDocInverter_, docFieldProcessorPerThread, docInverter)
}

OrgApacheLuceneIndexDocInverterPerThread *create_OrgApacheLuceneIndexDocInverterPerThread_initWithOrgApacheLuceneIndexDocFieldProcessorPerThread_withOrgApacheLuceneIndexDocInverter_(OrgApacheLuceneIndexDocFieldProcessorPerThread *docFieldProcessorPerThread, OrgApacheLuceneIndexDocInverter *docInverter) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexDocInverterPerThread, initWithOrgApacheLuceneIndexDocFieldProcessorPerThread_withOrgApacheLuceneIndexDocInverter_, docFieldProcessorPerThread, docInverter)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexDocInverterPerThread)

@implementation OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)reinitWithNSString:(NSString *)stringValue
                   withInt:(jint)startOffset
                   withInt:(jint)endOffset {
  [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk([((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAttribute_)) setEmpty])) appendWithNSString:stringValue];
  [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAttribute_)) setOffsetWithInt:startOffset withInt:endOffset];
}

- (void)dealloc {
  RELEASE_(termAttribute_);
  RELEASE_(offsetAttribute_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(reinitWithNSString:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "termAttribute_", "LOrgApacheLuceneAnalysisTokenattributesCharTermAttribute;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "offsetAttribute_", "LOrgApacheLuceneAnalysisTokenattributesOffsetAttribute;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "reinit", "LNSString;II", "LOrgApacheLuceneIndexDocInverterPerThread;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource = { "SingleTokenAttributeSource", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x8, 2, 2, 2, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource;
}

@end

void OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource_init(OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource *self) {
  OrgApacheLuceneUtilAttributeSource_init(self);
  JreStrongAssign(&self->termAttribute_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  JreStrongAssign(&self->offsetAttribute_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_()]);
}

OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource *new_OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource, init)
}

OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource *create_OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexDocInverterPerThread_SingleTokenAttributeSource)
