//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/index/LogDocMergePolicy.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneIndexLogDocMergePolicy")
#ifdef RESTRICT_OrgApacheLuceneIndexLogDocMergePolicy
#define INCLUDE_ALL_OrgApacheLuceneIndexLogDocMergePolicy 0
#else
#define INCLUDE_ALL_OrgApacheLuceneIndexLogDocMergePolicy 1
#endif
#undef RESTRICT_OrgApacheLuceneIndexLogDocMergePolicy

#if !defined (OrgApacheLuceneIndexLogDocMergePolicy_) && (INCLUDE_ALL_OrgApacheLuceneIndexLogDocMergePolicy || defined(INCLUDE_OrgApacheLuceneIndexLogDocMergePolicy))
#define OrgApacheLuceneIndexLogDocMergePolicy_

#define RESTRICT_OrgApacheLuceneIndexLogMergePolicy 1
#define INCLUDE_OrgApacheLuceneIndexLogMergePolicy 1
#include "org/apache/lucene/index/LogMergePolicy.h"

@class OrgApacheLuceneIndexSegmentInfo;

@interface OrgApacheLuceneIndexLogDocMergePolicy : OrgApacheLuceneIndexLogMergePolicy

#pragma mark Public

- (instancetype)init;

- (jint)getMinMergeDocs;

- (void)setMinMergeDocsWithInt:(jint)minMergeDocs;

#pragma mark Protected

- (jlong)sizeWithOrgApacheLuceneIndexSegmentInfo:(OrgApacheLuceneIndexSegmentInfo *)info;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexLogDocMergePolicy)

inline jint OrgApacheLuceneIndexLogDocMergePolicy_get_DEFAULT_MIN_MERGE_DOCS();
#define OrgApacheLuceneIndexLogDocMergePolicy_DEFAULT_MIN_MERGE_DOCS 1000
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneIndexLogDocMergePolicy, DEFAULT_MIN_MERGE_DOCS, jint)

FOUNDATION_EXPORT void OrgApacheLuceneIndexLogDocMergePolicy_init(OrgApacheLuceneIndexLogDocMergePolicy *self);

FOUNDATION_EXPORT OrgApacheLuceneIndexLogDocMergePolicy *new_OrgApacheLuceneIndexLogDocMergePolicy_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexLogDocMergePolicy *create_OrgApacheLuceneIndexLogDocMergePolicy_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexLogDocMergePolicy)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneIndexLogDocMergePolicy")
