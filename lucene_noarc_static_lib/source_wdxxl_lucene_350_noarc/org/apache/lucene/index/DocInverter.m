//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/index/DocInverter.java
//

#include "J2ObjC_source.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/lucene/index/DocFieldConsumer.h"
#include "org/apache/lucene/index/DocFieldConsumerPerField.h"
#include "org/apache/lucene/index/DocFieldConsumerPerThread.h"
#include "org/apache/lucene/index/DocFieldProcessorPerThread.h"
#include "org/apache/lucene/index/DocInverter.h"
#include "org/apache/lucene/index/DocInverterPerField.h"
#include "org/apache/lucene/index/DocInverterPerThread.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/InvertedDocConsumer.h"
#include "org/apache/lucene/index/InvertedDocConsumerPerField.h"
#include "org/apache/lucene/index/InvertedDocConsumerPerThread.h"
#include "org/apache/lucene/index/InvertedDocEndConsumer.h"
#include "org/apache/lucene/index/InvertedDocEndConsumerPerField.h"
#include "org/apache/lucene/index/InvertedDocEndConsumerPerThread.h"
#include "org/apache/lucene/index/SegmentWriteState.h"

@implementation OrgApacheLuceneIndexDocInverter

- (instancetype)initWithOrgApacheLuceneIndexInvertedDocConsumer:(OrgApacheLuceneIndexInvertedDocConsumer *)consumer
                 withOrgApacheLuceneIndexInvertedDocEndConsumer:(OrgApacheLuceneIndexInvertedDocEndConsumer *)endConsumer {
  OrgApacheLuceneIndexDocInverter_initWithOrgApacheLuceneIndexInvertedDocConsumer_withOrgApacheLuceneIndexInvertedDocEndConsumer_(self, consumer, endConsumer);
  return self;
}

- (void)setFieldInfosWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)fieldInfos {
  [super setFieldInfosWithOrgApacheLuceneIndexFieldInfos:fieldInfos];
  [((OrgApacheLuceneIndexInvertedDocConsumer *) nil_chk(consumer_)) setFieldInfosWithOrgApacheLuceneIndexFieldInfos:fieldInfos];
  [((OrgApacheLuceneIndexInvertedDocEndConsumer *) nil_chk(endConsumer_)) setFieldInfosWithOrgApacheLuceneIndexFieldInfos:fieldInfos];
}

- (void)flushWithJavaUtilMap:(id<JavaUtilMap>)threadsAndFields
withOrgApacheLuceneIndexSegmentWriteState:(OrgApacheLuceneIndexSegmentWriteState *)state {
  id<JavaUtilMap> childThreadsAndFields = create_JavaUtilHashMap_init();
  id<JavaUtilMap> endChildThreadsAndFields = create_JavaUtilHashMap_init();
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(threadsAndFields)) entrySet])) {
    OrgApacheLuceneIndexDocInverterPerThread *perThread = (OrgApacheLuceneIndexDocInverterPerThread *) cast_chk([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey], [OrgApacheLuceneIndexDocInverterPerThread class]);
    id<JavaUtilCollection> childFields = create_JavaUtilHashSet_init();
    id<JavaUtilCollection> endChildFields = create_JavaUtilHashSet_init();
    for (OrgApacheLuceneIndexDocFieldConsumerPerField * __strong field in nil_chk([entry_ getValue])) {
      OrgApacheLuceneIndexDocInverterPerField *perField = (OrgApacheLuceneIndexDocInverterPerField *) cast_chk(field, [OrgApacheLuceneIndexDocInverterPerField class]);
      [childFields addWithId:((OrgApacheLuceneIndexDocInverterPerField *) nil_chk(perField))->consumer_];
      [endChildFields addWithId:perField->endConsumer_];
    }
    [childThreadsAndFields putWithId:((OrgApacheLuceneIndexDocInverterPerThread *) nil_chk(perThread))->consumer_ withId:childFields];
    [endChildThreadsAndFields putWithId:perThread->endConsumer_ withId:endChildFields];
  }
  [((OrgApacheLuceneIndexInvertedDocConsumer *) nil_chk(consumer_)) flushWithJavaUtilMap:childThreadsAndFields withOrgApacheLuceneIndexSegmentWriteState:state];
  [((OrgApacheLuceneIndexInvertedDocEndConsumer *) nil_chk(endConsumer_)) flushWithJavaUtilMap:endChildThreadsAndFields withOrgApacheLuceneIndexSegmentWriteState:state];
}

- (void)abort {
  @try {
    [((OrgApacheLuceneIndexInvertedDocConsumer *) nil_chk(consumer_)) abort];
  }
  @finally {
    [((OrgApacheLuceneIndexInvertedDocEndConsumer *) nil_chk(endConsumer_)) abort];
  }
}

- (jboolean)freeRAM {
  return [((OrgApacheLuceneIndexInvertedDocConsumer *) nil_chk(consumer_)) freeRAM];
}

- (OrgApacheLuceneIndexDocFieldConsumerPerThread *)addThreadWithOrgApacheLuceneIndexDocFieldProcessorPerThread:(OrgApacheLuceneIndexDocFieldProcessorPerThread *)docFieldProcessorPerThread {
  return create_OrgApacheLuceneIndexDocInverterPerThread_initWithOrgApacheLuceneIndexDocFieldProcessorPerThread_withOrgApacheLuceneIndexDocInverter_(docFieldProcessorPerThread, self);
}

- (void)dealloc {
  RELEASE_(consumer_);
  RELEASE_(endConsumer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 3, 4, 5, 6, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexDocFieldConsumerPerThread;", 0x1, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexInvertedDocConsumer:withOrgApacheLuceneIndexInvertedDocEndConsumer:);
  methods[1].selector = @selector(setFieldInfosWithOrgApacheLuceneIndexFieldInfos:);
  methods[2].selector = @selector(flushWithJavaUtilMap:withOrgApacheLuceneIndexSegmentWriteState:);
  methods[3].selector = @selector(abort);
  methods[4].selector = @selector(freeRAM);
  methods[5].selector = @selector(addThreadWithOrgApacheLuceneIndexDocFieldProcessorPerThread:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "consumer_", "LOrgApacheLuceneIndexInvertedDocConsumer;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "endConsumer_", "LOrgApacheLuceneIndexInvertedDocEndConsumer;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexInvertedDocConsumer;LOrgApacheLuceneIndexInvertedDocEndConsumer;", "setFieldInfos", "LOrgApacheLuceneIndexFieldInfos;", "flush", "LJavaUtilMap;LOrgApacheLuceneIndexSegmentWriteState;", "LJavaIoIOException;", "(Ljava/util/Map<Lorg/apache/lucene/index/DocFieldConsumerPerThread;Ljava/util/Collection<Lorg/apache/lucene/index/DocFieldConsumerPerField;>;>;Lorg/apache/lucene/index/SegmentWriteState;)V", "addThread", "LOrgApacheLuceneIndexDocFieldProcessorPerThread;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexDocInverter = { "DocInverter", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x10, 6, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexDocInverter;
}

@end

void OrgApacheLuceneIndexDocInverter_initWithOrgApacheLuceneIndexInvertedDocConsumer_withOrgApacheLuceneIndexInvertedDocEndConsumer_(OrgApacheLuceneIndexDocInverter *self, OrgApacheLuceneIndexInvertedDocConsumer *consumer, OrgApacheLuceneIndexInvertedDocEndConsumer *endConsumer) {
  OrgApacheLuceneIndexDocFieldConsumer_init(self);
  JreStrongAssign(&self->consumer_, consumer);
  JreStrongAssign(&self->endConsumer_, endConsumer);
}

OrgApacheLuceneIndexDocInverter *new_OrgApacheLuceneIndexDocInverter_initWithOrgApacheLuceneIndexInvertedDocConsumer_withOrgApacheLuceneIndexInvertedDocEndConsumer_(OrgApacheLuceneIndexInvertedDocConsumer *consumer, OrgApacheLuceneIndexInvertedDocEndConsumer *endConsumer) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexDocInverter, initWithOrgApacheLuceneIndexInvertedDocConsumer_withOrgApacheLuceneIndexInvertedDocEndConsumer_, consumer, endConsumer)
}

OrgApacheLuceneIndexDocInverter *create_OrgApacheLuceneIndexDocInverter_initWithOrgApacheLuceneIndexInvertedDocConsumer_withOrgApacheLuceneIndexInvertedDocEndConsumer_(OrgApacheLuceneIndexInvertedDocConsumer *consumer, OrgApacheLuceneIndexInvertedDocEndConsumer *endConsumer) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexDocInverter, initWithOrgApacheLuceneIndexInvertedDocConsumer_withOrgApacheLuceneIndexInvertedDocEndConsumer_, consumer, endConsumer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexDocInverter)
