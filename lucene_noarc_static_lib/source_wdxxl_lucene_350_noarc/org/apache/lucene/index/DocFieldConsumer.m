//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/index/DocFieldConsumer.java
//

#include "J2ObjC_source.h"
#include "java/util/Map.h"
#include "org/apache/lucene/index/DocFieldConsumer.h"
#include "org/apache/lucene/index/DocFieldConsumerPerThread.h"
#include "org/apache/lucene/index/DocFieldProcessorPerThread.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/SegmentWriteState.h"

@implementation OrgApacheLuceneIndexDocFieldConsumer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexDocFieldConsumer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)flushWithJavaUtilMap:(id<JavaUtilMap>)threadsAndFields
withOrgApacheLuceneIndexSegmentWriteState:(OrgApacheLuceneIndexSegmentWriteState *)state {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)abort {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (OrgApacheLuceneIndexDocFieldConsumerPerThread *)addThreadWithOrgApacheLuceneIndexDocFieldProcessorPerThread:(OrgApacheLuceneIndexDocFieldProcessorPerThread *)docFieldProcessorPerThread {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)freeRAM {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setFieldInfosWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)fieldInfos {
  JreStrongAssign(&self->fieldInfos_, fieldInfos);
}

- (void)dealloc {
  RELEASE_(fieldInfos_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x400, 0, 1, 2, 3, -1, -1 },
    { NULL, "V", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexDocFieldConsumerPerThread;", 0x400, 4, 5, 2, -1, -1, -1 },
    { NULL, "Z", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(flushWithJavaUtilMap:withOrgApacheLuceneIndexSegmentWriteState:);
  methods[2].selector = @selector(abort);
  methods[3].selector = @selector(addThreadWithOrgApacheLuceneIndexDocFieldProcessorPerThread:);
  methods[4].selector = @selector(freeRAM);
  methods[5].selector = @selector(setFieldInfosWithOrgApacheLuceneIndexFieldInfos:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fieldInfos_", "LOrgApacheLuceneIndexFieldInfos;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "flush", "LJavaUtilMap;LOrgApacheLuceneIndexSegmentWriteState;", "LJavaIoIOException;", "(Ljava/util/Map<Lorg/apache/lucene/index/DocFieldConsumerPerThread;Ljava/util/Collection<Lorg/apache/lucene/index/DocFieldConsumerPerField;>;>;Lorg/apache/lucene/index/SegmentWriteState;)V", "addThread", "LOrgApacheLuceneIndexDocFieldProcessorPerThread;", "setFieldInfos", "LOrgApacheLuceneIndexFieldInfos;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexDocFieldConsumer = { "DocFieldConsumer", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x400, 6, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexDocFieldConsumer;
}

@end

void OrgApacheLuceneIndexDocFieldConsumer_init(OrgApacheLuceneIndexDocFieldConsumer *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexDocFieldConsumer)
