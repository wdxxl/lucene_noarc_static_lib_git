//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/index/TermInfosReaderIndex.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"
#include "org/apache/lucene/index/SegmentTermEnum.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/index/TermInfo.h"
#include "org/apache/lucene/index/TermInfosReaderIndex.h"
#include "org/apache/lucene/util/BitUtil.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/PagedBytes.h"
#include "org/apache/lucene/util/packed/GrowableWriter.h"
#include "org/apache/lucene/util/packed/PackedInts.h"

@interface OrgApacheLuceneIndexTermInfosReaderIndex () {
 @public
  IOSObjectArray *fields_;
  jint totalIndexInterval_;
  id<JavaUtilComparator> comparator_;
  OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *dataInput_;
  id<OrgApacheLuceneUtilPackedPackedInts_Reader> indexToDataOffset_;
  jint indexSize_;
  jint skipInterval_;
}

+ (jint)estimatePageBitsWithLong:(jlong)estSize;

- (jint)compareToWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
              withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)termBytesRef
                                      withInt:(jint)termIndex
withOrgApacheLuceneUtilPagedBytes_PagedBytesDataInput:(OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *)input
              withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)reuse;

- (jint)compareFieldWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                                         withInt:(jint)termIndex
withOrgApacheLuceneUtilPagedBytes_PagedBytesDataInput:(OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *)input;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexTermInfosReaderIndex, fields_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexTermInfosReaderIndex, comparator_, id<JavaUtilComparator>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexTermInfosReaderIndex, dataInput_, OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexTermInfosReaderIndex, indexToDataOffset_, id<OrgApacheLuceneUtilPackedPackedInts_Reader>)

inline jint OrgApacheLuceneIndexTermInfosReaderIndex_get_MAX_PAGE_BITS();
#define OrgApacheLuceneIndexTermInfosReaderIndex_MAX_PAGE_BITS 18
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneIndexTermInfosReaderIndex, MAX_PAGE_BITS, jint)

__attribute__((unused)) static jint OrgApacheLuceneIndexTermInfosReaderIndex_estimatePageBitsWithLong_(jlong estSize);

__attribute__((unused)) static jint OrgApacheLuceneIndexTermInfosReaderIndex_compareToWithOrgApacheLuceneIndexTerm_withOrgApacheLuceneUtilBytesRef_withInt_withOrgApacheLuceneUtilPagedBytes_PagedBytesDataInput_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneIndexTermInfosReaderIndex *self, OrgApacheLuceneIndexTerm *term, OrgApacheLuceneUtilBytesRef *termBytesRef, jint termIndex, OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *input, OrgApacheLuceneUtilBytesRef *reuse);

__attribute__((unused)) static jint OrgApacheLuceneIndexTermInfosReaderIndex_compareFieldWithOrgApacheLuceneIndexTerm_withInt_withOrgApacheLuceneUtilPagedBytes_PagedBytesDataInput_(OrgApacheLuceneIndexTermInfosReaderIndex *self, OrgApacheLuceneIndexTerm *term, jint termIndex, OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *input);

@implementation OrgApacheLuceneIndexTermInfosReaderIndex

- (instancetype)initWithOrgApacheLuceneIndexSegmentTermEnum:(OrgApacheLuceneIndexSegmentTermEnum *)indexEnum
                                                    withInt:(jint)indexDivisor
                                                   withLong:(jlong)tiiFileLength
                                                    withInt:(jint)totalIndexInterval {
  OrgApacheLuceneIndexTermInfosReaderIndex_initWithOrgApacheLuceneIndexSegmentTermEnum_withInt_withLong_withInt_(self, indexEnum, indexDivisor, tiiFileLength, totalIndexInterval);
  return self;
}

+ (jint)estimatePageBitsWithLong:(jlong)estSize {
  return OrgApacheLuceneIndexTermInfosReaderIndex_estimatePageBitsWithLong_(estSize);
}

- (void)seekEnumWithOrgApacheLuceneIndexSegmentTermEnum:(OrgApacheLuceneIndexSegmentTermEnum *)enumerator
                                                withInt:(jint)indexOffset {
  OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *input = (OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *) cast_chk([((OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *) nil_chk(dataInput_)) java_clone], [OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput class]);
  [((OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *) nil_chk(input)) setPositionWithLong:[((id<OrgApacheLuceneUtilPackedPackedInts_Reader>) nil_chk(indexToDataOffset_)) getWithInt:indexOffset]];
  jint fieldId = [input readVInt];
  OrgApacheLuceneIndexTerm *field = IOSObjectArray_Get(nil_chk(fields_), fieldId);
  OrgApacheLuceneIndexTerm *term = [((OrgApacheLuceneIndexTerm *) nil_chk(field)) createTermWithNSString:[input readString]];
  OrgApacheLuceneIndexTermInfo *termInfo = create_OrgApacheLuceneIndexTermInfo_init();
  termInfo->docFreq_ = [input readVInt];
  if (termInfo->docFreq_ >= skipInterval_) {
    termInfo->skipOffset_ = [input readVInt];
  }
  else {
    termInfo->skipOffset_ = 0;
  }
  termInfo->freqPointer_ = [input readVLong];
  termInfo->proxPointer_ = [input readVLong];
  jlong pointer = [input readVLong];
  [((OrgApacheLuceneIndexSegmentTermEnum *) nil_chk(enumerator)) seekWithLong:pointer withLong:((jlong) indexOffset * totalIndexInterval_) - 1 withOrgApacheLuceneIndexTerm:term withOrgApacheLuceneIndexTermInfo:termInfo];
}

- (jint)getIndexOffsetWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                   withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)termBytesRef {
  jint lo = 0;
  jint hi = indexSize_ - 1;
  OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *input = (OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *) cast_chk([((OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *) nil_chk(dataInput_)) java_clone], [OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput class]);
  OrgApacheLuceneUtilBytesRef *scratch = create_OrgApacheLuceneUtilBytesRef_init();
  while (hi >= lo) {
    jint mid = JreURShift32((lo + hi), 1);
    jint delta = OrgApacheLuceneIndexTermInfosReaderIndex_compareToWithOrgApacheLuceneIndexTerm_withOrgApacheLuceneUtilBytesRef_withInt_withOrgApacheLuceneUtilPagedBytes_PagedBytesDataInput_withOrgApacheLuceneUtilBytesRef_(self, term, termBytesRef, mid, input, scratch);
    if (delta < 0) hi = mid - 1;
    else if (delta > 0) lo = mid + 1;
    else return mid;
  }
  return hi;
}

- (OrgApacheLuceneIndexTerm *)getTermWithInt:(jint)termIndex {
  OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *input = (OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *) cast_chk([((OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *) nil_chk(dataInput_)) java_clone], [OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput class]);
  [((OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *) nil_chk(input)) setPositionWithLong:[((id<OrgApacheLuceneUtilPackedPackedInts_Reader>) nil_chk(indexToDataOffset_)) getWithInt:termIndex]];
  jint fieldId = [input readVInt];
  OrgApacheLuceneIndexTerm *field = IOSObjectArray_Get(nil_chk(fields_), fieldId);
  return [((OrgApacheLuceneIndexTerm *) nil_chk(field)) createTermWithNSString:[input readString]];
}

- (jint)length {
  return indexSize_;
}

- (jint)compareToWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
              withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)termBytesRef
                                      withInt:(jint)termIndex {
  return OrgApacheLuceneIndexTermInfosReaderIndex_compareToWithOrgApacheLuceneIndexTerm_withOrgApacheLuceneUtilBytesRef_withInt_withOrgApacheLuceneUtilPagedBytes_PagedBytesDataInput_withOrgApacheLuceneUtilBytesRef_(self, term, termBytesRef, termIndex, (OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *) cast_chk([((OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *) nil_chk(dataInput_)) java_clone], [OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput class]), create_OrgApacheLuceneUtilBytesRef_init());
}

- (jint)compareToWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
              withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)termBytesRef
                                      withInt:(jint)termIndex
withOrgApacheLuceneUtilPagedBytes_PagedBytesDataInput:(OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *)input
              withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)reuse {
  return OrgApacheLuceneIndexTermInfosReaderIndex_compareToWithOrgApacheLuceneIndexTerm_withOrgApacheLuceneUtilBytesRef_withInt_withOrgApacheLuceneUtilPagedBytes_PagedBytesDataInput_withOrgApacheLuceneUtilBytesRef_(self, term, termBytesRef, termIndex, input, reuse);
}

- (jint)compareFieldWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                                         withInt:(jint)termIndex
withOrgApacheLuceneUtilPagedBytes_PagedBytesDataInput:(OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *)input {
  return OrgApacheLuceneIndexTermInfosReaderIndex_compareFieldWithOrgApacheLuceneIndexTerm_withInt_withOrgApacheLuceneUtilPagedBytes_PagedBytesDataInput_(self, term, termIndex, input);
}

- (void)dealloc {
  RELEASE_(fields_);
  RELEASE_(comparator_);
  RELEASE_(dataInput_);
  RELEASE_(indexToDataOffset_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, "I", 0xa, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 4, 5, 1, -1, -1, -1 },
    { NULL, "I", 0x0, 6, 7, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTerm;", 0x0, 8, 9, 1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 10, 11, 1, -1, -1, -1 },
    { NULL, "I", 0x2, 10, 12, 1, -1, -1, -1 },
    { NULL, "I", 0x2, 13, 14, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexSegmentTermEnum:withInt:withLong:withInt:);
  methods[1].selector = @selector(estimatePageBitsWithLong:);
  methods[2].selector = @selector(seekEnumWithOrgApacheLuceneIndexSegmentTermEnum:withInt:);
  methods[3].selector = @selector(getIndexOffsetWithOrgApacheLuceneIndexTerm:withOrgApacheLuceneUtilBytesRef:);
  methods[4].selector = @selector(getTermWithInt:);
  methods[5].selector = @selector(length);
  methods[6].selector = @selector(compareToWithOrgApacheLuceneIndexTerm:withOrgApacheLuceneUtilBytesRef:withInt:);
  methods[7].selector = @selector(compareToWithOrgApacheLuceneIndexTerm:withOrgApacheLuceneUtilBytesRef:withInt:withOrgApacheLuceneUtilPagedBytes_PagedBytesDataInput:withOrgApacheLuceneUtilBytesRef:);
  methods[8].selector = @selector(compareFieldWithOrgApacheLuceneIndexTerm:withInt:withOrgApacheLuceneUtilPagedBytes_PagedBytesDataInput:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_PAGE_BITS", "I", .constantValue.asInt = OrgApacheLuceneIndexTermInfosReaderIndex_MAX_PAGE_BITS, 0x1a, -1, -1, -1, -1 },
    { "fields_", "[LOrgApacheLuceneIndexTerm;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "totalIndexInterval_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "comparator_", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x2, -1, -1, 15, -1 },
    { "dataInput_", "LOrgApacheLuceneUtilPagedBytes_PagedBytesDataInput;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "indexToDataOffset_", "LOrgApacheLuceneUtilPackedPackedInts_Reader;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "indexSize_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "skipInterval_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexSegmentTermEnum;IJI", "LJavaIoIOException;", "estimatePageBits", "J", "seekEnum", "LOrgApacheLuceneIndexSegmentTermEnum;I", "getIndexOffset", "LOrgApacheLuceneIndexTerm;LOrgApacheLuceneUtilBytesRef;", "getTerm", "I", "compareTo", "LOrgApacheLuceneIndexTerm;LOrgApacheLuceneUtilBytesRef;I", "LOrgApacheLuceneIndexTerm;LOrgApacheLuceneUtilBytesRef;ILOrgApacheLuceneUtilPagedBytes_PagedBytesDataInput;LOrgApacheLuceneUtilBytesRef;", "compareField", "LOrgApacheLuceneIndexTerm;ILOrgApacheLuceneUtilPagedBytes_PagedBytesDataInput;", "Ljava/util/Comparator<Lorg/apache/lucene/util/BytesRef;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexTermInfosReaderIndex = { "TermInfosReaderIndex", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x0, 9, 8, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexTermInfosReaderIndex;
}

@end

void OrgApacheLuceneIndexTermInfosReaderIndex_initWithOrgApacheLuceneIndexSegmentTermEnum_withInt_withLong_withInt_(OrgApacheLuceneIndexTermInfosReaderIndex *self, OrgApacheLuceneIndexSegmentTermEnum *indexEnum, jint indexDivisor, jlong tiiFileLength, jint totalIndexInterval) {
  NSObject_init(self);
  JreStrongAssign(&self->comparator_, OrgApacheLuceneUtilBytesRef_getUTF8SortedAsUTF16Comparator());
  self->totalIndexInterval_ = totalIndexInterval;
  self->indexSize_ = 1 + ((jint) ((OrgApacheLuceneIndexSegmentTermEnum *) nil_chk(indexEnum))->size_ - 1) / indexDivisor;
  self->skipInterval_ = indexEnum->skipInterval_;
  jlong initialSize = JreFpToLong((tiiFileLength * 1.5)) / indexDivisor;
  OrgApacheLuceneUtilPagedBytes *dataPagedBytes = create_OrgApacheLuceneUtilPagedBytes_initWithInt_(OrgApacheLuceneIndexTermInfosReaderIndex_estimatePageBitsWithLong_(initialSize));
  OrgApacheLuceneUtilPagedBytes_PagedBytesDataOutput *dataOutput = [dataPagedBytes getDataOutput];
  OrgApacheLuceneUtilPackedGrowableWriter *indexToTerms = create_OrgApacheLuceneUtilPackedGrowableWriter_initWithInt_withInt_withBoolean_(4, self->indexSize_, false);
  NSString *currentField = nil;
  id<JavaUtilList> fieldStrs = create_JavaUtilArrayList_init();
  jint fieldCounter = -1;
  for (jint i = 0; [indexEnum next]; i++) {
    OrgApacheLuceneIndexTerm *term = [indexEnum term];
    if (currentField != ((OrgApacheLuceneIndexTerm *) nil_chk(term))->field_) {
      currentField = term->field_;
      [fieldStrs addWithId:currentField];
      fieldCounter++;
    }
    OrgApacheLuceneIndexTermInfo *termInfo = [indexEnum termInfo];
    [indexToTerms setWithInt:i withLong:[((OrgApacheLuceneUtilPagedBytes_PagedBytesDataOutput *) nil_chk(dataOutput)) getPosition]];
    [dataOutput writeVIntWithInt:fieldCounter];
    [dataOutput writeStringWithNSString:[term text]];
    [dataOutput writeVIntWithInt:((OrgApacheLuceneIndexTermInfo *) nil_chk(termInfo))->docFreq_];
    if (termInfo->docFreq_ >= self->skipInterval_) {
      [dataOutput writeVIntWithInt:termInfo->skipOffset_];
    }
    [dataOutput writeVLongWithLong:termInfo->freqPointer_];
    [dataOutput writeVLongWithLong:termInfo->proxPointer_];
    [dataOutput writeVLongWithLong:indexEnum->indexPointer_];
    for (jint j = 1; j < indexDivisor; j++) {
      if (![indexEnum next]) {
        break;
      }
    }
  }
  JreStrongAssignAndConsume(&self->fields_, [IOSObjectArray newArrayWithLength:[fieldStrs size] type:OrgApacheLuceneIndexTerm_class_()]);
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(self->fields_))->size_; i++) {
    IOSObjectArray_SetAndConsume(self->fields_, i, new_OrgApacheLuceneIndexTerm_initWithNSString_([fieldStrs getWithInt:i]));
  }
  [dataPagedBytes freezeWithBoolean:true];
  JreStrongAssign(&self->dataInput_, [dataPagedBytes getDataInput]);
  JreStrongAssign(&self->indexToDataOffset_, [indexToTerms getMutable]);
}

OrgApacheLuceneIndexTermInfosReaderIndex *new_OrgApacheLuceneIndexTermInfosReaderIndex_initWithOrgApacheLuceneIndexSegmentTermEnum_withInt_withLong_withInt_(OrgApacheLuceneIndexSegmentTermEnum *indexEnum, jint indexDivisor, jlong tiiFileLength, jint totalIndexInterval) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexTermInfosReaderIndex, initWithOrgApacheLuceneIndexSegmentTermEnum_withInt_withLong_withInt_, indexEnum, indexDivisor, tiiFileLength, totalIndexInterval)
}

OrgApacheLuceneIndexTermInfosReaderIndex *create_OrgApacheLuceneIndexTermInfosReaderIndex_initWithOrgApacheLuceneIndexSegmentTermEnum_withInt_withLong_withInt_(OrgApacheLuceneIndexSegmentTermEnum *indexEnum, jint indexDivisor, jlong tiiFileLength, jint totalIndexInterval) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexTermInfosReaderIndex, initWithOrgApacheLuceneIndexSegmentTermEnum_withInt_withLong_withInt_, indexEnum, indexDivisor, tiiFileLength, totalIndexInterval)
}

jint OrgApacheLuceneIndexTermInfosReaderIndex_estimatePageBitsWithLong_(jlong estSize) {
  OrgApacheLuceneIndexTermInfosReaderIndex_initialize();
  return JavaLangMath_maxWithInt_withInt_(JavaLangMath_minWithInt_withInt_(64 - OrgApacheLuceneUtilBitUtil_nlzWithLong_(estSize), OrgApacheLuceneIndexTermInfosReaderIndex_MAX_PAGE_BITS), 4);
}

jint OrgApacheLuceneIndexTermInfosReaderIndex_compareToWithOrgApacheLuceneIndexTerm_withOrgApacheLuceneUtilBytesRef_withInt_withOrgApacheLuceneUtilPagedBytes_PagedBytesDataInput_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneIndexTermInfosReaderIndex *self, OrgApacheLuceneIndexTerm *term, OrgApacheLuceneUtilBytesRef *termBytesRef, jint termIndex, OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *input, OrgApacheLuceneUtilBytesRef *reuse) {
  jint c = OrgApacheLuceneIndexTermInfosReaderIndex_compareFieldWithOrgApacheLuceneIndexTerm_withInt_withOrgApacheLuceneUtilPagedBytes_PagedBytesDataInput_(self, term, termIndex, input);
  if (c == 0) {
    ((OrgApacheLuceneUtilBytesRef *) nil_chk(reuse))->length_ = [((OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *) nil_chk(input)) readVInt];
    [reuse growWithInt:reuse->length_];
    [input readBytesWithByteArray:reuse->bytes_ withInt:0 withInt:reuse->length_];
    return [((id<JavaUtilComparator>) nil_chk(self->comparator_)) compareWithId:termBytesRef withId:reuse];
  }
  return c;
}

jint OrgApacheLuceneIndexTermInfosReaderIndex_compareFieldWithOrgApacheLuceneIndexTerm_withInt_withOrgApacheLuceneUtilPagedBytes_PagedBytesDataInput_(OrgApacheLuceneIndexTermInfosReaderIndex *self, OrgApacheLuceneIndexTerm *term, jint termIndex, OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *input) {
  [((OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *) nil_chk(input)) setPositionWithLong:[((id<OrgApacheLuceneUtilPackedPackedInts_Reader>) nil_chk(self->indexToDataOffset_)) getWithInt:termIndex]];
  return [((NSString *) nil_chk(((OrgApacheLuceneIndexTerm *) nil_chk(term))->field_)) compareToWithId:((OrgApacheLuceneIndexTerm *) nil_chk(IOSObjectArray_Get(nil_chk(self->fields_), [input readVInt])))->field_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexTermInfosReaderIndex)
