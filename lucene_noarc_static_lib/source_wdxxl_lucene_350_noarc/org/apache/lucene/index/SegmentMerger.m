//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/index/SegmentMerger.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "org/apache/lucene/document/Document.h"
#include "org/apache/lucene/index/CompoundFileWriter.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/FieldsReader.h"
#include "org/apache/lucene/index/FieldsWriter.h"
#include "org/apache/lucene/index/FormatPostingsDocsConsumer.h"
#include "org/apache/lucene/index/FormatPostingsFieldsConsumer.h"
#include "org/apache/lucene/index/FormatPostingsFieldsWriter.h"
#include "org/apache/lucene/index/FormatPostingsPositionsConsumer.h"
#include "org/apache/lucene/index/FormatPostingsTermsConsumer.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/IndexWriterConfig.h"
#include "org/apache/lucene/index/MergePolicy.h"
#include "org/apache/lucene/index/PayloadProcessorProvider.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentMergeInfo.h"
#include "org/apache/lucene/index/SegmentMergeQueue.h"
#include "org/apache/lucene/index/SegmentMerger.h"
#include "org/apache/lucene/index/SegmentNorms.h"
#include "org/apache/lucene/index/SegmentReader.h"
#include "org/apache/lucene/index/SegmentWriteState.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/index/TermEnum.h"
#include "org/apache/lucene/index/TermPositions.h"
#include "org/apache/lucene/index/TermVectorsReader.h"
#include "org/apache/lucene/index/TermVectorsWriter.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/ReaderUtil.h"

@interface OrgApacheLuceneIndexSegmentMerger () {
 @public
  OrgApacheLuceneStoreDirectory *directory_;
  NSString *segment_;
  jint termIndexInterval_;
  id<JavaUtilList> readers_;
  OrgApacheLuceneIndexFieldInfos *fieldInfos_;
  jint mergedDocs_;
  OrgApacheLuceneIndexSegmentMerger_CheckAbort *checkAbort_;
  OrgApacheLuceneIndexSegmentWriteState *segmentWriteState_;
  OrgApacheLuceneIndexPayloadProcessorProvider *payloadProcessorProvider_;
  IOSObjectArray *matchingSegmentReaders_;
  IOSIntArray *rawDocLengths_;
  IOSIntArray *rawDocLengths2_;
  jint matchedCount_;
  OrgApacheLuceneIndexSegmentMergeQueue *queue_;
  IOSByteArray *payloadBuffer_;
  IOSObjectArray *docMaps_;
}

+ (void)addIndexedWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                   withOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)fInfos
                               withJavaUtilCollection:(id<JavaUtilCollection>)names
                                          withBoolean:(jboolean)storeTermVectors
                                          withBoolean:(jboolean)storePositionWithTermVector
                                          withBoolean:(jboolean)storeOffsetWithTermVector
                                          withBoolean:(jboolean)storePayloads
       withOrgApacheLuceneIndexFieldInfo_IndexOptions:(OrgApacheLuceneIndexFieldInfo_IndexOptions *)indexOptions;

- (void)setMatchingSegmentReaders;

- (jint)mergeFields;

- (jint)copyFieldsWithDeletionsWithOrgApacheLuceneIndexFieldsWriter:(OrgApacheLuceneIndexFieldsWriter *)fieldsWriter
                                withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                               withOrgApacheLuceneIndexFieldsReader:(OrgApacheLuceneIndexFieldsReader *)matchingFieldsReader OBJC_METHOD_FAMILY_NONE;

- (jint)copyFieldsNoDeletionsWithOrgApacheLuceneIndexFieldsWriter:(OrgApacheLuceneIndexFieldsWriter *)fieldsWriter
                              withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                             withOrgApacheLuceneIndexFieldsReader:(OrgApacheLuceneIndexFieldsReader *)matchingFieldsReader OBJC_METHOD_FAMILY_NONE;

- (void)mergeVectors;

- (void)copyVectorsWithDeletionsWithOrgApacheLuceneIndexTermVectorsWriter:(OrgApacheLuceneIndexTermVectorsWriter *)termVectorsWriter
                                withOrgApacheLuceneIndexTermVectorsReader:(OrgApacheLuceneIndexTermVectorsReader *)matchingVectorsReader
                                      withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader OBJC_METHOD_FAMILY_NONE;

- (void)copyVectorsNoDeletionsWithOrgApacheLuceneIndexTermVectorsWriter:(OrgApacheLuceneIndexTermVectorsWriter *)termVectorsWriter
                              withOrgApacheLuceneIndexTermVectorsReader:(OrgApacheLuceneIndexTermVectorsReader *)matchingVectorsReader
                                    withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader OBJC_METHOD_FAMILY_NONE;

- (void)mergeTerms;

- (void)mergeTermInfosWithOrgApacheLuceneIndexFormatPostingsFieldsConsumer:(OrgApacheLuceneIndexFormatPostingsFieldsConsumer *)consumer;

- (jint)appendPostingsWithOrgApacheLuceneIndexFormatPostingsTermsConsumer:(OrgApacheLuceneIndexFormatPostingsTermsConsumer *)termsConsumer
                            withOrgApacheLuceneIndexSegmentMergeInfoArray:(IOSObjectArray *)smis
                                                                  withInt:(jint)n;

- (void)mergeNorms;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentMerger, directory_, OrgApacheLuceneStoreDirectory *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentMerger, segment_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentMerger, readers_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentMerger, fieldInfos_, OrgApacheLuceneIndexFieldInfos *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentMerger, checkAbort_, OrgApacheLuceneIndexSegmentMerger_CheckAbort *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentMerger, segmentWriteState_, OrgApacheLuceneIndexSegmentWriteState *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentMerger, payloadProcessorProvider_, OrgApacheLuceneIndexPayloadProcessorProvider *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentMerger, matchingSegmentReaders_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentMerger, rawDocLengths_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentMerger, rawDocLengths2_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentMerger, queue_, OrgApacheLuceneIndexSegmentMergeQueue *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentMerger, payloadBuffer_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentMerger, docMaps_, IOSObjectArray *)

inline jint OrgApacheLuceneIndexSegmentMerger_get_MAX_RAW_MERGE_DOCS();
#define OrgApacheLuceneIndexSegmentMerger_MAX_RAW_MERGE_DOCS 4192
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneIndexSegmentMerger, MAX_RAW_MERGE_DOCS, jint)

__attribute__((unused)) static void OrgApacheLuceneIndexSegmentMerger_addIndexedWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexFieldInfos_withJavaUtilCollection_withBoolean_withBoolean_withBoolean_withBoolean_withOrgApacheLuceneIndexFieldInfo_IndexOptions_(OrgApacheLuceneIndexIndexReader *reader, OrgApacheLuceneIndexFieldInfos *fInfos, id<JavaUtilCollection> names, jboolean storeTermVectors, jboolean storePositionWithTermVector, jboolean storeOffsetWithTermVector, jboolean storePayloads, OrgApacheLuceneIndexFieldInfo_IndexOptions *indexOptions);

__attribute__((unused)) static void OrgApacheLuceneIndexSegmentMerger_setMatchingSegmentReaders(OrgApacheLuceneIndexSegmentMerger *self);

__attribute__((unused)) static jint OrgApacheLuceneIndexSegmentMerger_mergeFields(OrgApacheLuceneIndexSegmentMerger *self);

__attribute__((unused)) static jint OrgApacheLuceneIndexSegmentMerger_copyFieldsWithDeletionsWithOrgApacheLuceneIndexFieldsWriter_withOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexFieldsReader_(OrgApacheLuceneIndexSegmentMerger *self, OrgApacheLuceneIndexFieldsWriter *fieldsWriter, OrgApacheLuceneIndexIndexReader *reader, OrgApacheLuceneIndexFieldsReader *matchingFieldsReader);

__attribute__((unused)) static jint OrgApacheLuceneIndexSegmentMerger_copyFieldsNoDeletionsWithOrgApacheLuceneIndexFieldsWriter_withOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexFieldsReader_(OrgApacheLuceneIndexSegmentMerger *self, OrgApacheLuceneIndexFieldsWriter *fieldsWriter, OrgApacheLuceneIndexIndexReader *reader, OrgApacheLuceneIndexFieldsReader *matchingFieldsReader);

__attribute__((unused)) static void OrgApacheLuceneIndexSegmentMerger_mergeVectors(OrgApacheLuceneIndexSegmentMerger *self);

__attribute__((unused)) static void OrgApacheLuceneIndexSegmentMerger_copyVectorsWithDeletionsWithOrgApacheLuceneIndexTermVectorsWriter_withOrgApacheLuceneIndexTermVectorsReader_withOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneIndexSegmentMerger *self, OrgApacheLuceneIndexTermVectorsWriter *termVectorsWriter, OrgApacheLuceneIndexTermVectorsReader *matchingVectorsReader, OrgApacheLuceneIndexIndexReader *reader);

__attribute__((unused)) static void OrgApacheLuceneIndexSegmentMerger_copyVectorsNoDeletionsWithOrgApacheLuceneIndexTermVectorsWriter_withOrgApacheLuceneIndexTermVectorsReader_withOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneIndexSegmentMerger *self, OrgApacheLuceneIndexTermVectorsWriter *termVectorsWriter, OrgApacheLuceneIndexTermVectorsReader *matchingVectorsReader, OrgApacheLuceneIndexIndexReader *reader);

__attribute__((unused)) static void OrgApacheLuceneIndexSegmentMerger_mergeTerms(OrgApacheLuceneIndexSegmentMerger *self);

__attribute__((unused)) static void OrgApacheLuceneIndexSegmentMerger_mergeTermInfosWithOrgApacheLuceneIndexFormatPostingsFieldsConsumer_(OrgApacheLuceneIndexSegmentMerger *self, OrgApacheLuceneIndexFormatPostingsFieldsConsumer *consumer);

__attribute__((unused)) static jint OrgApacheLuceneIndexSegmentMerger_appendPostingsWithOrgApacheLuceneIndexFormatPostingsTermsConsumer_withOrgApacheLuceneIndexSegmentMergeInfoArray_withInt_(OrgApacheLuceneIndexSegmentMerger *self, OrgApacheLuceneIndexFormatPostingsTermsConsumer *termsConsumer, IOSObjectArray *smis, jint n);

__attribute__((unused)) static void OrgApacheLuceneIndexSegmentMerger_mergeNorms(OrgApacheLuceneIndexSegmentMerger *self);

@interface OrgApacheLuceneIndexSegmentMerger_CheckAbort () {
 @public
  jdouble workCount_;
  OrgApacheLuceneIndexMergePolicy_OneMerge *merge_;
  OrgApacheLuceneStoreDirectory *dir_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentMerger_CheckAbort, merge_, OrgApacheLuceneIndexMergePolicy_OneMerge *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentMerger_CheckAbort, dir_, OrgApacheLuceneStoreDirectory *)

@interface OrgApacheLuceneIndexSegmentMerger_1 : OrgApacheLuceneIndexSegmentMerger_CheckAbort

- (instancetype)initWithOrgApacheLuceneIndexMergePolicy_OneMerge:(OrgApacheLuceneIndexMergePolicy_OneMerge *)merge
                               withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir;

- (void)workWithDouble:(jdouble)units;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexSegmentMerger_1)

__attribute__((unused)) static void OrgApacheLuceneIndexSegmentMerger_1_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneStoreDirectory_(OrgApacheLuceneIndexSegmentMerger_1 *self, OrgApacheLuceneIndexMergePolicy_OneMerge *merge, OrgApacheLuceneStoreDirectory *dir);

__attribute__((unused)) static OrgApacheLuceneIndexSegmentMerger_1 *new_OrgApacheLuceneIndexSegmentMerger_1_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneStoreDirectory_(OrgApacheLuceneIndexMergePolicy_OneMerge *merge, OrgApacheLuceneStoreDirectory *dir) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexSegmentMerger_1 *create_OrgApacheLuceneIndexSegmentMerger_1_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneStoreDirectory_(OrgApacheLuceneIndexMergePolicy_OneMerge *merge, OrgApacheLuceneStoreDirectory *dir);

@implementation OrgApacheLuceneIndexSegmentMerger

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                                              withInt:(jint)termIndexInterval
                                         withNSString:(NSString *)name
         withOrgApacheLuceneIndexMergePolicy_OneMerge:(OrgApacheLuceneIndexMergePolicy_OneMerge *)merge
     withOrgApacheLuceneIndexPayloadProcessorProvider:(OrgApacheLuceneIndexPayloadProcessorProvider *)payloadProcessorProvider
                   withOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)fieldInfos {
  OrgApacheLuceneIndexSegmentMerger_initWithOrgApacheLuceneStoreDirectory_withInt_withNSString_withOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneIndexPayloadProcessorProvider_withOrgApacheLuceneIndexFieldInfos_(self, dir, termIndexInterval, name, merge, payloadProcessorProvider, fieldInfos);
  return self;
}

- (OrgApacheLuceneIndexFieldInfos *)fieldInfos {
  return fieldInfos_;
}

- (void)addWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  OrgApacheLuceneUtilReaderUtil_gatherSubReadersWithJavaUtilList_withOrgApacheLuceneIndexIndexReader_(readers_, reader);
}

- (jint)merge {
  mergedDocs_ = OrgApacheLuceneIndexSegmentMerger_mergeFields(self);
  OrgApacheLuceneIndexSegmentMerger_mergeTerms(self);
  OrgApacheLuceneIndexSegmentMerger_mergeNorms(self);
  if ([((OrgApacheLuceneIndexFieldInfos *) nil_chk(fieldInfos_)) hasVectors]) OrgApacheLuceneIndexSegmentMerger_mergeVectors(self);
  return mergedDocs_;
}

- (id<JavaUtilCollection>)createCompoundFileWithNSString:(NSString *)fileName
                     withOrgApacheLuceneIndexSegmentInfo:(OrgApacheLuceneIndexSegmentInfo *)info {
  id<JavaUtilCollection> files = [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info)) files];
  OrgApacheLuceneIndexCompoundFileWriter *cfsWriter = create_OrgApacheLuceneIndexCompoundFileWriter_initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexSegmentMerger_CheckAbort_(directory_, fileName, checkAbort_);
  for (NSString * __strong file in nil_chk(files)) {
    JreAssert((!OrgApacheLuceneIndexIndexFileNames_matchesExtensionWithNSString_withNSString_(file, OrgApacheLuceneIndexIndexFileNames_DELETES_EXTENSION)), (JreStrcat("$$", @".del file is not allowed in .cfs: ", file)));
    JreAssert((!OrgApacheLuceneIndexIndexFileNames_isSeparateNormsFileWithNSString_(file)), (JreStrcat("$$", @"separate norms file (.s[0-9]+) is not allowed in .cfs: ", file)));
    [cfsWriter addFileWithNSString:file];
  }
  [cfsWriter close];
  return files;
}

+ (void)addIndexedWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                   withOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)fInfos
                               withJavaUtilCollection:(id<JavaUtilCollection>)names
                                          withBoolean:(jboolean)storeTermVectors
                                          withBoolean:(jboolean)storePositionWithTermVector
                                          withBoolean:(jboolean)storeOffsetWithTermVector
                                          withBoolean:(jboolean)storePayloads
       withOrgApacheLuceneIndexFieldInfo_IndexOptions:(OrgApacheLuceneIndexFieldInfo_IndexOptions *)indexOptions {
  OrgApacheLuceneIndexSegmentMerger_addIndexedWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexFieldInfos_withJavaUtilCollection_withBoolean_withBoolean_withBoolean_withBoolean_withOrgApacheLuceneIndexFieldInfo_IndexOptions_(reader, fInfos, names, storeTermVectors, storePositionWithTermVector, storeOffsetWithTermVector, storePayloads, indexOptions);
}

- (jint)getMatchedSubReaderCount {
  return matchedCount_;
}

- (void)setMatchingSegmentReaders {
  OrgApacheLuceneIndexSegmentMerger_setMatchingSegmentReaders(self);
}

- (jint)mergeFields {
  return OrgApacheLuceneIndexSegmentMerger_mergeFields(self);
}

- (jint)copyFieldsWithDeletionsWithOrgApacheLuceneIndexFieldsWriter:(OrgApacheLuceneIndexFieldsWriter *)fieldsWriter
                                withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                               withOrgApacheLuceneIndexFieldsReader:(OrgApacheLuceneIndexFieldsReader *)matchingFieldsReader {
  return OrgApacheLuceneIndexSegmentMerger_copyFieldsWithDeletionsWithOrgApacheLuceneIndexFieldsWriter_withOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexFieldsReader_(self, fieldsWriter, reader, matchingFieldsReader);
}

- (jint)copyFieldsNoDeletionsWithOrgApacheLuceneIndexFieldsWriter:(OrgApacheLuceneIndexFieldsWriter *)fieldsWriter
                              withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                             withOrgApacheLuceneIndexFieldsReader:(OrgApacheLuceneIndexFieldsReader *)matchingFieldsReader {
  return OrgApacheLuceneIndexSegmentMerger_copyFieldsNoDeletionsWithOrgApacheLuceneIndexFieldsWriter_withOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexFieldsReader_(self, fieldsWriter, reader, matchingFieldsReader);
}

- (void)mergeVectors {
  OrgApacheLuceneIndexSegmentMerger_mergeVectors(self);
}

- (void)copyVectorsWithDeletionsWithOrgApacheLuceneIndexTermVectorsWriter:(OrgApacheLuceneIndexTermVectorsWriter *)termVectorsWriter
                                withOrgApacheLuceneIndexTermVectorsReader:(OrgApacheLuceneIndexTermVectorsReader *)matchingVectorsReader
                                      withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  OrgApacheLuceneIndexSegmentMerger_copyVectorsWithDeletionsWithOrgApacheLuceneIndexTermVectorsWriter_withOrgApacheLuceneIndexTermVectorsReader_withOrgApacheLuceneIndexIndexReader_(self, termVectorsWriter, matchingVectorsReader, reader);
}

- (void)copyVectorsNoDeletionsWithOrgApacheLuceneIndexTermVectorsWriter:(OrgApacheLuceneIndexTermVectorsWriter *)termVectorsWriter
                              withOrgApacheLuceneIndexTermVectorsReader:(OrgApacheLuceneIndexTermVectorsReader *)matchingVectorsReader
                                    withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  OrgApacheLuceneIndexSegmentMerger_copyVectorsNoDeletionsWithOrgApacheLuceneIndexTermVectorsWriter_withOrgApacheLuceneIndexTermVectorsReader_withOrgApacheLuceneIndexIndexReader_(self, termVectorsWriter, matchingVectorsReader, reader);
}

- (void)mergeTerms {
  OrgApacheLuceneIndexSegmentMerger_mergeTerms(self);
}

- (void)mergeTermInfosWithOrgApacheLuceneIndexFormatPostingsFieldsConsumer:(OrgApacheLuceneIndexFormatPostingsFieldsConsumer *)consumer {
  OrgApacheLuceneIndexSegmentMerger_mergeTermInfosWithOrgApacheLuceneIndexFormatPostingsFieldsConsumer_(self, consumer);
}

- (jint)appendPostingsWithOrgApacheLuceneIndexFormatPostingsTermsConsumer:(OrgApacheLuceneIndexFormatPostingsTermsConsumer *)termsConsumer
                            withOrgApacheLuceneIndexSegmentMergeInfoArray:(IOSObjectArray *)smis
                                                                  withInt:(jint)n {
  return OrgApacheLuceneIndexSegmentMerger_appendPostingsWithOrgApacheLuceneIndexFormatPostingsTermsConsumer_withOrgApacheLuceneIndexSegmentMergeInfoArray_withInt_(self, termsConsumer, smis, n);
}

- (jboolean)getAnyNonBulkMerges {
  JreAssert((matchedCount_ <= [((id<JavaUtilList>) nil_chk(readers_)) size]), (@"org/apache/lucene/index/SegmentMerger.java:620 condition failed: assert matchedCount <= readers.size();"));
  return matchedCount_ != [((id<JavaUtilList>) nil_chk(readers_)) size];
}

- (void)mergeNorms {
  OrgApacheLuceneIndexSegmentMerger_mergeNorms(self);
}

- (void)dealloc {
  RELEASE_(directory_);
  RELEASE_(segment_);
  RELEASE_(readers_);
  RELEASE_(fieldInfos_);
  RELEASE_(checkAbort_);
  RELEASE_(segmentWriteState_);
  RELEASE_(payloadProcessorProvider_);
  RELEASE_(matchingSegmentReaders_);
  RELEASE_(rawDocLengths_);
  RELEASE_(rawDocLengths2_);
  RELEASE_(queue_);
  RELEASE_(indexOptions_);
  RELEASE_(payloadBuffer_);
  RELEASE_(docMaps_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexFieldInfos;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x10, -1, -1, 3, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x10, 4, 5, 6, 7, -1, -1 },
    { NULL, "V", 0xa, 8, 9, 6, 10, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, 3, -1, -1, -1 },
    { NULL, "I", 0x2, 11, 12, 13, -1, -1, -1 },
    { NULL, "I", 0x2, 14, 12, 13, -1, -1, -1 },
    { NULL, "V", 0x12, -1, -1, 6, -1, -1, -1 },
    { NULL, "V", 0x2, 15, 16, 17, -1, -1, -1 },
    { NULL, "V", 0x2, 18, 16, 17, -1, -1, -1 },
    { NULL, "V", 0x12, -1, -1, 3, -1, -1, -1 },
    { NULL, "V", 0x12, 19, 20, 3, -1, -1, -1 },
    { NULL, "I", 0x12, 21, 22, 3, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneStoreDirectory:withInt:withNSString:withOrgApacheLuceneIndexMergePolicy_OneMerge:withOrgApacheLuceneIndexPayloadProcessorProvider:withOrgApacheLuceneIndexFieldInfos:);
  methods[1].selector = @selector(fieldInfos);
  methods[2].selector = @selector(addWithOrgApacheLuceneIndexIndexReader:);
  methods[3].selector = @selector(merge);
  methods[4].selector = @selector(createCompoundFileWithNSString:withOrgApacheLuceneIndexSegmentInfo:);
  methods[5].selector = @selector(addIndexedWithOrgApacheLuceneIndexIndexReader:withOrgApacheLuceneIndexFieldInfos:withJavaUtilCollection:withBoolean:withBoolean:withBoolean:withBoolean:withOrgApacheLuceneIndexFieldInfo_IndexOptions:);
  methods[6].selector = @selector(getMatchedSubReaderCount);
  methods[7].selector = @selector(setMatchingSegmentReaders);
  methods[8].selector = @selector(mergeFields);
  methods[9].selector = @selector(copyFieldsWithDeletionsWithOrgApacheLuceneIndexFieldsWriter:withOrgApacheLuceneIndexIndexReader:withOrgApacheLuceneIndexFieldsReader:);
  methods[10].selector = @selector(copyFieldsNoDeletionsWithOrgApacheLuceneIndexFieldsWriter:withOrgApacheLuceneIndexIndexReader:withOrgApacheLuceneIndexFieldsReader:);
  methods[11].selector = @selector(mergeVectors);
  methods[12].selector = @selector(copyVectorsWithDeletionsWithOrgApacheLuceneIndexTermVectorsWriter:withOrgApacheLuceneIndexTermVectorsReader:withOrgApacheLuceneIndexIndexReader:);
  methods[13].selector = @selector(copyVectorsNoDeletionsWithOrgApacheLuceneIndexTermVectorsWriter:withOrgApacheLuceneIndexTermVectorsReader:withOrgApacheLuceneIndexIndexReader:);
  methods[14].selector = @selector(mergeTerms);
  methods[15].selector = @selector(mergeTermInfosWithOrgApacheLuceneIndexFormatPostingsFieldsConsumer:);
  methods[16].selector = @selector(appendPostingsWithOrgApacheLuceneIndexFormatPostingsTermsConsumer:withOrgApacheLuceneIndexSegmentMergeInfoArray:withInt:);
  methods[17].selector = @selector(getAnyNonBulkMerges);
  methods[18].selector = @selector(mergeNorms);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "directory_", "LOrgApacheLuceneStoreDirectory;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "segment_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "termIndexInterval_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "readers_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 23, -1 },
    { "fieldInfos_", "LOrgApacheLuceneIndexFieldInfos;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "mergedDocs_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "checkAbort_", "LOrgApacheLuceneIndexSegmentMerger_CheckAbort;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "MAX_RAW_MERGE_DOCS", "I", .constantValue.asInt = OrgApacheLuceneIndexSegmentMerger_MAX_RAW_MERGE_DOCS, 0x1a, -1, -1, -1, -1 },
    { "segmentWriteState_", "LOrgApacheLuceneIndexSegmentWriteState;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "payloadProcessorProvider_", "LOrgApacheLuceneIndexPayloadProcessorProvider;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "matchingSegmentReaders_", "[LOrgApacheLuceneIndexSegmentReader;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "rawDocLengths_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "rawDocLengths2_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "matchedCount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "queue_", "LOrgApacheLuceneIndexSegmentMergeQueue;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "indexOptions_", "LOrgApacheLuceneIndexFieldInfo_IndexOptions;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "payloadBuffer_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "docMaps_", "[[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneStoreDirectory;ILNSString;LOrgApacheLuceneIndexMergePolicy_OneMerge;LOrgApacheLuceneIndexPayloadProcessorProvider;LOrgApacheLuceneIndexFieldInfos;", "add", "LOrgApacheLuceneIndexIndexReader;", "LOrgApacheLuceneIndexCorruptIndexException;LJavaIoIOException;", "createCompoundFile", "LNSString;LOrgApacheLuceneIndexSegmentInfo;", "LJavaIoIOException;", "(Ljava/lang/String;Lorg/apache/lucene/index/SegmentInfo;)Ljava/util/Collection<Ljava/lang/String;>;", "addIndexed", "LOrgApacheLuceneIndexIndexReader;LOrgApacheLuceneIndexFieldInfos;LJavaUtilCollection;ZZZZLOrgApacheLuceneIndexFieldInfo_IndexOptions;", "(Lorg/apache/lucene/index/IndexReader;Lorg/apache/lucene/index/FieldInfos;Ljava/util/Collection<Ljava/lang/String;>;ZZZZLorg/apache/lucene/index/FieldInfo$IndexOptions;)V", "copyFieldsWithDeletions", "LOrgApacheLuceneIndexFieldsWriter;LOrgApacheLuceneIndexIndexReader;LOrgApacheLuceneIndexFieldsReader;", "LJavaIoIOException;LOrgApacheLuceneIndexMergePolicy_MergeAbortedException;LOrgApacheLuceneIndexCorruptIndexException;", "copyFieldsNoDeletions", "copyVectorsWithDeletions", "LOrgApacheLuceneIndexTermVectorsWriter;LOrgApacheLuceneIndexTermVectorsReader;LOrgApacheLuceneIndexIndexReader;", "LJavaIoIOException;LOrgApacheLuceneIndexMergePolicy_MergeAbortedException;", "copyVectorsNoDeletions", "mergeTermInfos", "LOrgApacheLuceneIndexFormatPostingsFieldsConsumer;", "appendPostings", "LOrgApacheLuceneIndexFormatPostingsTermsConsumer;[LOrgApacheLuceneIndexSegmentMergeInfo;I", "Ljava/util/List<Lorg/apache/lucene/index/IndexReader;>;", "LOrgApacheLuceneIndexSegmentMerger_CheckAbort;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexSegmentMerger = { "SegmentMerger", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x10, 19, 18, -1, 24, -1, -1, -1 };
  return &_OrgApacheLuceneIndexSegmentMerger;
}

@end

void OrgApacheLuceneIndexSegmentMerger_initWithOrgApacheLuceneStoreDirectory_withInt_withNSString_withOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneIndexPayloadProcessorProvider_withOrgApacheLuceneIndexFieldInfos_(OrgApacheLuceneIndexSegmentMerger *self, OrgApacheLuceneStoreDirectory *dir, jint termIndexInterval, NSString *name, OrgApacheLuceneIndexMergePolicy_OneMerge *merge, OrgApacheLuceneIndexPayloadProcessorProvider *payloadProcessorProvider, OrgApacheLuceneIndexFieldInfos *fieldInfos) {
  NSObject_init(self);
  self->termIndexInterval_ = OrgApacheLuceneIndexIndexWriterConfig_DEFAULT_TERM_INDEX_INTERVAL;
  JreStrongAssignAndConsume(&self->readers_, new_JavaUtilArrayList_init());
  JreStrongAssign(&self->queue_, nil);
  JreStrongAssign(&self->payloadProcessorProvider_, payloadProcessorProvider);
  JreStrongAssign(&self->directory_, dir);
  JreStrongAssign(&self->fieldInfos_, fieldInfos);
  JreStrongAssign(&self->segment_, name);
  if (merge != nil) {
    JreStrongAssignAndConsume(&self->checkAbort_, new_OrgApacheLuceneIndexSegmentMerger_CheckAbort_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneStoreDirectory_(merge, self->directory_));
  }
  else {
    JreStrongAssignAndConsume(&self->checkAbort_, new_OrgApacheLuceneIndexSegmentMerger_1_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneStoreDirectory_(nil, nil));
  }
  self->termIndexInterval_ = termIndexInterval;
}

OrgApacheLuceneIndexSegmentMerger *new_OrgApacheLuceneIndexSegmentMerger_initWithOrgApacheLuceneStoreDirectory_withInt_withNSString_withOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneIndexPayloadProcessorProvider_withOrgApacheLuceneIndexFieldInfos_(OrgApacheLuceneStoreDirectory *dir, jint termIndexInterval, NSString *name, OrgApacheLuceneIndexMergePolicy_OneMerge *merge, OrgApacheLuceneIndexPayloadProcessorProvider *payloadProcessorProvider, OrgApacheLuceneIndexFieldInfos *fieldInfos) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexSegmentMerger, initWithOrgApacheLuceneStoreDirectory_withInt_withNSString_withOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneIndexPayloadProcessorProvider_withOrgApacheLuceneIndexFieldInfos_, dir, termIndexInterval, name, merge, payloadProcessorProvider, fieldInfos)
}

OrgApacheLuceneIndexSegmentMerger *create_OrgApacheLuceneIndexSegmentMerger_initWithOrgApacheLuceneStoreDirectory_withInt_withNSString_withOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneIndexPayloadProcessorProvider_withOrgApacheLuceneIndexFieldInfos_(OrgApacheLuceneStoreDirectory *dir, jint termIndexInterval, NSString *name, OrgApacheLuceneIndexMergePolicy_OneMerge *merge, OrgApacheLuceneIndexPayloadProcessorProvider *payloadProcessorProvider, OrgApacheLuceneIndexFieldInfos *fieldInfos) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexSegmentMerger, initWithOrgApacheLuceneStoreDirectory_withInt_withNSString_withOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneIndexPayloadProcessorProvider_withOrgApacheLuceneIndexFieldInfos_, dir, termIndexInterval, name, merge, payloadProcessorProvider, fieldInfos)
}

void OrgApacheLuceneIndexSegmentMerger_addIndexedWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexFieldInfos_withJavaUtilCollection_withBoolean_withBoolean_withBoolean_withBoolean_withOrgApacheLuceneIndexFieldInfo_IndexOptions_(OrgApacheLuceneIndexIndexReader *reader, OrgApacheLuceneIndexFieldInfos *fInfos, id<JavaUtilCollection> names, jboolean storeTermVectors, jboolean storePositionWithTermVector, jboolean storeOffsetWithTermVector, jboolean storePayloads, OrgApacheLuceneIndexFieldInfo_IndexOptions *indexOptions) {
  OrgApacheLuceneIndexSegmentMerger_initialize();
  for (NSString * __strong field in nil_chk(names)) {
    [((OrgApacheLuceneIndexFieldInfos *) nil_chk(fInfos)) addWithNSString:field withBoolean:true withBoolean:storeTermVectors withBoolean:storePositionWithTermVector withBoolean:storeOffsetWithTermVector withBoolean:![((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) hasNormsWithNSString:field] withBoolean:storePayloads withOrgApacheLuceneIndexFieldInfo_IndexOptions:indexOptions];
  }
}

void OrgApacheLuceneIndexSegmentMerger_setMatchingSegmentReaders(OrgApacheLuceneIndexSegmentMerger *self) {
  jint numReaders = [((id<JavaUtilList>) nil_chk(self->readers_)) size];
  JreStrongAssignAndConsume(&self->matchingSegmentReaders_, [IOSObjectArray newArrayWithLength:numReaders type:OrgApacheLuceneIndexSegmentReader_class_()]);
  for (jint i = 0; i < numReaders; i++) {
    OrgApacheLuceneIndexIndexReader *reader = [((id<JavaUtilList>) nil_chk(self->readers_)) getWithInt:i];
    if ([reader isKindOfClass:[OrgApacheLuceneIndexSegmentReader class]]) {
      OrgApacheLuceneIndexSegmentReader *segmentReader = (OrgApacheLuceneIndexSegmentReader *) cast_chk(reader, [OrgApacheLuceneIndexSegmentReader class]);
      jboolean same = true;
      OrgApacheLuceneIndexFieldInfos *segmentFieldInfos = [((OrgApacheLuceneIndexSegmentReader *) nil_chk(segmentReader)) fieldInfos];
      jint numFieldInfos = [((OrgApacheLuceneIndexFieldInfos *) nil_chk(segmentFieldInfos)) size];
      for (jint j = 0; j < numFieldInfos; j++) {
        if (![((NSString *) nil_chk([((OrgApacheLuceneIndexFieldInfos *) nil_chk(self->fieldInfos_)) fieldNameWithInt:j])) isEqual:[segmentFieldInfos fieldNameWithInt:j]]) {
          same = false;
          break;
        }
      }
      if (same) {
        IOSObjectArray_Set(nil_chk(self->matchingSegmentReaders_), i, segmentReader);
        self->matchedCount_++;
      }
    }
  }
  JreStrongAssignAndConsume(&self->rawDocLengths_, [IOSIntArray newArrayWithLength:OrgApacheLuceneIndexSegmentMerger_MAX_RAW_MERGE_DOCS]);
  JreStrongAssignAndConsume(&self->rawDocLengths2_, [IOSIntArray newArrayWithLength:OrgApacheLuceneIndexSegmentMerger_MAX_RAW_MERGE_DOCS]);
}

jint OrgApacheLuceneIndexSegmentMerger_mergeFields(OrgApacheLuceneIndexSegmentMerger *self) {
  for (OrgApacheLuceneIndexIndexReader * __strong reader in nil_chk(self->readers_)) {
    if ([reader isKindOfClass:[OrgApacheLuceneIndexSegmentReader class]]) {
      OrgApacheLuceneIndexSegmentReader *segmentReader = (OrgApacheLuceneIndexSegmentReader *) cast_chk(reader, [OrgApacheLuceneIndexSegmentReader class]);
      OrgApacheLuceneIndexFieldInfos *readerFieldInfos = [((OrgApacheLuceneIndexSegmentReader *) nil_chk(segmentReader)) fieldInfos];
      jint numReaderFieldInfos = [((OrgApacheLuceneIndexFieldInfos *) nil_chk(readerFieldInfos)) size];
      for (jint j = 0; j < numReaderFieldInfos; j++) {
        [((OrgApacheLuceneIndexFieldInfos *) nil_chk(self->fieldInfos_)) addWithOrgApacheLuceneIndexFieldInfo:[readerFieldInfos fieldInfoWithInt:j]];
      }
    }
    else {
      OrgApacheLuceneIndexSegmentMerger_addIndexedWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexFieldInfos_withJavaUtilCollection_withBoolean_withBoolean_withBoolean_withBoolean_withOrgApacheLuceneIndexFieldInfo_IndexOptions_(reader, self->fieldInfos_, [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) getFieldNamesWithOrgApacheLuceneIndexIndexReader_FieldOption:JreLoadEnum(OrgApacheLuceneIndexIndexReader_FieldOption, TERMVECTOR_WITH_POSITION_OFFSET)], true, true, true, false, JreLoadEnum(OrgApacheLuceneIndexFieldInfo_IndexOptions, DOCS_AND_FREQS_AND_POSITIONS));
      OrgApacheLuceneIndexSegmentMerger_addIndexedWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexFieldInfos_withJavaUtilCollection_withBoolean_withBoolean_withBoolean_withBoolean_withOrgApacheLuceneIndexFieldInfo_IndexOptions_(reader, self->fieldInfos_, [reader getFieldNamesWithOrgApacheLuceneIndexIndexReader_FieldOption:JreLoadEnum(OrgApacheLuceneIndexIndexReader_FieldOption, TERMVECTOR_WITH_POSITION)], true, true, false, false, JreLoadEnum(OrgApacheLuceneIndexFieldInfo_IndexOptions, DOCS_AND_FREQS_AND_POSITIONS));
      OrgApacheLuceneIndexSegmentMerger_addIndexedWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexFieldInfos_withJavaUtilCollection_withBoolean_withBoolean_withBoolean_withBoolean_withOrgApacheLuceneIndexFieldInfo_IndexOptions_(reader, self->fieldInfos_, [reader getFieldNamesWithOrgApacheLuceneIndexIndexReader_FieldOption:JreLoadEnum(OrgApacheLuceneIndexIndexReader_FieldOption, TERMVECTOR_WITH_OFFSET)], true, false, true, false, JreLoadEnum(OrgApacheLuceneIndexFieldInfo_IndexOptions, DOCS_AND_FREQS_AND_POSITIONS));
      OrgApacheLuceneIndexSegmentMerger_addIndexedWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexFieldInfos_withJavaUtilCollection_withBoolean_withBoolean_withBoolean_withBoolean_withOrgApacheLuceneIndexFieldInfo_IndexOptions_(reader, self->fieldInfos_, [reader getFieldNamesWithOrgApacheLuceneIndexIndexReader_FieldOption:JreLoadEnum(OrgApacheLuceneIndexIndexReader_FieldOption, TERMVECTOR)], true, false, false, false, JreLoadEnum(OrgApacheLuceneIndexFieldInfo_IndexOptions, DOCS_AND_FREQS_AND_POSITIONS));
      OrgApacheLuceneIndexSegmentMerger_addIndexedWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexFieldInfos_withJavaUtilCollection_withBoolean_withBoolean_withBoolean_withBoolean_withOrgApacheLuceneIndexFieldInfo_IndexOptions_(reader, self->fieldInfos_, [reader getFieldNamesWithOrgApacheLuceneIndexIndexReader_FieldOption:JreLoadEnum(OrgApacheLuceneIndexIndexReader_FieldOption, OMIT_POSITIONS)], false, false, false, false, JreLoadEnum(OrgApacheLuceneIndexFieldInfo_IndexOptions, DOCS_AND_FREQS));
      OrgApacheLuceneIndexSegmentMerger_addIndexedWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexFieldInfos_withJavaUtilCollection_withBoolean_withBoolean_withBoolean_withBoolean_withOrgApacheLuceneIndexFieldInfo_IndexOptions_(reader, self->fieldInfos_, [reader getFieldNamesWithOrgApacheLuceneIndexIndexReader_FieldOption:JreLoadEnum(OrgApacheLuceneIndexIndexReader_FieldOption, OMIT_TERM_FREQ_AND_POSITIONS)], false, false, false, false, JreLoadEnum(OrgApacheLuceneIndexFieldInfo_IndexOptions, DOCS_ONLY));
      OrgApacheLuceneIndexSegmentMerger_addIndexedWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexFieldInfos_withJavaUtilCollection_withBoolean_withBoolean_withBoolean_withBoolean_withOrgApacheLuceneIndexFieldInfo_IndexOptions_(reader, self->fieldInfos_, [reader getFieldNamesWithOrgApacheLuceneIndexIndexReader_FieldOption:JreLoadEnum(OrgApacheLuceneIndexIndexReader_FieldOption, STORES_PAYLOADS)], false, false, false, true, JreLoadEnum(OrgApacheLuceneIndexFieldInfo_IndexOptions, DOCS_AND_FREQS_AND_POSITIONS));
      OrgApacheLuceneIndexSegmentMerger_addIndexedWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexFieldInfos_withJavaUtilCollection_withBoolean_withBoolean_withBoolean_withBoolean_withOrgApacheLuceneIndexFieldInfo_IndexOptions_(reader, self->fieldInfos_, [reader getFieldNamesWithOrgApacheLuceneIndexIndexReader_FieldOption:JreLoadEnum(OrgApacheLuceneIndexIndexReader_FieldOption, INDEXED)], false, false, false, false, JreLoadEnum(OrgApacheLuceneIndexFieldInfo_IndexOptions, DOCS_AND_FREQS_AND_POSITIONS));
      [((OrgApacheLuceneIndexFieldInfos *) nil_chk(self->fieldInfos_)) addWithJavaUtilCollection:[reader getFieldNamesWithOrgApacheLuceneIndexIndexReader_FieldOption:JreLoadEnum(OrgApacheLuceneIndexIndexReader_FieldOption, UNINDEXED)] withBoolean:false];
    }
  }
  [((OrgApacheLuceneIndexFieldInfos *) nil_chk(self->fieldInfos_)) writeWithOrgApacheLuceneStoreDirectory:self->directory_ withNSString:JreStrcat("$$", self->segment_, @".fnm")];
  jint docCount = 0;
  OrgApacheLuceneIndexSegmentMerger_setMatchingSegmentReaders(self);
  OrgApacheLuceneIndexFieldsWriter *fieldsWriter = create_OrgApacheLuceneIndexFieldsWriter_initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_(self->directory_, self->segment_, self->fieldInfos_);
  @try {
    jint idx = 0;
    for (OrgApacheLuceneIndexIndexReader * __strong reader in nil_chk(self->readers_)) {
      OrgApacheLuceneIndexSegmentReader *matchingSegmentReader = IOSObjectArray_Get(nil_chk(self->matchingSegmentReaders_), idx++);
      OrgApacheLuceneIndexFieldsReader *matchingFieldsReader = nil;
      if (matchingSegmentReader != nil) {
        OrgApacheLuceneIndexFieldsReader *fieldsReader = [matchingSegmentReader getFieldsReader];
        if (fieldsReader != nil && [fieldsReader canReadRawDocs]) {
          matchingFieldsReader = fieldsReader;
        }
      }
      if ([((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) hasDeletions]) {
        docCount += OrgApacheLuceneIndexSegmentMerger_copyFieldsWithDeletionsWithOrgApacheLuceneIndexFieldsWriter_withOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexFieldsReader_(self, fieldsWriter, reader, matchingFieldsReader);
      }
      else {
        docCount += OrgApacheLuceneIndexSegmentMerger_copyFieldsNoDeletionsWithOrgApacheLuceneIndexFieldsWriter_withOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexFieldsReader_(self, fieldsWriter, reader, matchingFieldsReader);
      }
    }
  }
  @finally {
    [fieldsWriter close];
  }
  NSString *fileName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_(self->segment_, OrgApacheLuceneIndexIndexFileNames_FIELDS_INDEX_EXTENSION);
  jlong fdxFileLength = [((OrgApacheLuceneStoreDirectory *) nil_chk(self->directory_)) fileLengthWithNSString:fileName];
  if (4 + ((jlong) docCount) * 8 != fdxFileLength) @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$I$J$$$Z$", @"mergeFields produced an invalid result: docCount is ", docCount, @" but fdx file size is ", fdxFileLength, @" file=", fileName, @" file exists?=", [((OrgApacheLuceneStoreDirectory *) nil_chk(self->directory_)) fileExistsWithNSString:fileName], @"; now aborting this merge to prevent index corruption"));
  JreStrongAssignAndConsume(&self->segmentWriteState_, new_OrgApacheLuceneIndexSegmentWriteState_initWithJavaIoPrintStream_withOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_withInt_withInt_withOrgApacheLuceneIndexBufferedDeletes_(nil, self->directory_, self->segment_, self->fieldInfos_, docCount, self->termIndexInterval_, nil));
  return docCount;
}

jint OrgApacheLuceneIndexSegmentMerger_copyFieldsWithDeletionsWithOrgApacheLuceneIndexFieldsWriter_withOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexFieldsReader_(OrgApacheLuceneIndexSegmentMerger *self, OrgApacheLuceneIndexFieldsWriter *fieldsWriter, OrgApacheLuceneIndexIndexReader *reader, OrgApacheLuceneIndexFieldsReader *matchingFieldsReader) {
  jint docCount = 0;
  jint maxDoc = [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) maxDoc];
  if (matchingFieldsReader != nil) {
    for (jint j = 0; j < maxDoc; ) {
      if ([reader isDeletedWithInt:j]) {
        ++j;
        continue;
      }
      jint start = j;
      jint numDocs = 0;
      do {
        j++;
        numDocs++;
        if (j >= maxDoc) break;
        if ([reader isDeletedWithInt:j]) {
          j++;
          break;
        }
      }
      while (numDocs < OrgApacheLuceneIndexSegmentMerger_MAX_RAW_MERGE_DOCS);
      OrgApacheLuceneStoreIndexInput *stream = [matchingFieldsReader rawDocsWithIntArray:self->rawDocLengths_ withInt:start withInt:numDocs];
      [((OrgApacheLuceneIndexFieldsWriter *) nil_chk(fieldsWriter)) addRawDocumentsWithOrgApacheLuceneStoreIndexInput:stream withIntArray:self->rawDocLengths_ withInt:numDocs];
      docCount += numDocs;
      [((OrgApacheLuceneIndexSegmentMerger_CheckAbort *) nil_chk(self->checkAbort_)) workWithDouble:300 * numDocs];
    }
  }
  else {
    for (jint j = 0; j < maxDoc; j++) {
      if ([reader isDeletedWithInt:j]) {
        continue;
      }
      OrgApacheLuceneDocumentDocument *doc = [reader documentWithInt:j];
      [((OrgApacheLuceneIndexFieldsWriter *) nil_chk(fieldsWriter)) addDocumentWithOrgApacheLuceneDocumentDocument:doc];
      docCount++;
      [((OrgApacheLuceneIndexSegmentMerger_CheckAbort *) nil_chk(self->checkAbort_)) workWithDouble:300];
    }
  }
  return docCount;
}

jint OrgApacheLuceneIndexSegmentMerger_copyFieldsNoDeletionsWithOrgApacheLuceneIndexFieldsWriter_withOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexFieldsReader_(OrgApacheLuceneIndexSegmentMerger *self, OrgApacheLuceneIndexFieldsWriter *fieldsWriter, OrgApacheLuceneIndexIndexReader *reader, OrgApacheLuceneIndexFieldsReader *matchingFieldsReader) {
  jint maxDoc = [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) maxDoc];
  jint docCount = 0;
  if (matchingFieldsReader != nil) {
    while (docCount < maxDoc) {
      jint len = JavaLangMath_minWithInt_withInt_(OrgApacheLuceneIndexSegmentMerger_MAX_RAW_MERGE_DOCS, maxDoc - docCount);
      OrgApacheLuceneStoreIndexInput *stream = [matchingFieldsReader rawDocsWithIntArray:self->rawDocLengths_ withInt:docCount withInt:len];
      [((OrgApacheLuceneIndexFieldsWriter *) nil_chk(fieldsWriter)) addRawDocumentsWithOrgApacheLuceneStoreIndexInput:stream withIntArray:self->rawDocLengths_ withInt:len];
      docCount += len;
      [((OrgApacheLuceneIndexSegmentMerger_CheckAbort *) nil_chk(self->checkAbort_)) workWithDouble:300 * len];
    }
  }
  else {
    for (; docCount < maxDoc; docCount++) {
      OrgApacheLuceneDocumentDocument *doc = [reader documentWithInt:docCount];
      [((OrgApacheLuceneIndexFieldsWriter *) nil_chk(fieldsWriter)) addDocumentWithOrgApacheLuceneDocumentDocument:doc];
      [((OrgApacheLuceneIndexSegmentMerger_CheckAbort *) nil_chk(self->checkAbort_)) workWithDouble:300];
    }
  }
  return docCount;
}

void OrgApacheLuceneIndexSegmentMerger_mergeVectors(OrgApacheLuceneIndexSegmentMerger *self) {
  OrgApacheLuceneIndexTermVectorsWriter *termVectorsWriter = create_OrgApacheLuceneIndexTermVectorsWriter_initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_(self->directory_, self->segment_, self->fieldInfos_);
  @try {
    jint idx = 0;
    for (OrgApacheLuceneIndexIndexReader * __strong reader in nil_chk(self->readers_)) {
      OrgApacheLuceneIndexSegmentReader *matchingSegmentReader = IOSObjectArray_Get(nil_chk(self->matchingSegmentReaders_), idx++);
      OrgApacheLuceneIndexTermVectorsReader *matchingVectorsReader = nil;
      if (matchingSegmentReader != nil) {
        OrgApacheLuceneIndexTermVectorsReader *vectorsReader = [matchingSegmentReader getTermVectorsReader];
        if (vectorsReader != nil && [vectorsReader canReadRawDocs]) {
          matchingVectorsReader = vectorsReader;
        }
      }
      if ([((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) hasDeletions]) {
        OrgApacheLuceneIndexSegmentMerger_copyVectorsWithDeletionsWithOrgApacheLuceneIndexTermVectorsWriter_withOrgApacheLuceneIndexTermVectorsReader_withOrgApacheLuceneIndexIndexReader_(self, termVectorsWriter, matchingVectorsReader, reader);
      }
      else {
        OrgApacheLuceneIndexSegmentMerger_copyVectorsNoDeletionsWithOrgApacheLuceneIndexTermVectorsWriter_withOrgApacheLuceneIndexTermVectorsReader_withOrgApacheLuceneIndexIndexReader_(self, termVectorsWriter, matchingVectorsReader, reader);
      }
    }
  }
  @finally {
    [termVectorsWriter close];
  }
  NSString *fileName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_(self->segment_, OrgApacheLuceneIndexIndexFileNames_VECTORS_INDEX_EXTENSION);
  jlong tvxSize = [((OrgApacheLuceneStoreDirectory *) nil_chk(self->directory_)) fileLengthWithNSString:fileName];
  if (4 + ((jlong) self->mergedDocs_) * 16 != tvxSize) @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$I$J$$$Z$", @"mergeVectors produced an invalid result: mergedDocs is ", self->mergedDocs_, @" but tvx size is ", tvxSize, @" file=", fileName, @" file exists?=", [((OrgApacheLuceneStoreDirectory *) nil_chk(self->directory_)) fileExistsWithNSString:fileName], @"; now aborting this merge to prevent index corruption"));
}

void OrgApacheLuceneIndexSegmentMerger_copyVectorsWithDeletionsWithOrgApacheLuceneIndexTermVectorsWriter_withOrgApacheLuceneIndexTermVectorsReader_withOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneIndexSegmentMerger *self, OrgApacheLuceneIndexTermVectorsWriter *termVectorsWriter, OrgApacheLuceneIndexTermVectorsReader *matchingVectorsReader, OrgApacheLuceneIndexIndexReader *reader) {
  jint maxDoc = [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) maxDoc];
  if (matchingVectorsReader != nil) {
    for (jint docNum = 0; docNum < maxDoc; ) {
      if ([reader isDeletedWithInt:docNum]) {
        ++docNum;
        continue;
      }
      jint start = docNum;
      jint numDocs = 0;
      do {
        docNum++;
        numDocs++;
        if (docNum >= maxDoc) break;
        if ([reader isDeletedWithInt:docNum]) {
          docNum++;
          break;
        }
      }
      while (numDocs < OrgApacheLuceneIndexSegmentMerger_MAX_RAW_MERGE_DOCS);
      [matchingVectorsReader rawDocsWithIntArray:self->rawDocLengths_ withIntArray:self->rawDocLengths2_ withInt:start withInt:numDocs];
      [((OrgApacheLuceneIndexTermVectorsWriter *) nil_chk(termVectorsWriter)) addRawDocumentsWithOrgApacheLuceneIndexTermVectorsReader:matchingVectorsReader withIntArray:self->rawDocLengths_ withIntArray:self->rawDocLengths2_ withInt:numDocs];
      [((OrgApacheLuceneIndexSegmentMerger_CheckAbort *) nil_chk(self->checkAbort_)) workWithDouble:300 * numDocs];
    }
  }
  else {
    for (jint docNum = 0; docNum < maxDoc; docNum++) {
      if ([reader isDeletedWithInt:docNum]) {
        continue;
      }
      IOSObjectArray *vectors = [reader getTermFreqVectorsWithInt:docNum];
      [((OrgApacheLuceneIndexTermVectorsWriter *) nil_chk(termVectorsWriter)) addAllDocVectorsWithOrgApacheLuceneIndexTermFreqVectorArray:vectors];
      [((OrgApacheLuceneIndexSegmentMerger_CheckAbort *) nil_chk(self->checkAbort_)) workWithDouble:300];
    }
  }
}

void OrgApacheLuceneIndexSegmentMerger_copyVectorsNoDeletionsWithOrgApacheLuceneIndexTermVectorsWriter_withOrgApacheLuceneIndexTermVectorsReader_withOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneIndexSegmentMerger *self, OrgApacheLuceneIndexTermVectorsWriter *termVectorsWriter, OrgApacheLuceneIndexTermVectorsReader *matchingVectorsReader, OrgApacheLuceneIndexIndexReader *reader) {
  jint maxDoc = [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) maxDoc];
  if (matchingVectorsReader != nil) {
    jint docCount = 0;
    while (docCount < maxDoc) {
      jint len = JavaLangMath_minWithInt_withInt_(OrgApacheLuceneIndexSegmentMerger_MAX_RAW_MERGE_DOCS, maxDoc - docCount);
      [matchingVectorsReader rawDocsWithIntArray:self->rawDocLengths_ withIntArray:self->rawDocLengths2_ withInt:docCount withInt:len];
      [((OrgApacheLuceneIndexTermVectorsWriter *) nil_chk(termVectorsWriter)) addRawDocumentsWithOrgApacheLuceneIndexTermVectorsReader:matchingVectorsReader withIntArray:self->rawDocLengths_ withIntArray:self->rawDocLengths2_ withInt:len];
      docCount += len;
      [((OrgApacheLuceneIndexSegmentMerger_CheckAbort *) nil_chk(self->checkAbort_)) workWithDouble:300 * len];
    }
  }
  else {
    for (jint docNum = 0; docNum < maxDoc; docNum++) {
      IOSObjectArray *vectors = [reader getTermFreqVectorsWithInt:docNum];
      [((OrgApacheLuceneIndexTermVectorsWriter *) nil_chk(termVectorsWriter)) addAllDocVectorsWithOrgApacheLuceneIndexTermFreqVectorArray:vectors];
      [((OrgApacheLuceneIndexSegmentMerger_CheckAbort *) nil_chk(self->checkAbort_)) workWithDouble:300];
    }
  }
}

void OrgApacheLuceneIndexSegmentMerger_mergeTerms(OrgApacheLuceneIndexSegmentMerger *self) {
  OrgApacheLuceneIndexFormatPostingsFieldsConsumer *fieldsConsumer = create_OrgApacheLuceneIndexFormatPostingsFieldsWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withOrgApacheLuceneIndexFieldInfos_(self->segmentWriteState_, self->fieldInfos_);
  @try {
    JreStrongAssignAndConsume(&self->queue_, new_OrgApacheLuceneIndexSegmentMergeQueue_initWithInt_([((id<JavaUtilList>) nil_chk(self->readers_)) size]));
    OrgApacheLuceneIndexSegmentMerger_mergeTermInfosWithOrgApacheLuceneIndexFormatPostingsFieldsConsumer_(self, fieldsConsumer);
  }
  @finally {
    @try {
      [fieldsConsumer finish];
    }
    @finally {
      if (self->queue_ != nil) {
        [self->queue_ close];
      }
    }
  }
}

void OrgApacheLuceneIndexSegmentMerger_mergeTermInfosWithOrgApacheLuceneIndexFormatPostingsFieldsConsumer_(OrgApacheLuceneIndexSegmentMerger *self, OrgApacheLuceneIndexFormatPostingsFieldsConsumer *consumer) {
  jint base = 0;
  jint readerCount = [((id<JavaUtilList>) nil_chk(self->readers_)) size];
  for (jint i = 0; i < readerCount; i++) {
    OrgApacheLuceneIndexIndexReader *reader = [((id<JavaUtilList>) nil_chk(self->readers_)) getWithInt:i];
    OrgApacheLuceneIndexTermEnum *termEnum = [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) terms];
    OrgApacheLuceneIndexSegmentMergeInfo *smi = create_OrgApacheLuceneIndexSegmentMergeInfo_initWithInt_withOrgApacheLuceneIndexTermEnum_withOrgApacheLuceneIndexIndexReader_(base, termEnum, reader);
    if (self->payloadProcessorProvider_ != nil) {
      JreStrongAssign(&smi->dirPayloadProcessor_, [self->payloadProcessorProvider_ getDirProcessorWithOrgApacheLuceneStoreDirectory:[reader directory]]);
    }
    IOSIntArray *docMap = [smi getDocMap];
    if (docMap != nil) {
      if (self->docMaps_ == nil) {
        JreStrongAssignAndConsume(&self->docMaps_, [IOSObjectArray newArrayWithLength:readerCount type:IOSClass_intArray(1)]);
      }
      IOSObjectArray_Set(self->docMaps_, i, docMap);
    }
    base += [reader numDocs];
    JreAssert(([reader numDocs] == [reader maxDoc] - smi->delCount_), (@"org/apache/lucene/index/SegmentMerger.java:508 condition failed: assert reader.numDocs() == reader.maxDoc() - smi.delCount;"));
    if ([smi next]) [((OrgApacheLuceneIndexSegmentMergeQueue *) nil_chk(self->queue_)) addWithId:smi];
    else [smi close];
  }
  IOSObjectArray *match = [IOSObjectArray arrayWithLength:[((id<JavaUtilList>) nil_chk(self->readers_)) size] type:OrgApacheLuceneIndexSegmentMergeInfo_class_()];
  NSString *currentField = nil;
  OrgApacheLuceneIndexFormatPostingsTermsConsumer *termsConsumer = nil;
  while ([((OrgApacheLuceneIndexSegmentMergeQueue *) nil_chk(self->queue_)) size] > 0) {
    jint matchSize = 0;
    IOSObjectArray_Set(match, matchSize++, [((OrgApacheLuceneIndexSegmentMergeQueue *) nil_chk(self->queue_)) pop]);
    OrgApacheLuceneIndexTerm *term = ((OrgApacheLuceneIndexSegmentMergeInfo *) nil_chk(IOSObjectArray_Get(match, 0)))->term_;
    OrgApacheLuceneIndexSegmentMergeInfo *top = [((OrgApacheLuceneIndexSegmentMergeQueue *) nil_chk(self->queue_)) top];
    while (top != nil && [((OrgApacheLuceneIndexTerm *) nil_chk(term)) compareToWithId:top->term_] == 0) {
      IOSObjectArray_Set(match, matchSize++, [((OrgApacheLuceneIndexSegmentMergeQueue *) nil_chk(self->queue_)) pop]);
      top = [((OrgApacheLuceneIndexSegmentMergeQueue *) nil_chk(self->queue_)) top];
    }
    if (currentField != ((OrgApacheLuceneIndexTerm *) nil_chk(term))->field_) {
      currentField = term->field_;
      if (termsConsumer != nil) [termsConsumer finish];
      OrgApacheLuceneIndexFieldInfo *fieldInfo = [((OrgApacheLuceneIndexFieldInfos *) nil_chk(self->fieldInfos_)) fieldInfoWithNSString:currentField];
      termsConsumer = [((OrgApacheLuceneIndexFormatPostingsFieldsConsumer *) nil_chk(consumer)) addFieldWithOrgApacheLuceneIndexFieldInfo:fieldInfo];
      JreStrongAssign(&self->indexOptions_, ((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo))->indexOptions_);
    }
    jint df = OrgApacheLuceneIndexSegmentMerger_appendPostingsWithOrgApacheLuceneIndexFormatPostingsTermsConsumer_withOrgApacheLuceneIndexSegmentMergeInfoArray_withInt_(self, termsConsumer, match, matchSize);
    [((OrgApacheLuceneIndexSegmentMerger_CheckAbort *) nil_chk(self->checkAbort_)) workWithDouble:df / 3.0];
    while (matchSize > 0) {
      OrgApacheLuceneIndexSegmentMergeInfo *smi = IOSObjectArray_Get(match, --matchSize);
      if ([((OrgApacheLuceneIndexSegmentMergeInfo *) nil_chk(smi)) next]) [((OrgApacheLuceneIndexSegmentMergeQueue *) nil_chk(self->queue_)) addWithId:smi];
      else [smi close];
    }
  }
}

jint OrgApacheLuceneIndexSegmentMerger_appendPostingsWithOrgApacheLuceneIndexFormatPostingsTermsConsumer_withOrgApacheLuceneIndexSegmentMergeInfoArray_withInt_(OrgApacheLuceneIndexSegmentMerger *self, OrgApacheLuceneIndexFormatPostingsTermsConsumer *termsConsumer, IOSObjectArray *smis, jint n) {
  OrgApacheLuceneIndexFormatPostingsDocsConsumer *docConsumer = [((OrgApacheLuceneIndexFormatPostingsTermsConsumer *) nil_chk(termsConsumer)) addTermWithNSString:((OrgApacheLuceneIndexTerm *) nil_chk(((OrgApacheLuceneIndexSegmentMergeInfo *) nil_chk(IOSObjectArray_Get(nil_chk(smis), 0)))->term_))->text_];
  jint df = 0;
  for (jint i = 0; i < n; i++) {
    OrgApacheLuceneIndexSegmentMergeInfo *smi = IOSObjectArray_Get(smis, i);
    id<OrgApacheLuceneIndexTermPositions> postings = [((OrgApacheLuceneIndexSegmentMergeInfo *) nil_chk(smi)) getPositions];
    JreAssert((postings != nil), (@"org/apache/lucene/index/SegmentMerger.java:575 condition failed: assert postings != null;"));
    jint base = smi->base_;
    IOSIntArray *docMap = [smi getDocMap];
    [((id<OrgApacheLuceneIndexTermPositions>) nil_chk(postings)) seekWithOrgApacheLuceneIndexTermEnum:smi->termEnum_];
    OrgApacheLuceneIndexPayloadProcessorProvider_PayloadProcessor *payloadProcessor = nil;
    if (smi->dirPayloadProcessor_ != nil) {
      payloadProcessor = [smi->dirPayloadProcessor_ getProcessorWithOrgApacheLuceneIndexTerm:smi->term_];
    }
    while ([postings next]) {
      df++;
      jint doc = [postings doc];
      if (docMap != nil) doc = IOSIntArray_Get(docMap, doc);
      doc += base;
      jint freq = [postings freq];
      OrgApacheLuceneIndexFormatPostingsPositionsConsumer *posConsumer = [((OrgApacheLuceneIndexFormatPostingsDocsConsumer *) nil_chk(docConsumer)) addDocWithInt:doc withInt:freq];
      if (self->indexOptions_ == JreLoadEnum(OrgApacheLuceneIndexFieldInfo_IndexOptions, DOCS_AND_FREQS_AND_POSITIONS)) {
        for (jint j = 0; j < freq; j++) {
          jint position = [postings nextPosition];
          jint payloadLength = [postings getPayloadLength];
          if (payloadLength > 0) {
            if (self->payloadBuffer_ == nil || self->payloadBuffer_->size_ < payloadLength) JreStrongAssignAndConsume(&self->payloadBuffer_, [IOSByteArray newArrayWithLength:payloadLength]);
            [postings getPayloadWithByteArray:self->payloadBuffer_ withInt:0];
            if (payloadProcessor != nil) {
              JreStrongAssign(&self->payloadBuffer_, [payloadProcessor processPayloadWithByteArray:self->payloadBuffer_ withInt:0 withInt:payloadLength]);
              payloadLength = [payloadProcessor payloadLength];
            }
          }
          [((OrgApacheLuceneIndexFormatPostingsPositionsConsumer *) nil_chk(posConsumer)) addPositionWithInt:position withByteArray:self->payloadBuffer_ withInt:0 withInt:payloadLength];
        }
        [((OrgApacheLuceneIndexFormatPostingsPositionsConsumer *) nil_chk(posConsumer)) finish];
      }
    }
  }
  [((OrgApacheLuceneIndexFormatPostingsDocsConsumer *) nil_chk(docConsumer)) finish];
  return df;
}

void OrgApacheLuceneIndexSegmentMerger_mergeNorms(OrgApacheLuceneIndexSegmentMerger *self) {
  jint bufferSize = 0;
  for (OrgApacheLuceneIndexIndexReader * __strong reader in nil_chk(self->readers_)) {
    bufferSize = JavaLangMath_maxWithInt_withInt_(bufferSize, [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) maxDoc]);
  }
  IOSByteArray *normBuffer = nil;
  OrgApacheLuceneStoreIndexOutput *output = nil;
  jboolean success = false;
  @try {
    jint numFieldInfos = [((OrgApacheLuceneIndexFieldInfos *) nil_chk(self->fieldInfos_)) size];
    for (jint i = 0; i < numFieldInfos; i++) {
      OrgApacheLuceneIndexFieldInfo *fi = [self->fieldInfos_ fieldInfoWithInt:i];
      if (((OrgApacheLuceneIndexFieldInfo *) nil_chk(fi))->isIndexed_ && !fi->omitNorms_) {
        if (output == nil) {
          output = [((OrgApacheLuceneStoreDirectory *) nil_chk(self->directory_)) createOutputWithNSString:OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_(self->segment_, OrgApacheLuceneIndexIndexFileNames_NORMS_EXTENSION)];
          [((OrgApacheLuceneStoreIndexOutput *) nil_chk(output)) writeBytesWithByteArray:JreLoadStatic(OrgApacheLuceneIndexSegmentNorms, NORMS_HEADER) withInt:((IOSByteArray *) nil_chk(JreLoadStatic(OrgApacheLuceneIndexSegmentNorms, NORMS_HEADER)))->size_];
        }
        if (normBuffer == nil) {
          normBuffer = [IOSByteArray arrayWithLength:bufferSize];
        }
        for (OrgApacheLuceneIndexIndexReader * __strong reader in nil_chk(self->readers_)) {
          jint maxDoc = [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) maxDoc];
          [reader normsWithNSString:fi->name_ withByteArray:normBuffer withInt:0];
          if (![reader hasDeletions]) {
            [output writeBytesWithByteArray:normBuffer withInt:maxDoc];
          }
          else {
            for (jint k = 0; k < maxDoc; k++) {
              if (![reader isDeletedWithInt:k]) {
                [output writeByteWithByte:IOSByteArray_Get(normBuffer, k)];
              }
            }
          }
          [((OrgApacheLuceneIndexSegmentMerger_CheckAbort *) nil_chk(self->checkAbort_)) workWithDouble:maxDoc];
        }
      }
    }
    success = true;
  }
  @finally {
    if (success) {
      OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ output } count:1 type:JavaIoCloseable_class_()]);
    }
    else {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ output } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexSegmentMerger)

@implementation OrgApacheLuceneIndexSegmentMerger_CheckAbort

- (instancetype)initWithOrgApacheLuceneIndexMergePolicy_OneMerge:(OrgApacheLuceneIndexMergePolicy_OneMerge *)merge
                               withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir {
  OrgApacheLuceneIndexSegmentMerger_CheckAbort_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneStoreDirectory_(self, merge, dir);
  return self;
}

- (void)workWithDouble:(jdouble)units {
  JrePlusAssignDoubleD(&workCount_, units);
  if (workCount_ >= 10000.0) {
    [((OrgApacheLuceneIndexMergePolicy_OneMerge *) nil_chk(merge_)) checkAbortedWithOrgApacheLuceneStoreDirectory:dir_];
    workCount_ = 0;
  }
}

- (void)dealloc {
  RELEASE_(merge_);
  RELEASE_(dir_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexMergePolicy_OneMerge:withOrgApacheLuceneStoreDirectory:);
  methods[1].selector = @selector(workWithDouble:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "workCount_", "D", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "merge_", "LOrgApacheLuceneIndexMergePolicy_OneMerge;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "dir_", "LOrgApacheLuceneStoreDirectory;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexMergePolicy_OneMerge;LOrgApacheLuceneStoreDirectory;", "work", "D", "LOrgApacheLuceneIndexMergePolicy_MergeAbortedException;", "LOrgApacheLuceneIndexSegmentMerger;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexSegmentMerger_CheckAbort = { "CheckAbort", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x8, 2, 3, 4, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexSegmentMerger_CheckAbort;
}

@end

void OrgApacheLuceneIndexSegmentMerger_CheckAbort_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneStoreDirectory_(OrgApacheLuceneIndexSegmentMerger_CheckAbort *self, OrgApacheLuceneIndexMergePolicy_OneMerge *merge, OrgApacheLuceneStoreDirectory *dir) {
  NSObject_init(self);
  JreStrongAssign(&self->merge_, merge);
  JreStrongAssign(&self->dir_, dir);
}

OrgApacheLuceneIndexSegmentMerger_CheckAbort *new_OrgApacheLuceneIndexSegmentMerger_CheckAbort_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneStoreDirectory_(OrgApacheLuceneIndexMergePolicy_OneMerge *merge, OrgApacheLuceneStoreDirectory *dir) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexSegmentMerger_CheckAbort, initWithOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneStoreDirectory_, merge, dir)
}

OrgApacheLuceneIndexSegmentMerger_CheckAbort *create_OrgApacheLuceneIndexSegmentMerger_CheckAbort_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneStoreDirectory_(OrgApacheLuceneIndexMergePolicy_OneMerge *merge, OrgApacheLuceneStoreDirectory *dir) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexSegmentMerger_CheckAbort, initWithOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneStoreDirectory_, merge, dir)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexSegmentMerger_CheckAbort)

@implementation OrgApacheLuceneIndexSegmentMerger_1

- (instancetype)initWithOrgApacheLuceneIndexMergePolicy_OneMerge:(OrgApacheLuceneIndexMergePolicy_OneMerge *)merge
                               withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir {
  OrgApacheLuceneIndexSegmentMerger_1_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneStoreDirectory_(self, merge, dir);
  return self;
}

- (void)workWithDouble:(jdouble)units {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexMergePolicy_OneMerge:withOrgApacheLuceneStoreDirectory:);
  methods[1].selector = @selector(workWithDouble:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexMergePolicy_OneMerge;LOrgApacheLuceneStoreDirectory;", "work", "D", "LOrgApacheLuceneIndexMergePolicy_MergeAbortedException;", "LOrgApacheLuceneIndexSegmentMerger;", "initWithOrgApacheLuceneStoreDirectory:withInt:withNSString:withOrgApacheLuceneIndexMergePolicy_OneMerge:withOrgApacheLuceneIndexPayloadProcessorProvider:withOrgApacheLuceneIndexFieldInfos:" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexSegmentMerger_1 = { "", "org.apache.lucene.index", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 4, -1, 5, -1, -1 };
  return &_OrgApacheLuceneIndexSegmentMerger_1;
}

@end

void OrgApacheLuceneIndexSegmentMerger_1_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneStoreDirectory_(OrgApacheLuceneIndexSegmentMerger_1 *self, OrgApacheLuceneIndexMergePolicy_OneMerge *merge, OrgApacheLuceneStoreDirectory *dir) {
  OrgApacheLuceneIndexSegmentMerger_CheckAbort_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneStoreDirectory_(self, merge, dir);
}

OrgApacheLuceneIndexSegmentMerger_1 *new_OrgApacheLuceneIndexSegmentMerger_1_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneStoreDirectory_(OrgApacheLuceneIndexMergePolicy_OneMerge *merge, OrgApacheLuceneStoreDirectory *dir) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexSegmentMerger_1, initWithOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneStoreDirectory_, merge, dir)
}

OrgApacheLuceneIndexSegmentMerger_1 *create_OrgApacheLuceneIndexSegmentMerger_1_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneStoreDirectory_(OrgApacheLuceneIndexMergePolicy_OneMerge *merge, OrgApacheLuceneStoreDirectory *dir) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexSegmentMerger_1, initWithOrgApacheLuceneIndexMergePolicy_OneMerge_withOrgApacheLuceneStoreDirectory_, merge, dir)
}
