//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/index/ReadOnlySegmentReader.java
//

#include "J2ObjC_source.h"
#include "java/lang/UnsupportedOperationException.h"
#include "org/apache/lucene/index/ReadOnlySegmentReader.h"
#include "org/apache/lucene/index/SegmentReader.h"
#include "org/apache/lucene/util/BitVector.h"

@implementation OrgApacheLuceneIndexReadOnlySegmentReader

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexReadOnlySegmentReader_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)noWrite {
  OrgApacheLuceneIndexReadOnlySegmentReader_noWrite();
}

- (void)acquireWriteLock {
  OrgApacheLuceneIndexReadOnlySegmentReader_noWrite();
}

- (jboolean)isDeletedWithInt:(jint)n {
  return deletedDocs_ != nil && [deletedDocs_ getWithInt:n];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x8, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(noWrite);
  methods[2].selector = @selector(acquireWriteLock);
  methods[3].selector = @selector(isDeletedWithInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "isDeleted", "I" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexReadOnlySegmentReader = { "ReadOnlySegmentReader", "org.apache.lucene.index", ptrTable, methods, NULL, 7, 0x0, 4, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexReadOnlySegmentReader;
}

@end

void OrgApacheLuceneIndexReadOnlySegmentReader_init(OrgApacheLuceneIndexReadOnlySegmentReader *self) {
  OrgApacheLuceneIndexSegmentReader_init(self);
}

OrgApacheLuceneIndexReadOnlySegmentReader *new_OrgApacheLuceneIndexReadOnlySegmentReader_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexReadOnlySegmentReader, init)
}

OrgApacheLuceneIndexReadOnlySegmentReader *create_OrgApacheLuceneIndexReadOnlySegmentReader_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexReadOnlySegmentReader, init)
}

void OrgApacheLuceneIndexReadOnlySegmentReader_noWrite() {
  OrgApacheLuceneIndexReadOnlySegmentReader_initialize();
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"This IndexReader cannot make any changes to the index (it was opened with readOnly = true)");
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexReadOnlySegmentReader)
