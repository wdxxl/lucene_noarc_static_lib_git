//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/index/FieldsReader.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/io/Reader.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/zip/DataFormatException.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/document/AbstractField.h"
#include "org/apache/lucene/document/CompressionTools.h"
#include "org/apache/lucene/document/Document.h"
#include "org/apache/lucene/document/Field.h"
#include "org/apache/lucene/document/FieldSelector.h"
#include "org/apache/lucene/document/FieldSelectorResult.h"
#include "org/apache/lucene/document/Fieldable.h"
#include "org/apache/lucene/document/NumericField.h"
#include "org/apache/lucene/index/CorruptIndexException.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/FieldReaderException.h"
#include "org/apache/lucene/index/FieldsReader.h"
#include "org/apache/lucene/index/FieldsWriter.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/IndexFormatTooNewException.h"
#include "org/apache/lucene/store/AlreadyClosedException.h"
#include "org/apache/lucene/store/BufferedIndexInput.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/util/CloseableThreadLocal.h"
#include "org/apache/lucene/util/IOUtils.h"

@interface OrgApacheLuceneIndexFieldsReader () {
 @public
  OrgApacheLuceneIndexFieldInfos *fieldInfos_;
  OrgApacheLuceneStoreIndexInput *cloneableFieldsStream_;
  OrgApacheLuceneStoreIndexInput *fieldsStream_;
  OrgApacheLuceneStoreIndexInput *cloneableIndexStream_;
  OrgApacheLuceneStoreIndexInput *indexStream_;
  jint numTotalDocs_;
  jint size_;
  jboolean closed_;
  jint format_;
  jint formatSize_;
  jint docStoreOffset_;
  OrgApacheLuceneUtilCloseableThreadLocal *fieldsStreamTL_;
  jboolean isOriginal_;
}

- (instancetype)initWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)fieldInfos
                                               withInt:(jint)numTotalDocs
                                               withInt:(jint)size
                                               withInt:(jint)format
                                               withInt:(jint)formatSize
                                               withInt:(jint)docStoreOffset
                    withOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)cloneableFieldsStream
                    withOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)cloneableIndexStream;

- (void)ensureOpen;

- (void)seekIndexWithInt:(jint)docID;

- (void)skipFieldWithBoolean:(jboolean)binary
                 withBoolean:(jboolean)compressed
                     withInt:(jint)numeric;

- (void)skipFieldBytesWithBoolean:(jboolean)binary
                      withBoolean:(jboolean)compressed
                          withInt:(jint)toRead;

- (OrgApacheLuceneDocumentNumericField *)loadNumericFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fi
                                                                                   withInt:(jint)numeric;

- (void)addFieldLazyWithOrgApacheLuceneDocumentDocument:(OrgApacheLuceneDocumentDocument *)doc
                      withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fi
                                            withBoolean:(jboolean)binary
                                            withBoolean:(jboolean)compressed
                                            withBoolean:(jboolean)tokenize
                                            withBoolean:(jboolean)cacheResult
                                                withInt:(jint)numeric;

- (void)addFieldWithOrgApacheLuceneDocumentDocument:(OrgApacheLuceneDocumentDocument *)doc
                  withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fi
                                        withBoolean:(jboolean)binary
                                        withBoolean:(jboolean)compressed
                                        withBoolean:(jboolean)tokenize
                                            withInt:(jint)numeric;

- (jint)addFieldSizeWithOrgApacheLuceneDocumentDocument:(OrgApacheLuceneDocumentDocument *)doc
                      withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fi
                                            withBoolean:(jboolean)binary
                                            withBoolean:(jboolean)compressed
                                                withInt:(jint)numeric;

- (IOSByteArray *)uncompressWithByteArray:(IOSByteArray *)b;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexFieldsReader, fieldInfos_, OrgApacheLuceneIndexFieldInfos *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexFieldsReader, cloneableFieldsStream_, OrgApacheLuceneStoreIndexInput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexFieldsReader, fieldsStream_, OrgApacheLuceneStoreIndexInput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexFieldsReader, cloneableIndexStream_, OrgApacheLuceneStoreIndexInput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexFieldsReader, indexStream_, OrgApacheLuceneStoreIndexInput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexFieldsReader, fieldsStreamTL_, OrgApacheLuceneUtilCloseableThreadLocal *)

__attribute__((unused)) static void OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneIndexFieldInfos_withInt_withInt_withInt_withInt_withInt_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneIndexFieldsReader *self, OrgApacheLuceneIndexFieldInfos *fieldInfos, jint numTotalDocs, jint size, jint format, jint formatSize, jint docStoreOffset, OrgApacheLuceneStoreIndexInput *cloneableFieldsStream, OrgApacheLuceneStoreIndexInput *cloneableIndexStream);

__attribute__((unused)) static OrgApacheLuceneIndexFieldsReader *new_OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneIndexFieldInfos_withInt_withInt_withInt_withInt_withInt_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneIndexFieldInfos *fieldInfos, jint numTotalDocs, jint size, jint format, jint formatSize, jint docStoreOffset, OrgApacheLuceneStoreIndexInput *cloneableFieldsStream, OrgApacheLuceneStoreIndexInput *cloneableIndexStream) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexFieldsReader *create_OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneIndexFieldInfos_withInt_withInt_withInt_withInt_withInt_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneIndexFieldInfos *fieldInfos, jint numTotalDocs, jint size, jint format, jint formatSize, jint docStoreOffset, OrgApacheLuceneStoreIndexInput *cloneableFieldsStream, OrgApacheLuceneStoreIndexInput *cloneableIndexStream);

__attribute__((unused)) static void OrgApacheLuceneIndexFieldsReader_ensureOpen(OrgApacheLuceneIndexFieldsReader *self);

__attribute__((unused)) static void OrgApacheLuceneIndexFieldsReader_close(OrgApacheLuceneIndexFieldsReader *self);

__attribute__((unused)) static void OrgApacheLuceneIndexFieldsReader_seekIndexWithInt_(OrgApacheLuceneIndexFieldsReader *self, jint docID);

__attribute__((unused)) static void OrgApacheLuceneIndexFieldsReader_skipFieldWithBoolean_withBoolean_withInt_(OrgApacheLuceneIndexFieldsReader *self, jboolean binary, jboolean compressed, jint numeric);

__attribute__((unused)) static void OrgApacheLuceneIndexFieldsReader_skipFieldBytesWithBoolean_withBoolean_withInt_(OrgApacheLuceneIndexFieldsReader *self, jboolean binary, jboolean compressed, jint toRead);

__attribute__((unused)) static OrgApacheLuceneDocumentNumericField *OrgApacheLuceneIndexFieldsReader_loadNumericFieldWithOrgApacheLuceneIndexFieldInfo_withInt_(OrgApacheLuceneIndexFieldsReader *self, OrgApacheLuceneIndexFieldInfo *fi, jint numeric);

__attribute__((unused)) static void OrgApacheLuceneIndexFieldsReader_addFieldLazyWithOrgApacheLuceneDocumentDocument_withOrgApacheLuceneIndexFieldInfo_withBoolean_withBoolean_withBoolean_withBoolean_withInt_(OrgApacheLuceneIndexFieldsReader *self, OrgApacheLuceneDocumentDocument *doc, OrgApacheLuceneIndexFieldInfo *fi, jboolean binary, jboolean compressed, jboolean tokenize, jboolean cacheResult, jint numeric);

__attribute__((unused)) static void OrgApacheLuceneIndexFieldsReader_addFieldWithOrgApacheLuceneDocumentDocument_withOrgApacheLuceneIndexFieldInfo_withBoolean_withBoolean_withBoolean_withInt_(OrgApacheLuceneIndexFieldsReader *self, OrgApacheLuceneDocumentDocument *doc, OrgApacheLuceneIndexFieldInfo *fi, jboolean binary, jboolean compressed, jboolean tokenize, jint numeric);

__attribute__((unused)) static jint OrgApacheLuceneIndexFieldsReader_addFieldSizeWithOrgApacheLuceneDocumentDocument_withOrgApacheLuceneIndexFieldInfo_withBoolean_withBoolean_withInt_(OrgApacheLuceneIndexFieldsReader *self, OrgApacheLuceneDocumentDocument *doc, OrgApacheLuceneIndexFieldInfo *fi, jboolean binary, jboolean compressed, jint numeric);

__attribute__((unused)) static IOSByteArray *OrgApacheLuceneIndexFieldsReader_uncompressWithByteArray_(OrgApacheLuceneIndexFieldsReader *self, IOSByteArray *b);

@interface OrgApacheLuceneIndexFieldsReader_LazyField : OrgApacheLuceneDocumentAbstractField < OrgApacheLuceneDocumentFieldable > {
 @public
  OrgApacheLuceneIndexFieldsReader *this$0_;
  jint toRead_;
  jlong pointer_;
  jboolean isCompressed_;
  jboolean cacheResult_;
}

- (instancetype)initWithOrgApacheLuceneIndexFieldsReader:(OrgApacheLuceneIndexFieldsReader *)outer$
                                            withNSString:(NSString *)name
                  withOrgApacheLuceneDocumentField_Store:(OrgApacheLuceneDocumentField_Store *)store
                                                 withInt:(jint)toRead
                                                withLong:(jlong)pointer
                                             withBoolean:(jboolean)isBinary
                                             withBoolean:(jboolean)isCompressed
                                             withBoolean:(jboolean)cacheResult;

- (instancetype)initWithOrgApacheLuceneIndexFieldsReader:(OrgApacheLuceneIndexFieldsReader *)outer$
                                            withNSString:(NSString *)name
                  withOrgApacheLuceneDocumentField_Store:(OrgApacheLuceneDocumentField_Store *)store
                  withOrgApacheLuceneDocumentField_Index:(OrgApacheLuceneDocumentField_Index *)index
             withOrgApacheLuceneDocumentField_TermVector:(OrgApacheLuceneDocumentField_TermVector *)termVector
                                                 withInt:(jint)toRead
                                                withLong:(jlong)pointer
                                             withBoolean:(jboolean)isBinary
                                             withBoolean:(jboolean)isCompressed
                                             withBoolean:(jboolean)cacheResult;

- (OrgApacheLuceneStoreIndexInput *)getFieldStream;

- (JavaIoReader *)readerValue;

- (OrgApacheLuceneAnalysisTokenStream *)tokenStreamValue;

- (NSString *)stringValue;

- (jlong)getPointer;

- (void)setPointerWithLong:(jlong)pointer;

- (jint)getToRead;

- (void)setToReadWithInt:(jint)toRead;

- (IOSByteArray *)getBinaryValueWithByteArray:(IOSByteArray *)result;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexFieldsReader_LazyField)

__attribute__((unused)) static void OrgApacheLuceneIndexFieldsReader_LazyField_initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withInt_withLong_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneIndexFieldsReader_LazyField *self, OrgApacheLuceneIndexFieldsReader *outer$, NSString *name, OrgApacheLuceneDocumentField_Store *store, jint toRead, jlong pointer, jboolean isBinary, jboolean isCompressed, jboolean cacheResult);

__attribute__((unused)) static OrgApacheLuceneIndexFieldsReader_LazyField *new_OrgApacheLuceneIndexFieldsReader_LazyField_initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withInt_withLong_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneIndexFieldsReader *outer$, NSString *name, OrgApacheLuceneDocumentField_Store *store, jint toRead, jlong pointer, jboolean isBinary, jboolean isCompressed, jboolean cacheResult) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexFieldsReader_LazyField *create_OrgApacheLuceneIndexFieldsReader_LazyField_initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withInt_withLong_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneIndexFieldsReader *outer$, NSString *name, OrgApacheLuceneDocumentField_Store *store, jint toRead, jlong pointer, jboolean isBinary, jboolean isCompressed, jboolean cacheResult);

__attribute__((unused)) static void OrgApacheLuceneIndexFieldsReader_LazyField_initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_withInt_withLong_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneIndexFieldsReader_LazyField *self, OrgApacheLuceneIndexFieldsReader *outer$, NSString *name, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index, OrgApacheLuceneDocumentField_TermVector *termVector, jint toRead, jlong pointer, jboolean isBinary, jboolean isCompressed, jboolean cacheResult);

__attribute__((unused)) static OrgApacheLuceneIndexFieldsReader_LazyField *new_OrgApacheLuceneIndexFieldsReader_LazyField_initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_withInt_withLong_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneIndexFieldsReader *outer$, NSString *name, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index, OrgApacheLuceneDocumentField_TermVector *termVector, jint toRead, jlong pointer, jboolean isBinary, jboolean isCompressed, jboolean cacheResult) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexFieldsReader_LazyField *create_OrgApacheLuceneIndexFieldsReader_LazyField_initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_withInt_withLong_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneIndexFieldsReader *outer$, NSString *name, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index, OrgApacheLuceneDocumentField_TermVector *termVector, jint toRead, jlong pointer, jboolean isBinary, jboolean isCompressed, jboolean cacheResult);

__attribute__((unused)) static OrgApacheLuceneStoreIndexInput *OrgApacheLuceneIndexFieldsReader_LazyField_getFieldStream(OrgApacheLuceneIndexFieldsReader_LazyField *self);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneIndexFieldsReader_LazyField__Annotations$0();

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexFieldsReader_LazyField)

@implementation OrgApacheLuceneIndexFieldsReader

- (id)java_clone {
  OrgApacheLuceneIndexFieldsReader_ensureOpen(self);
  return create_OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneIndexFieldInfos_withInt_withInt_withInt_withInt_withInt_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneStoreIndexInput_(fieldInfos_, numTotalDocs_, size_, format_, formatSize_, docStoreOffset_, cloneableFieldsStream_, cloneableIndexStream_);
}

+ (NSString *)detectCodeVersionWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                                                    withNSString:(NSString *)segment {
  return OrgApacheLuceneIndexFieldsReader_detectCodeVersionWithOrgApacheLuceneStoreDirectory_withNSString_(dir, segment);
}

- (instancetype)initWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)fieldInfos
                                               withInt:(jint)numTotalDocs
                                               withInt:(jint)size
                                               withInt:(jint)format
                                               withInt:(jint)formatSize
                                               withInt:(jint)docStoreOffset
                    withOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)cloneableFieldsStream
                    withOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)cloneableIndexStream {
  OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneIndexFieldInfos_withInt_withInt_withInt_withInt_withInt_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneStoreIndexInput_(self, fieldInfos, numTotalDocs, size, format, formatSize, docStoreOffset, cloneableFieldsStream, cloneableIndexStream);
  return self;
}

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)d
                                         withNSString:(NSString *)segment
                   withOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)fn {
  OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_(self, d, segment, fn);
  return self;
}

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)d
                                         withNSString:(NSString *)segment
                   withOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)fn
                                              withInt:(jint)readBufferSize {
  OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_withInt_(self, d, segment, fn, readBufferSize);
  return self;
}

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)d
                                         withNSString:(NSString *)segment
                   withOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)fn
                                              withInt:(jint)readBufferSize
                                              withInt:(jint)docStoreOffset
                                              withInt:(jint)size {
  OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_withInt_withInt_withInt_(self, d, segment, fn, readBufferSize, docStoreOffset, size);
  return self;
}

- (void)ensureOpen {
  OrgApacheLuceneIndexFieldsReader_ensureOpen(self);
}

- (void)close {
  OrgApacheLuceneIndexFieldsReader_close(self);
}

- (jint)size {
  return size_;
}

- (void)seekIndexWithInt:(jint)docID {
  OrgApacheLuceneIndexFieldsReader_seekIndexWithInt_(self, docID);
}

- (jboolean)canReadRawDocs {
  return format_ >= OrgApacheLuceneIndexFieldsWriter_FORMAT_LUCENE_3_0_NO_COMPRESSED_FIELDS;
}

- (OrgApacheLuceneDocumentDocument *)docWithInt:(jint)n
       withOrgApacheLuceneDocumentFieldSelector:(id<OrgApacheLuceneDocumentFieldSelector>)fieldSelector {
  OrgApacheLuceneIndexFieldsReader_seekIndexWithInt_(self, n);
  jlong position = [((OrgApacheLuceneStoreIndexInput *) nil_chk(indexStream_)) readLong];
  [((OrgApacheLuceneStoreIndexInput *) nil_chk(fieldsStream_)) seekWithLong:position];
  OrgApacheLuceneDocumentDocument *doc = create_OrgApacheLuceneDocumentDocument_init();
  jint numFields = [fieldsStream_ readVInt];
  for (jint i = 0; i < numFields; i++) {
    jint fieldNumber = [fieldsStream_ readVInt];
    OrgApacheLuceneIndexFieldInfo *fi = [((OrgApacheLuceneIndexFieldInfos *) nil_chk(fieldInfos_)) fieldInfoWithInt:fieldNumber];
    OrgApacheLuceneDocumentFieldSelectorResult *acceptField = fieldSelector == nil ? JreLoadEnum(OrgApacheLuceneDocumentFieldSelectorResult, LOAD) : [fieldSelector acceptWithNSString:((OrgApacheLuceneIndexFieldInfo *) nil_chk(fi))->name_];
    jint bits = [fieldsStream_ readByte] & (jint) 0xFF;
    JreAssert((bits <= (OrgApacheLuceneIndexFieldsWriter_FIELD_IS_NUMERIC_MASK | OrgApacheLuceneIndexFieldsWriter_FIELD_IS_COMPRESSED | OrgApacheLuceneIndexFieldsWriter_FIELD_IS_TOKENIZED | OrgApacheLuceneIndexFieldsWriter_FIELD_IS_BINARY)), (JreStrcat("$$", @"bits=", JavaLangInteger_toHexStringWithInt_(bits))));
    jboolean compressed = (bits & OrgApacheLuceneIndexFieldsWriter_FIELD_IS_COMPRESSED) != 0;
    JreAssert(((compressed ? (format_ < OrgApacheLuceneIndexFieldsWriter_FORMAT_LUCENE_3_0_NO_COMPRESSED_FIELDS) : true)), (@"compressed fields are only allowed in indexes of version <= 2.9"));
    jboolean tokenize = (bits & OrgApacheLuceneIndexFieldsWriter_FIELD_IS_TOKENIZED) != 0;
    jboolean binary = (bits & OrgApacheLuceneIndexFieldsWriter_FIELD_IS_BINARY) != 0;
    jint numeric = bits & OrgApacheLuceneIndexFieldsWriter_FIELD_IS_NUMERIC_MASK;
    switch ([acceptField ordinal]) {
      case OrgApacheLuceneDocumentFieldSelectorResult_Enum_LOAD:
      OrgApacheLuceneIndexFieldsReader_addFieldWithOrgApacheLuceneDocumentDocument_withOrgApacheLuceneIndexFieldInfo_withBoolean_withBoolean_withBoolean_withInt_(self, doc, fi, binary, compressed, tokenize, numeric);
      break;
      case OrgApacheLuceneDocumentFieldSelectorResult_Enum_LOAD_AND_BREAK:
      OrgApacheLuceneIndexFieldsReader_addFieldWithOrgApacheLuceneDocumentDocument_withOrgApacheLuceneIndexFieldInfo_withBoolean_withBoolean_withBoolean_withInt_(self, doc, fi, binary, compressed, tokenize, numeric);
      goto break_out;
      case OrgApacheLuceneDocumentFieldSelectorResult_Enum_LAZY_LOAD:
      OrgApacheLuceneIndexFieldsReader_addFieldLazyWithOrgApacheLuceneDocumentDocument_withOrgApacheLuceneIndexFieldInfo_withBoolean_withBoolean_withBoolean_withBoolean_withInt_(self, doc, fi, binary, compressed, tokenize, true, numeric);
      break;
      case OrgApacheLuceneDocumentFieldSelectorResult_Enum_LATENT:
      OrgApacheLuceneIndexFieldsReader_addFieldLazyWithOrgApacheLuceneDocumentDocument_withOrgApacheLuceneIndexFieldInfo_withBoolean_withBoolean_withBoolean_withBoolean_withInt_(self, doc, fi, binary, compressed, tokenize, false, numeric);
      break;
      case OrgApacheLuceneDocumentFieldSelectorResult_Enum_SIZE:
      OrgApacheLuceneIndexFieldsReader_skipFieldBytesWithBoolean_withBoolean_withInt_(self, binary, compressed, OrgApacheLuceneIndexFieldsReader_addFieldSizeWithOrgApacheLuceneDocumentDocument_withOrgApacheLuceneIndexFieldInfo_withBoolean_withBoolean_withInt_(self, doc, fi, binary, compressed, numeric));
      break;
      case OrgApacheLuceneDocumentFieldSelectorResult_Enum_SIZE_AND_BREAK:
      OrgApacheLuceneIndexFieldsReader_addFieldSizeWithOrgApacheLuceneDocumentDocument_withOrgApacheLuceneIndexFieldInfo_withBoolean_withBoolean_withInt_(self, doc, fi, binary, compressed, numeric);
      goto break_out;
      default:
      OrgApacheLuceneIndexFieldsReader_skipFieldWithBoolean_withBoolean_withInt_(self, binary, compressed, numeric);
    }
  }
  break_out: ;
  return doc;
}

- (OrgApacheLuceneStoreIndexInput *)rawDocsWithIntArray:(IOSIntArray *)lengths
                                                withInt:(jint)startDocID
                                                withInt:(jint)numDocs {
  OrgApacheLuceneIndexFieldsReader_seekIndexWithInt_(self, startDocID);
  jlong startOffset = [((OrgApacheLuceneStoreIndexInput *) nil_chk(indexStream_)) readLong];
  jlong lastOffset = startOffset;
  jint count = 0;
  while (count < numDocs) {
    jlong offset;
    jint docID = docStoreOffset_ + startDocID + count + 1;
    JreAssert((docID <= numTotalDocs_), (@"org/apache/lucene/index/FieldsReader.java:290 condition failed: assert docID <= numTotalDocs;"));
    if (docID < numTotalDocs_) offset = [indexStream_ readLong];
    else offset = [((OrgApacheLuceneStoreIndexInput *) nil_chk(fieldsStream_)) length];
    *IOSIntArray_GetRef(nil_chk(lengths), count++) = (jint) (offset - lastOffset);
    lastOffset = offset;
  }
  [((OrgApacheLuceneStoreIndexInput *) nil_chk(fieldsStream_)) seekWithLong:startOffset];
  return fieldsStream_;
}

- (void)skipFieldWithBoolean:(jboolean)binary
                 withBoolean:(jboolean)compressed
                     withInt:(jint)numeric {
  OrgApacheLuceneIndexFieldsReader_skipFieldWithBoolean_withBoolean_withInt_(self, binary, compressed, numeric);
}

- (void)skipFieldBytesWithBoolean:(jboolean)binary
                      withBoolean:(jboolean)compressed
                          withInt:(jint)toRead {
  OrgApacheLuceneIndexFieldsReader_skipFieldBytesWithBoolean_withBoolean_withInt_(self, binary, compressed, toRead);
}

- (OrgApacheLuceneDocumentNumericField *)loadNumericFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fi
                                                                                   withInt:(jint)numeric {
  return OrgApacheLuceneIndexFieldsReader_loadNumericFieldWithOrgApacheLuceneIndexFieldInfo_withInt_(self, fi, numeric);
}

- (void)addFieldLazyWithOrgApacheLuceneDocumentDocument:(OrgApacheLuceneDocumentDocument *)doc
                      withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fi
                                            withBoolean:(jboolean)binary
                                            withBoolean:(jboolean)compressed
                                            withBoolean:(jboolean)tokenize
                                            withBoolean:(jboolean)cacheResult
                                                withInt:(jint)numeric {
  OrgApacheLuceneIndexFieldsReader_addFieldLazyWithOrgApacheLuceneDocumentDocument_withOrgApacheLuceneIndexFieldInfo_withBoolean_withBoolean_withBoolean_withBoolean_withInt_(self, doc, fi, binary, compressed, tokenize, cacheResult, numeric);
}

- (void)addFieldWithOrgApacheLuceneDocumentDocument:(OrgApacheLuceneDocumentDocument *)doc
                  withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fi
                                        withBoolean:(jboolean)binary
                                        withBoolean:(jboolean)compressed
                                        withBoolean:(jboolean)tokenize
                                            withInt:(jint)numeric {
  OrgApacheLuceneIndexFieldsReader_addFieldWithOrgApacheLuceneDocumentDocument_withOrgApacheLuceneIndexFieldInfo_withBoolean_withBoolean_withBoolean_withInt_(self, doc, fi, binary, compressed, tokenize, numeric);
}

- (jint)addFieldSizeWithOrgApacheLuceneDocumentDocument:(OrgApacheLuceneDocumentDocument *)doc
                      withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fi
                                            withBoolean:(jboolean)binary
                                            withBoolean:(jboolean)compressed
                                                withInt:(jint)numeric {
  return OrgApacheLuceneIndexFieldsReader_addFieldSizeWithOrgApacheLuceneDocumentDocument_withOrgApacheLuceneIndexFieldInfo_withBoolean_withBoolean_withInt_(self, doc, fi, binary, compressed, numeric);
}

- (IOSByteArray *)uncompressWithByteArray:(IOSByteArray *)b {
  return OrgApacheLuceneIndexFieldsReader_uncompressWithByteArray_(self, b);
}

- (void)dealloc {
  RELEASE_(fieldInfos_);
  RELEASE_(cloneableFieldsStream_);
  RELEASE_(fieldsStream_);
  RELEASE_(cloneableIndexStream_);
  RELEASE_(indexStream_);
  RELEASE_(fieldsStreamTL_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x8, 1, 2, 3, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 5, 3, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, 3, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 7, 3, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 8, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, 3, -1, -1, -1 },
    { NULL, "I", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x12, 9, 10, 3, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentDocument;", 0x10, 11, 12, 13, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexInput;", 0x10, 14, 15, 3, -1, -1, -1 },
    { NULL, "V", 0x2, 16, 17, 3, -1, -1, -1 },
    { NULL, "V", 0x2, 18, 17, 3, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentNumericField;", 0x2, 19, 20, 3, -1, -1, -1 },
    { NULL, "V", 0x2, 21, 22, 3, -1, -1, -1 },
    { NULL, "V", 0x2, 23, 24, 13, -1, -1, -1 },
    { NULL, "I", 0x2, 25, 26, 3, -1, -1, -1 },
    { NULL, "[B", 0x2, 27, 28, 29, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(java_clone);
  methods[1].selector = @selector(detectCodeVersionWithOrgApacheLuceneStoreDirectory:withNSString:);
  methods[2].selector = @selector(initWithOrgApacheLuceneIndexFieldInfos:withInt:withInt:withInt:withInt:withInt:withOrgApacheLuceneStoreIndexInput:withOrgApacheLuceneStoreIndexInput:);
  methods[3].selector = @selector(initWithOrgApacheLuceneStoreDirectory:withNSString:withOrgApacheLuceneIndexFieldInfos:);
  methods[4].selector = @selector(initWithOrgApacheLuceneStoreDirectory:withNSString:withOrgApacheLuceneIndexFieldInfos:withInt:);
  methods[5].selector = @selector(initWithOrgApacheLuceneStoreDirectory:withNSString:withOrgApacheLuceneIndexFieldInfos:withInt:withInt:withInt:);
  methods[6].selector = @selector(ensureOpen);
  methods[7].selector = @selector(close);
  methods[8].selector = @selector(size);
  methods[9].selector = @selector(seekIndexWithInt:);
  methods[10].selector = @selector(canReadRawDocs);
  methods[11].selector = @selector(docWithInt:withOrgApacheLuceneDocumentFieldSelector:);
  methods[12].selector = @selector(rawDocsWithIntArray:withInt:withInt:);
  methods[13].selector = @selector(skipFieldWithBoolean:withBoolean:withInt:);
  methods[14].selector = @selector(skipFieldBytesWithBoolean:withBoolean:withInt:);
  methods[15].selector = @selector(loadNumericFieldWithOrgApacheLuceneIndexFieldInfo:withInt:);
  methods[16].selector = @selector(addFieldLazyWithOrgApacheLuceneDocumentDocument:withOrgApacheLuceneIndexFieldInfo:withBoolean:withBoolean:withBoolean:withBoolean:withInt:);
  methods[17].selector = @selector(addFieldWithOrgApacheLuceneDocumentDocument:withOrgApacheLuceneIndexFieldInfo:withBoolean:withBoolean:withBoolean:withInt:);
  methods[18].selector = @selector(addFieldSizeWithOrgApacheLuceneDocumentDocument:withOrgApacheLuceneIndexFieldInfo:withBoolean:withBoolean:withInt:);
  methods[19].selector = @selector(uncompressWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fieldInfos_", "LOrgApacheLuceneIndexFieldInfos;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "cloneableFieldsStream_", "LOrgApacheLuceneStoreIndexInput;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fieldsStream_", "LOrgApacheLuceneStoreIndexInput;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "cloneableIndexStream_", "LOrgApacheLuceneStoreIndexInput;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "indexStream_", "LOrgApacheLuceneStoreIndexInput;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "numTotalDocs_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "size_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "closed_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "format_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "formatSize_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "docStoreOffset_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fieldsStreamTL_", "LOrgApacheLuceneUtilCloseableThreadLocal;", .constantValue.asLong = 0, 0x2, -1, -1, 30, -1 },
    { "isOriginal_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "clone", "detectCodeVersion", "LOrgApacheLuceneStoreDirectory;LNSString;", "LJavaIoIOException;", "LOrgApacheLuceneIndexFieldInfos;IIIIILOrgApacheLuceneStoreIndexInput;LOrgApacheLuceneStoreIndexInput;", "LOrgApacheLuceneStoreDirectory;LNSString;LOrgApacheLuceneIndexFieldInfos;", "LOrgApacheLuceneStoreDirectory;LNSString;LOrgApacheLuceneIndexFieldInfos;I", "LOrgApacheLuceneStoreDirectory;LNSString;LOrgApacheLuceneIndexFieldInfos;III", "LOrgApacheLuceneStoreAlreadyClosedException;", "seekIndex", "I", "doc", "ILOrgApacheLuceneDocumentFieldSelector;", "LOrgApacheLuceneIndexCorruptIndexException;LJavaIoIOException;", "rawDocs", "[III", "skipField", "ZZI", "skipFieldBytes", "loadNumericField", "LOrgApacheLuceneIndexFieldInfo;I", "addFieldLazy", "LOrgApacheLuceneDocumentDocument;LOrgApacheLuceneIndexFieldInfo;ZZZZI", "addField", "LOrgApacheLuceneDocumentDocument;LOrgApacheLuceneIndexFieldInfo;ZZZI", "addFieldSize", "LOrgApacheLuceneDocumentDocument;LOrgApacheLuceneIndexFieldInfo;ZZI", "uncompress", "[B", "LOrgApacheLuceneIndexCorruptIndexException;", "Lorg/apache/lucene/util/CloseableThreadLocal<Lorg/apache/lucene/store/IndexInput;>;", "LOrgApacheLuceneIndexFieldsReader_LazyField;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexFieldsReader = { "FieldsReader", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x10, 20, 13, -1, 31, -1, -1, -1 };
  return &_OrgApacheLuceneIndexFieldsReader;
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self java_clone] retain];
}

@end

NSString *OrgApacheLuceneIndexFieldsReader_detectCodeVersionWithOrgApacheLuceneStoreDirectory_withNSString_(OrgApacheLuceneStoreDirectory *dir, NSString *segment) {
  OrgApacheLuceneIndexFieldsReader_initialize();
  OrgApacheLuceneStoreIndexInput *idxStream = [((OrgApacheLuceneStoreDirectory *) nil_chk(dir)) openInputWithNSString:OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_(segment, OrgApacheLuceneIndexIndexFileNames_FIELDS_INDEX_EXTENSION) withInt:1024];
  @try {
    jint format = [((OrgApacheLuceneStoreIndexInput *) nil_chk(idxStream)) readInt];
    if (format < OrgApacheLuceneIndexFieldsWriter_FORMAT_LUCENE_3_0_NO_COMPRESSED_FIELDS) {
      return @"2.x";
    }
    else {
      return @"3.0";
    }
  }
  @finally {
    [idxStream close];
  }
}

void OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneIndexFieldInfos_withInt_withInt_withInt_withInt_withInt_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneIndexFieldsReader *self, OrgApacheLuceneIndexFieldInfos *fieldInfos, jint numTotalDocs, jint size, jint format, jint formatSize, jint docStoreOffset, OrgApacheLuceneStoreIndexInput *cloneableFieldsStream, OrgApacheLuceneStoreIndexInput *cloneableIndexStream) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->fieldsStreamTL_, new_OrgApacheLuceneUtilCloseableThreadLocal_init());
  self->isOriginal_ = false;
  JreStrongAssign(&self->fieldInfos_, fieldInfos);
  self->numTotalDocs_ = numTotalDocs;
  self->size_ = size;
  self->format_ = format;
  self->formatSize_ = formatSize;
  self->docStoreOffset_ = docStoreOffset;
  JreStrongAssign(&self->cloneableFieldsStream_, cloneableFieldsStream);
  JreStrongAssign(&self->cloneableIndexStream_, cloneableIndexStream);
  JreStrongAssign(&self->fieldsStream_, (OrgApacheLuceneStoreIndexInput *) cast_chk([((OrgApacheLuceneStoreIndexInput *) nil_chk(cloneableFieldsStream)) java_clone], [OrgApacheLuceneStoreIndexInput class]));
  JreStrongAssign(&self->indexStream_, (OrgApacheLuceneStoreIndexInput *) cast_chk([((OrgApacheLuceneStoreIndexInput *) nil_chk(cloneableIndexStream)) java_clone], [OrgApacheLuceneStoreIndexInput class]));
}

OrgApacheLuceneIndexFieldsReader *new_OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneIndexFieldInfos_withInt_withInt_withInt_withInt_withInt_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneIndexFieldInfos *fieldInfos, jint numTotalDocs, jint size, jint format, jint formatSize, jint docStoreOffset, OrgApacheLuceneStoreIndexInput *cloneableFieldsStream, OrgApacheLuceneStoreIndexInput *cloneableIndexStream) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexFieldsReader, initWithOrgApacheLuceneIndexFieldInfos_withInt_withInt_withInt_withInt_withInt_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneStoreIndexInput_, fieldInfos, numTotalDocs, size, format, formatSize, docStoreOffset, cloneableFieldsStream, cloneableIndexStream)
}

OrgApacheLuceneIndexFieldsReader *create_OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneIndexFieldInfos_withInt_withInt_withInt_withInt_withInt_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneIndexFieldInfos *fieldInfos, jint numTotalDocs, jint size, jint format, jint formatSize, jint docStoreOffset, OrgApacheLuceneStoreIndexInput *cloneableFieldsStream, OrgApacheLuceneStoreIndexInput *cloneableIndexStream) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexFieldsReader, initWithOrgApacheLuceneIndexFieldInfos_withInt_withInt_withInt_withInt_withInt_withOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneStoreIndexInput_, fieldInfos, numTotalDocs, size, format, formatSize, docStoreOffset, cloneableFieldsStream, cloneableIndexStream)
}

void OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_(OrgApacheLuceneIndexFieldsReader *self, OrgApacheLuceneStoreDirectory *d, NSString *segment, OrgApacheLuceneIndexFieldInfos *fn) {
  OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_withInt_withInt_withInt_(self, d, segment, fn, OrgApacheLuceneStoreBufferedIndexInput_BUFFER_SIZE, -1, 0);
}

OrgApacheLuceneIndexFieldsReader *new_OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_(OrgApacheLuceneStoreDirectory *d, NSString *segment, OrgApacheLuceneIndexFieldInfos *fn) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexFieldsReader, initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_, d, segment, fn)
}

OrgApacheLuceneIndexFieldsReader *create_OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_(OrgApacheLuceneStoreDirectory *d, NSString *segment, OrgApacheLuceneIndexFieldInfos *fn) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexFieldsReader, initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_, d, segment, fn)
}

void OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_withInt_(OrgApacheLuceneIndexFieldsReader *self, OrgApacheLuceneStoreDirectory *d, NSString *segment, OrgApacheLuceneIndexFieldInfos *fn, jint readBufferSize) {
  OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_withInt_withInt_withInt_(self, d, segment, fn, readBufferSize, -1, 0);
}

OrgApacheLuceneIndexFieldsReader *new_OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_withInt_(OrgApacheLuceneStoreDirectory *d, NSString *segment, OrgApacheLuceneIndexFieldInfos *fn, jint readBufferSize) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexFieldsReader, initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_withInt_, d, segment, fn, readBufferSize)
}

OrgApacheLuceneIndexFieldsReader *create_OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_withInt_(OrgApacheLuceneStoreDirectory *d, NSString *segment, OrgApacheLuceneIndexFieldInfos *fn, jint readBufferSize) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexFieldsReader, initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_withInt_, d, segment, fn, readBufferSize)
}

void OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_withInt_withInt_withInt_(OrgApacheLuceneIndexFieldsReader *self, OrgApacheLuceneStoreDirectory *d, NSString *segment, OrgApacheLuceneIndexFieldInfos *fn, jint readBufferSize, jint docStoreOffset, jint size) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->fieldsStreamTL_, new_OrgApacheLuceneUtilCloseableThreadLocal_init());
  self->isOriginal_ = false;
  jboolean success = false;
  self->isOriginal_ = true;
  @try {
    JreStrongAssign(&self->fieldInfos_, fn);
    JreStrongAssign(&self->cloneableFieldsStream_, [((OrgApacheLuceneStoreDirectory *) nil_chk(d)) openInputWithNSString:OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_(segment, OrgApacheLuceneIndexIndexFileNames_FIELDS_EXTENSION) withInt:readBufferSize]);
    NSString *indexStreamFN = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_(segment, OrgApacheLuceneIndexIndexFileNames_FIELDS_INDEX_EXTENSION);
    JreStrongAssign(&self->cloneableIndexStream_, [d openInputWithNSString:indexStreamFN withInt:readBufferSize]);
    jint firstInt = [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->cloneableIndexStream_)) readInt];
    if (firstInt == 0) self->format_ = 0;
    else self->format_ = firstInt;
    if (self->format_ > OrgApacheLuceneIndexFieldsWriter_FORMAT_CURRENT) @throw create_OrgApacheLuceneIndexIndexFormatTooNewException_initWithOrgApacheLuceneStoreDataInput_withInt_withInt_withInt_(self->cloneableIndexStream_, self->format_, 0, OrgApacheLuceneIndexFieldsWriter_FORMAT_CURRENT);
    if (self->format_ > OrgApacheLuceneIndexFieldsWriter_FORMAT) self->formatSize_ = 4;
    else self->formatSize_ = 0;
    if (self->format_ < OrgApacheLuceneIndexFieldsWriter_FORMAT_VERSION_UTF8_LENGTH_IN_BYTES) [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->cloneableFieldsStream_)) setModifiedUTF8StringsMode];
    JreStrongAssign(&self->fieldsStream_, (OrgApacheLuceneStoreIndexInput *) cast_chk([((OrgApacheLuceneStoreIndexInput *) nil_chk(self->cloneableFieldsStream_)) java_clone], [OrgApacheLuceneStoreIndexInput class]));
    jlong indexSize = [self->cloneableIndexStream_ length] - self->formatSize_;
    if (docStoreOffset != -1) {
      self->docStoreOffset_ = docStoreOffset;
      self->size_ = size;
      JreAssert((((jint) (indexSize / 8)) >= size + self->docStoreOffset_), (JreStrcat("$J$I$I", @"indexSize=", indexSize, @" size=", size, @" docStoreOffset=", docStoreOffset)));
    }
    else {
      self->docStoreOffset_ = 0;
      self->size_ = (jint) (JreRShift64(indexSize, 3));
    }
    JreStrongAssign(&self->indexStream_, (OrgApacheLuceneStoreIndexInput *) cast_chk([self->cloneableIndexStream_ java_clone], [OrgApacheLuceneStoreIndexInput class]));
    self->numTotalDocs_ = (jint) (JreRShift64(indexSize, 3));
    success = true;
  }
  @finally {
    if (!success) {
      OrgApacheLuceneIndexFieldsReader_close(self);
    }
  }
}

OrgApacheLuceneIndexFieldsReader *new_OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_withInt_withInt_withInt_(OrgApacheLuceneStoreDirectory *d, NSString *segment, OrgApacheLuceneIndexFieldInfos *fn, jint readBufferSize, jint docStoreOffset, jint size) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexFieldsReader, initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_withInt_withInt_withInt_, d, segment, fn, readBufferSize, docStoreOffset, size)
}

OrgApacheLuceneIndexFieldsReader *create_OrgApacheLuceneIndexFieldsReader_initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_withInt_withInt_withInt_(OrgApacheLuceneStoreDirectory *d, NSString *segment, OrgApacheLuceneIndexFieldInfos *fn, jint readBufferSize, jint docStoreOffset, jint size) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexFieldsReader, initWithOrgApacheLuceneStoreDirectory_withNSString_withOrgApacheLuceneIndexFieldInfos_withInt_withInt_withInt_, d, segment, fn, readBufferSize, docStoreOffset, size)
}

void OrgApacheLuceneIndexFieldsReader_ensureOpen(OrgApacheLuceneIndexFieldsReader *self) {
  if (self->closed_) {
    @throw create_OrgApacheLuceneStoreAlreadyClosedException_initWithNSString_(@"this FieldsReader is closed");
  }
}

void OrgApacheLuceneIndexFieldsReader_close(OrgApacheLuceneIndexFieldsReader *self) {
  if (!self->closed_) {
    if (self->isOriginal_) {
      OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ self->fieldsStream_, self->indexStream_, self->fieldsStreamTL_, self->cloneableFieldsStream_, self->cloneableIndexStream_ } count:5 type:JavaIoCloseable_class_()]);
    }
    else {
      OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ self->fieldsStream_, self->indexStream_, self->fieldsStreamTL_ } count:3 type:JavaIoCloseable_class_()]);
    }
    self->closed_ = true;
  }
}

void OrgApacheLuceneIndexFieldsReader_seekIndexWithInt_(OrgApacheLuceneIndexFieldsReader *self, jint docID) {
  [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->indexStream_)) seekWithLong:self->formatSize_ + (docID + self->docStoreOffset_) * 8LL];
}

void OrgApacheLuceneIndexFieldsReader_skipFieldWithBoolean_withBoolean_withInt_(OrgApacheLuceneIndexFieldsReader *self, jboolean binary, jboolean compressed, jint numeric) {
  jint numBytes;
  switch (numeric) {
    case 0:
    numBytes = [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->fieldsStream_)) readVInt];
    break;
    case OrgApacheLuceneIndexFieldsWriter_FIELD_IS_NUMERIC_INT:
    case OrgApacheLuceneIndexFieldsWriter_FIELD_IS_NUMERIC_FLOAT:
    numBytes = 4;
    break;
    case OrgApacheLuceneIndexFieldsWriter_FIELD_IS_NUMERIC_LONG:
    case OrgApacheLuceneIndexFieldsWriter_FIELD_IS_NUMERIC_DOUBLE:
    numBytes = 8;
    break;
    default:
    @throw create_OrgApacheLuceneIndexFieldReaderException_initWithNSString_(JreStrcat("$$", @"Invalid numeric type: ", JavaLangInteger_toHexStringWithInt_(numeric)));
  }
  OrgApacheLuceneIndexFieldsReader_skipFieldBytesWithBoolean_withBoolean_withInt_(self, binary, compressed, numBytes);
}

void OrgApacheLuceneIndexFieldsReader_skipFieldBytesWithBoolean_withBoolean_withInt_(OrgApacheLuceneIndexFieldsReader *self, jboolean binary, jboolean compressed, jint toRead) {
  if (self->format_ >= OrgApacheLuceneIndexFieldsWriter_FORMAT_VERSION_UTF8_LENGTH_IN_BYTES || binary || compressed) {
    [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->fieldsStream_)) seekWithLong:[self->fieldsStream_ getFilePointer] + toRead];
  }
  else {
    [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->fieldsStream_)) skipCharsWithInt:toRead];
  }
}

OrgApacheLuceneDocumentNumericField *OrgApacheLuceneIndexFieldsReader_loadNumericFieldWithOrgApacheLuceneIndexFieldInfo_withInt_(OrgApacheLuceneIndexFieldsReader *self, OrgApacheLuceneIndexFieldInfo *fi, jint numeric) {
  JreAssert((numeric != 0), (@"org/apache/lucene/index/FieldsReader.java:339 condition failed: assert numeric != 0;"));
  switch (numeric) {
    case OrgApacheLuceneIndexFieldsWriter_FIELD_IS_NUMERIC_INT:
    return [create_OrgApacheLuceneDocumentNumericField_initWithNSString_withOrgApacheLuceneDocumentField_Store_withBoolean_(((OrgApacheLuceneIndexFieldInfo *) nil_chk(fi))->name_, JreLoadEnum(OrgApacheLuceneDocumentField_Store, YES), fi->isIndexed_) setIntValueWithInt:[((OrgApacheLuceneStoreIndexInput *) nil_chk(self->fieldsStream_)) readInt]];
    case OrgApacheLuceneIndexFieldsWriter_FIELD_IS_NUMERIC_LONG:
    return [create_OrgApacheLuceneDocumentNumericField_initWithNSString_withOrgApacheLuceneDocumentField_Store_withBoolean_(((OrgApacheLuceneIndexFieldInfo *) nil_chk(fi))->name_, JreLoadEnum(OrgApacheLuceneDocumentField_Store, YES), fi->isIndexed_) setLongValueWithLong:[((OrgApacheLuceneStoreIndexInput *) nil_chk(self->fieldsStream_)) readLong]];
    case OrgApacheLuceneIndexFieldsWriter_FIELD_IS_NUMERIC_FLOAT:
    return [create_OrgApacheLuceneDocumentNumericField_initWithNSString_withOrgApacheLuceneDocumentField_Store_withBoolean_(((OrgApacheLuceneIndexFieldInfo *) nil_chk(fi))->name_, JreLoadEnum(OrgApacheLuceneDocumentField_Store, YES), fi->isIndexed_) setFloatValueWithFloat:JavaLangFloat_intBitsToFloatWithInt_([((OrgApacheLuceneStoreIndexInput *) nil_chk(self->fieldsStream_)) readInt])];
    case OrgApacheLuceneIndexFieldsWriter_FIELD_IS_NUMERIC_DOUBLE:
    return [create_OrgApacheLuceneDocumentNumericField_initWithNSString_withOrgApacheLuceneDocumentField_Store_withBoolean_(((OrgApacheLuceneIndexFieldInfo *) nil_chk(fi))->name_, JreLoadEnum(OrgApacheLuceneDocumentField_Store, YES), fi->isIndexed_) setDoubleValueWithDouble:JavaLangDouble_longBitsToDoubleWithLong_([((OrgApacheLuceneStoreIndexInput *) nil_chk(self->fieldsStream_)) readLong])];
    default:
    @throw create_OrgApacheLuceneIndexFieldReaderException_initWithNSString_(JreStrcat("$$", @"Invalid numeric type: ", JavaLangInteger_toHexStringWithInt_(numeric)));
  }
}

void OrgApacheLuceneIndexFieldsReader_addFieldLazyWithOrgApacheLuceneDocumentDocument_withOrgApacheLuceneIndexFieldInfo_withBoolean_withBoolean_withBoolean_withBoolean_withInt_(OrgApacheLuceneIndexFieldsReader *self, OrgApacheLuceneDocumentDocument *doc, OrgApacheLuceneIndexFieldInfo *fi, jboolean binary, jboolean compressed, jboolean tokenize, jboolean cacheResult, jint numeric) {
  OrgApacheLuceneDocumentAbstractField *f;
  if (binary) {
    jint toRead = [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->fieldsStream_)) readVInt];
    jlong pointer = [self->fieldsStream_ getFilePointer];
    f = create_OrgApacheLuceneIndexFieldsReader_LazyField_initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withInt_withLong_withBoolean_withBoolean_withBoolean_(self, ((OrgApacheLuceneIndexFieldInfo *) nil_chk(fi))->name_, JreLoadEnum(OrgApacheLuceneDocumentField_Store, YES), toRead, pointer, binary, compressed, cacheResult);
    [self->fieldsStream_ seekWithLong:pointer + toRead];
  }
  else if (numeric != 0) {
    f = OrgApacheLuceneIndexFieldsReader_loadNumericFieldWithOrgApacheLuceneIndexFieldInfo_withInt_(self, fi, numeric);
  }
  else {
    OrgApacheLuceneDocumentField_Store *store = JreLoadEnum(OrgApacheLuceneDocumentField_Store, YES);
    OrgApacheLuceneDocumentField_Index *index = OrgApacheLuceneDocumentField_Index_toIndexWithBoolean_withBoolean_(((OrgApacheLuceneIndexFieldInfo *) nil_chk(fi))->isIndexed_, tokenize);
    OrgApacheLuceneDocumentField_TermVector *termVector = OrgApacheLuceneDocumentField_TermVector_toTermVectorWithBoolean_withBoolean_withBoolean_(fi->storeTermVector_, fi->storeOffsetWithTermVector_, fi->storePositionWithTermVector_);
    if (compressed) {
      jint toRead = [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->fieldsStream_)) readVInt];
      jlong pointer = [self->fieldsStream_ getFilePointer];
      f = create_OrgApacheLuceneIndexFieldsReader_LazyField_initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withInt_withLong_withBoolean_withBoolean_withBoolean_(self, fi->name_, store, toRead, pointer, binary, compressed, cacheResult);
      [self->fieldsStream_ seekWithLong:pointer + toRead];
    }
    else {
      jint length = [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->fieldsStream_)) readVInt];
      jlong pointer = [self->fieldsStream_ getFilePointer];
      if (self->format_ >= OrgApacheLuceneIndexFieldsWriter_FORMAT_VERSION_UTF8_LENGTH_IN_BYTES) {
        [self->fieldsStream_ seekWithLong:pointer + length];
      }
      else {
        [self->fieldsStream_ skipCharsWithInt:length];
      }
      f = create_OrgApacheLuceneIndexFieldsReader_LazyField_initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_withInt_withLong_withBoolean_withBoolean_withBoolean_(self, fi->name_, store, index, termVector, length, pointer, binary, compressed, cacheResult);
    }
  }
  [((OrgApacheLuceneDocumentAbstractField *) nil_chk(f)) setOmitNormsWithBoolean:((OrgApacheLuceneIndexFieldInfo *) nil_chk(fi))->omitNorms_];
  [f setIndexOptionsWithOrgApacheLuceneIndexFieldInfo_IndexOptions:fi->indexOptions_];
  [((OrgApacheLuceneDocumentDocument *) nil_chk(doc)) addWithOrgApacheLuceneDocumentFieldable:f];
}

void OrgApacheLuceneIndexFieldsReader_addFieldWithOrgApacheLuceneDocumentDocument_withOrgApacheLuceneIndexFieldInfo_withBoolean_withBoolean_withBoolean_withInt_(OrgApacheLuceneIndexFieldsReader *self, OrgApacheLuceneDocumentDocument *doc, OrgApacheLuceneIndexFieldInfo *fi, jboolean binary, jboolean compressed, jboolean tokenize, jint numeric) {
  OrgApacheLuceneDocumentAbstractField *f;
  if (binary) {
    jint toRead = [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->fieldsStream_)) readVInt];
    IOSByteArray *b = [IOSByteArray arrayWithLength:toRead];
    [self->fieldsStream_ readBytesWithByteArray:b withInt:0 withInt:b->size_];
    if (compressed) {
      f = create_OrgApacheLuceneDocumentField_initWithNSString_withByteArray_(((OrgApacheLuceneIndexFieldInfo *) nil_chk(fi))->name_, OrgApacheLuceneIndexFieldsReader_uncompressWithByteArray_(self, b));
    }
    else {
      f = create_OrgApacheLuceneDocumentField_initWithNSString_withByteArray_(((OrgApacheLuceneIndexFieldInfo *) nil_chk(fi))->name_, b);
    }
  }
  else if (numeric != 0) {
    f = OrgApacheLuceneIndexFieldsReader_loadNumericFieldWithOrgApacheLuceneIndexFieldInfo_withInt_(self, fi, numeric);
  }
  else {
    OrgApacheLuceneDocumentField_Store *store = JreLoadEnum(OrgApacheLuceneDocumentField_Store, YES);
    OrgApacheLuceneDocumentField_Index *index = OrgApacheLuceneDocumentField_Index_toIndexWithBoolean_withBoolean_(((OrgApacheLuceneIndexFieldInfo *) nil_chk(fi))->isIndexed_, tokenize);
    OrgApacheLuceneDocumentField_TermVector *termVector = OrgApacheLuceneDocumentField_TermVector_toTermVectorWithBoolean_withBoolean_withBoolean_(fi->storeTermVector_, fi->storeOffsetWithTermVector_, fi->storePositionWithTermVector_);
    if (compressed) {
      jint toRead = [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->fieldsStream_)) readVInt];
      IOSByteArray *b = [IOSByteArray arrayWithLength:toRead];
      [self->fieldsStream_ readBytesWithByteArray:b withInt:0 withInt:b->size_];
      f = create_OrgApacheLuceneDocumentField_initWithNSString_withBoolean_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(fi->name_, false, [NSString java_stringWithBytes:OrgApacheLuceneIndexFieldsReader_uncompressWithByteArray_(self, b) charsetName:@"UTF-8"], store, index, termVector);
    }
    else {
      f = create_OrgApacheLuceneDocumentField_initWithNSString_withBoolean_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(fi->name_, false, [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->fieldsStream_)) readString], store, index, termVector);
    }
  }
  [((OrgApacheLuceneDocumentAbstractField *) nil_chk(f)) setIndexOptionsWithOrgApacheLuceneIndexFieldInfo_IndexOptions:((OrgApacheLuceneIndexFieldInfo *) nil_chk(fi))->indexOptions_];
  [f setOmitNormsWithBoolean:fi->omitNorms_];
  [((OrgApacheLuceneDocumentDocument *) nil_chk(doc)) addWithOrgApacheLuceneDocumentFieldable:f];
}

jint OrgApacheLuceneIndexFieldsReader_addFieldSizeWithOrgApacheLuceneDocumentDocument_withOrgApacheLuceneIndexFieldInfo_withBoolean_withBoolean_withInt_(OrgApacheLuceneIndexFieldsReader *self, OrgApacheLuceneDocumentDocument *doc, OrgApacheLuceneIndexFieldInfo *fi, jboolean binary, jboolean compressed, jint numeric) {
  jint bytesize;
  jint size;
  switch (numeric) {
    case 0:
    size = [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->fieldsStream_)) readVInt];
    bytesize = (binary || compressed) ? size : 2 * size;
    break;
    case OrgApacheLuceneIndexFieldsWriter_FIELD_IS_NUMERIC_INT:
    case OrgApacheLuceneIndexFieldsWriter_FIELD_IS_NUMERIC_FLOAT:
    size = bytesize = 4;
    break;
    case OrgApacheLuceneIndexFieldsWriter_FIELD_IS_NUMERIC_LONG:
    case OrgApacheLuceneIndexFieldsWriter_FIELD_IS_NUMERIC_DOUBLE:
    size = bytesize = 8;
    break;
    default:
    @throw create_OrgApacheLuceneIndexFieldReaderException_initWithNSString_(JreStrcat("$$", @"Invalid numeric type: ", JavaLangInteger_toHexStringWithInt_(numeric)));
  }
  IOSByteArray *sizebytes = [IOSByteArray arrayWithLength:4];
  *IOSByteArray_GetRef(sizebytes, 0) = (jbyte) (JreURShift32(bytesize, 24));
  *IOSByteArray_GetRef(sizebytes, 1) = (jbyte) (JreURShift32(bytesize, 16));
  *IOSByteArray_GetRef(sizebytes, 2) = (jbyte) (JreURShift32(bytesize, 8));
  *IOSByteArray_GetRef(sizebytes, 3) = (jbyte) bytesize;
  [((OrgApacheLuceneDocumentDocument *) nil_chk(doc)) addWithOrgApacheLuceneDocumentFieldable:create_OrgApacheLuceneDocumentField_initWithNSString_withByteArray_(((OrgApacheLuceneIndexFieldInfo *) nil_chk(fi))->name_, sizebytes)];
  return size;
}

IOSByteArray *OrgApacheLuceneIndexFieldsReader_uncompressWithByteArray_(OrgApacheLuceneIndexFieldsReader *self, IOSByteArray *b) {
  @try {
    return OrgApacheLuceneDocumentCompressionTools_decompressWithByteArray_(b);
  }
  @catch (JavaUtilZipDataFormatException *e) {
    OrgApacheLuceneIndexCorruptIndexException *newException = create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_(JreStrcat("$$", @"field data are in wrong format: ", [e description]));
    [newException initCauseWithNSException:e];
    @throw newException;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexFieldsReader)

@implementation OrgApacheLuceneIndexFieldsReader_LazyField

- (instancetype)initWithOrgApacheLuceneIndexFieldsReader:(OrgApacheLuceneIndexFieldsReader *)outer$
                                            withNSString:(NSString *)name
                  withOrgApacheLuceneDocumentField_Store:(OrgApacheLuceneDocumentField_Store *)store
                                                 withInt:(jint)toRead
                                                withLong:(jlong)pointer
                                             withBoolean:(jboolean)isBinary
                                             withBoolean:(jboolean)isCompressed
                                             withBoolean:(jboolean)cacheResult {
  OrgApacheLuceneIndexFieldsReader_LazyField_initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withInt_withLong_withBoolean_withBoolean_withBoolean_(self, outer$, name, store, toRead, pointer, isBinary, isCompressed, cacheResult);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexFieldsReader:(OrgApacheLuceneIndexFieldsReader *)outer$
                                            withNSString:(NSString *)name
                  withOrgApacheLuceneDocumentField_Store:(OrgApacheLuceneDocumentField_Store *)store
                  withOrgApacheLuceneDocumentField_Index:(OrgApacheLuceneDocumentField_Index *)index
             withOrgApacheLuceneDocumentField_TermVector:(OrgApacheLuceneDocumentField_TermVector *)termVector
                                                 withInt:(jint)toRead
                                                withLong:(jlong)pointer
                                             withBoolean:(jboolean)isBinary
                                             withBoolean:(jboolean)isCompressed
                                             withBoolean:(jboolean)cacheResult {
  OrgApacheLuceneIndexFieldsReader_LazyField_initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_withInt_withLong_withBoolean_withBoolean_withBoolean_(self, outer$, name, store, index, termVector, toRead, pointer, isBinary, isCompressed, cacheResult);
  return self;
}

- (OrgApacheLuceneStoreIndexInput *)getFieldStream {
  return OrgApacheLuceneIndexFieldsReader_LazyField_getFieldStream(self);
}

- (JavaIoReader *)readerValue {
  OrgApacheLuceneIndexFieldsReader_ensureOpen(this$0_);
  return nil;
}

- (OrgApacheLuceneAnalysisTokenStream *)tokenStreamValue {
  OrgApacheLuceneIndexFieldsReader_ensureOpen(this$0_);
  return nil;
}

- (NSString *)stringValue {
  OrgApacheLuceneIndexFieldsReader_ensureOpen(this$0_);
  if (isBinary_) return nil;
  else {
    if (fieldsData_ == nil) {
      OrgApacheLuceneStoreIndexInput *localFieldsStream = OrgApacheLuceneIndexFieldsReader_LazyField_getFieldStream(self);
      NSString *value;
      @try {
        [((OrgApacheLuceneStoreIndexInput *) nil_chk(localFieldsStream)) seekWithLong:pointer_];
        if (isCompressed_) {
          IOSByteArray *b = [IOSByteArray arrayWithLength:toRead_];
          [localFieldsStream readBytesWithByteArray:b withInt:0 withInt:b->size_];
          value = [NSString java_stringWithBytes:OrgApacheLuceneIndexFieldsReader_uncompressWithByteArray_(this$0_, b) charsetName:@"UTF-8"];
        }
        else {
          if (this$0_->format_ >= OrgApacheLuceneIndexFieldsWriter_FORMAT_VERSION_UTF8_LENGTH_IN_BYTES) {
            IOSByteArray *bytes = [IOSByteArray arrayWithLength:toRead_];
            [localFieldsStream readBytesWithByteArray:bytes withInt:0 withInt:toRead_];
            value = [NSString java_stringWithBytes:bytes charsetName:@"UTF-8"];
          }
          else {
            IOSCharArray *chars = [IOSCharArray arrayWithLength:toRead_];
            [localFieldsStream readCharsWithCharArray:chars withInt:0 withInt:toRead_];
            value = [NSString java_stringWithCharacters:chars];
          }
        }
      }
      @catch (JavaIoIOException *e) {
        @throw create_OrgApacheLuceneIndexFieldReaderException_initWithNSException_(e);
      }
      if (cacheResult_) {
        JreStrongAssign(&fieldsData_, value);
      }
      return value;
    }
    else {
      return (NSString *) cast_chk(fieldsData_, [NSString class]);
    }
  }
}

- (jlong)getPointer {
  OrgApacheLuceneIndexFieldsReader_ensureOpen(this$0_);
  return pointer_;
}

- (void)setPointerWithLong:(jlong)pointer {
  OrgApacheLuceneIndexFieldsReader_ensureOpen(this$0_);
  self->pointer_ = pointer;
}

- (jint)getToRead {
  OrgApacheLuceneIndexFieldsReader_ensureOpen(this$0_);
  return toRead_;
}

- (void)setToReadWithInt:(jint)toRead {
  OrgApacheLuceneIndexFieldsReader_ensureOpen(this$0_);
  self->toRead_ = toRead;
}

- (IOSByteArray *)getBinaryValueWithByteArray:(IOSByteArray *)result {
  OrgApacheLuceneIndexFieldsReader_ensureOpen(this$0_);
  if (isBinary_) {
    if (fieldsData_ == nil) {
      IOSByteArray *b;
      IOSByteArray *value;
      if (result == nil || result->size_ < toRead_) b = [IOSByteArray arrayWithLength:toRead_];
      else b = result;
      OrgApacheLuceneStoreIndexInput *localFieldsStream = OrgApacheLuceneIndexFieldsReader_LazyField_getFieldStream(self);
      @try {
        [((OrgApacheLuceneStoreIndexInput *) nil_chk(localFieldsStream)) seekWithLong:pointer_];
        [localFieldsStream readBytesWithByteArray:b withInt:0 withInt:toRead_];
        if (isCompressed_ == true) {
          value = OrgApacheLuceneIndexFieldsReader_uncompressWithByteArray_(this$0_, b);
        }
        else {
          value = b;
        }
      }
      @catch (JavaIoIOException *e) {
        @throw create_OrgApacheLuceneIndexFieldReaderException_initWithNSException_(e);
      }
      binaryOffset_ = 0;
      binaryLength_ = toRead_;
      if (cacheResult_ == true) {
        JreStrongAssign(&fieldsData_, value);
      }
      return value;
    }
    else {
      return (IOSByteArray *) cast_chk(fieldsData_, [IOSByteArray class]);
    }
  }
  else {
    return nil;
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexInput;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoReader;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexFieldsReader:withNSString:withOrgApacheLuceneDocumentField_Store:withInt:withLong:withBoolean:withBoolean:withBoolean:);
  methods[1].selector = @selector(initWithOrgApacheLuceneIndexFieldsReader:withNSString:withOrgApacheLuceneDocumentField_Store:withOrgApacheLuceneDocumentField_Index:withOrgApacheLuceneDocumentField_TermVector:withInt:withLong:withBoolean:withBoolean:withBoolean:);
  methods[2].selector = @selector(getFieldStream);
  methods[3].selector = @selector(readerValue);
  methods[4].selector = @selector(tokenStreamValue);
  methods[5].selector = @selector(stringValue);
  methods[6].selector = @selector(getPointer);
  methods[7].selector = @selector(setPointerWithLong:);
  methods[8].selector = @selector(getToRead);
  methods[9].selector = @selector(setToReadWithInt:);
  methods[10].selector = @selector(getBinaryValueWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneIndexFieldsReader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "toRead_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pointer_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "isCompressed_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, 8 },
    { "cacheResult_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LOrgApacheLuceneDocumentField_Store;IJZZZ", "LNSString;LOrgApacheLuceneDocumentField_Store;LOrgApacheLuceneDocumentField_Index;LOrgApacheLuceneDocumentField_TermVector;IJZZZ", "setPointer", "J", "setToRead", "I", "getBinaryValue", "[B", (void *)&OrgApacheLuceneIndexFieldsReader_LazyField__Annotations$0, "LOrgApacheLuceneIndexFieldsReader;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexFieldsReader_LazyField = { "LazyField", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x2, 11, 5, 9, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexFieldsReader_LazyField;
}

@end

void OrgApacheLuceneIndexFieldsReader_LazyField_initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withInt_withLong_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneIndexFieldsReader_LazyField *self, OrgApacheLuceneIndexFieldsReader *outer$, NSString *name, OrgApacheLuceneDocumentField_Store *store, jint toRead, jlong pointer, jboolean isBinary, jboolean isCompressed, jboolean cacheResult) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneDocumentAbstractField_initWithNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(self, name, store, JreLoadEnum(OrgApacheLuceneDocumentField_Index, NO), JreLoadEnum(OrgApacheLuceneDocumentField_TermVector, NO));
  self->toRead_ = toRead;
  self->pointer_ = pointer;
  self->isBinary_ = isBinary;
  self->cacheResult_ = cacheResult;
  if (isBinary) self->binaryLength_ = toRead;
  self->lazy_ = true;
  self->isCompressed_ = isCompressed;
}

OrgApacheLuceneIndexFieldsReader_LazyField *new_OrgApacheLuceneIndexFieldsReader_LazyField_initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withInt_withLong_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneIndexFieldsReader *outer$, NSString *name, OrgApacheLuceneDocumentField_Store *store, jint toRead, jlong pointer, jboolean isBinary, jboolean isCompressed, jboolean cacheResult) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexFieldsReader_LazyField, initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withInt_withLong_withBoolean_withBoolean_withBoolean_, outer$, name, store, toRead, pointer, isBinary, isCompressed, cacheResult)
}

OrgApacheLuceneIndexFieldsReader_LazyField *create_OrgApacheLuceneIndexFieldsReader_LazyField_initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withInt_withLong_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneIndexFieldsReader *outer$, NSString *name, OrgApacheLuceneDocumentField_Store *store, jint toRead, jlong pointer, jboolean isBinary, jboolean isCompressed, jboolean cacheResult) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexFieldsReader_LazyField, initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withInt_withLong_withBoolean_withBoolean_withBoolean_, outer$, name, store, toRead, pointer, isBinary, isCompressed, cacheResult)
}

void OrgApacheLuceneIndexFieldsReader_LazyField_initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_withInt_withLong_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneIndexFieldsReader_LazyField *self, OrgApacheLuceneIndexFieldsReader *outer$, NSString *name, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index, OrgApacheLuceneDocumentField_TermVector *termVector, jint toRead, jlong pointer, jboolean isBinary, jboolean isCompressed, jboolean cacheResult) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneDocumentAbstractField_initWithNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(self, name, store, index, termVector);
  self->toRead_ = toRead;
  self->pointer_ = pointer;
  self->isBinary_ = isBinary;
  self->cacheResult_ = cacheResult;
  if (isBinary) self->binaryLength_ = toRead;
  self->lazy_ = true;
  self->isCompressed_ = isCompressed;
}

OrgApacheLuceneIndexFieldsReader_LazyField *new_OrgApacheLuceneIndexFieldsReader_LazyField_initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_withInt_withLong_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneIndexFieldsReader *outer$, NSString *name, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index, OrgApacheLuceneDocumentField_TermVector *termVector, jint toRead, jlong pointer, jboolean isBinary, jboolean isCompressed, jboolean cacheResult) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexFieldsReader_LazyField, initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_withInt_withLong_withBoolean_withBoolean_withBoolean_, outer$, name, store, index, termVector, toRead, pointer, isBinary, isCompressed, cacheResult)
}

OrgApacheLuceneIndexFieldsReader_LazyField *create_OrgApacheLuceneIndexFieldsReader_LazyField_initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_withInt_withLong_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneIndexFieldsReader *outer$, NSString *name, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index, OrgApacheLuceneDocumentField_TermVector *termVector, jint toRead, jlong pointer, jboolean isBinary, jboolean isCompressed, jboolean cacheResult) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexFieldsReader_LazyField, initWithOrgApacheLuceneIndexFieldsReader_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_withInt_withLong_withBoolean_withBoolean_withBoolean_, outer$, name, store, index, termVector, toRead, pointer, isBinary, isCompressed, cacheResult)
}

OrgApacheLuceneStoreIndexInput *OrgApacheLuceneIndexFieldsReader_LazyField_getFieldStream(OrgApacheLuceneIndexFieldsReader_LazyField *self) {
  OrgApacheLuceneStoreIndexInput *localFieldsStream = [((OrgApacheLuceneUtilCloseableThreadLocal *) nil_chk(self->this$0_->fieldsStreamTL_)) get];
  if (localFieldsStream == nil) {
    localFieldsStream = (OrgApacheLuceneStoreIndexInput *) cast_chk([((OrgApacheLuceneStoreIndexInput *) nil_chk(self->this$0_->cloneableFieldsStream_)) java_clone], [OrgApacheLuceneStoreIndexInput class]);
    [((OrgApacheLuceneUtilCloseableThreadLocal *) nil_chk(self->this$0_->fieldsStreamTL_)) setWithId:localFieldsStream];
  }
  return localFieldsStream;
}

IOSObjectArray *OrgApacheLuceneIndexFieldsReader_LazyField__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexFieldsReader_LazyField)
