//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/index/FormatPostingsTermsConsumer.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/index/FormatPostingsDocsConsumer.h"
#include "org/apache/lucene/index/FormatPostingsTermsConsumer.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"

@implementation OrgApacheLuceneIndexFormatPostingsTermsConsumer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexFormatPostingsTermsConsumer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneIndexFormatPostingsDocsConsumer *)addTermWithCharArray:(IOSCharArray *)text
                                                                 withInt:(jint)start {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgApacheLuceneIndexFormatPostingsDocsConsumer *)addTermWithNSString:(NSString *)text {
  jint len = [((NSString *) nil_chk(text)) java_length];
  if (termBuffer_ == nil || termBuffer_->size_ < 1 + len) JreStrongAssignAndConsume(&termBuffer_, [IOSCharArray newArrayWithLength:OrgApacheLuceneUtilArrayUtil_oversizeWithInt_withInt_(1 + len, OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_CHAR)]);
  [text java_getChars:0 sourceEnd:len destination:termBuffer_ destinationBegin:0];
  *IOSCharArray_GetRef(nil_chk(termBuffer_), len) = (jint) 0xffff;
  return [self addTermWithCharArray:termBuffer_ withInt:0];
}

- (void)finish {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)dealloc {
  RELEASE_(termBuffer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexFormatPostingsDocsConsumer;", 0x400, 0, 1, 2, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexFormatPostingsDocsConsumer;", 0x0, 0, 3, 2, -1, -1, -1 },
    { NULL, "V", 0x400, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addTermWithCharArray:withInt:);
  methods[2].selector = @selector(addTermWithNSString:);
  methods[3].selector = @selector(finish);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "termBuffer_", "[C", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "addTerm", "[CI", "LJavaIoIOException;", "LNSString;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexFormatPostingsTermsConsumer = { "FormatPostingsTermsConsumer", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x400, 4, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexFormatPostingsTermsConsumer;
}

@end

void OrgApacheLuceneIndexFormatPostingsTermsConsumer_init(OrgApacheLuceneIndexFormatPostingsTermsConsumer *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexFormatPostingsTermsConsumer)
