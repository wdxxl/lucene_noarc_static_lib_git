//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/index/FormatPostingsDocsWriter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "org/apache/lucene/index/CorruptIndexException.h"
#include "org/apache/lucene/index/DefaultSkipListWriter.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FormatPostingsDocsConsumer.h"
#include "org/apache/lucene/index/FormatPostingsDocsWriter.h"
#include "org/apache/lucene/index/FormatPostingsFieldsWriter.h"
#include "org/apache/lucene/index/FormatPostingsPositionsConsumer.h"
#include "org/apache/lucene/index/FormatPostingsPositionsWriter.h"
#include "org/apache/lucene/index/FormatPostingsTermsWriter.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/SegmentWriteState.h"
#include "org/apache/lucene/index/TermInfo.h"
#include "org/apache/lucene/index/TermInfosWriter.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/UnicodeUtil.h"

@interface OrgApacheLuceneIndexFormatPostingsDocsWriter () {
 @public
  OrgApacheLuceneIndexTermInfo *termInfo_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexFormatPostingsDocsWriter, termInfo_, OrgApacheLuceneIndexTermInfo *)

@implementation OrgApacheLuceneIndexFormatPostingsDocsWriter

- (instancetype)initWithOrgApacheLuceneIndexSegmentWriteState:(OrgApacheLuceneIndexSegmentWriteState *)state
            withOrgApacheLuceneIndexFormatPostingsTermsWriter:(OrgApacheLuceneIndexFormatPostingsTermsWriter *)parent {
  OrgApacheLuceneIndexFormatPostingsDocsWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withOrgApacheLuceneIndexFormatPostingsTermsWriter_(self, state, parent);
  return self;
}

- (void)setFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo {
  JreStrongAssign(&self->fieldInfo_, fieldInfo);
  omitTermFreqAndPositions_ = (((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo))->indexOptions_ == JreLoadEnum(OrgApacheLuceneIndexFieldInfo_IndexOptions, DOCS_ONLY));
  storePayloads_ = fieldInfo->storePayloads_;
  [((OrgApacheLuceneIndexFormatPostingsPositionsWriter *) nil_chk(posWriter_)) setFieldWithOrgApacheLuceneIndexFieldInfo:fieldInfo];
}

- (OrgApacheLuceneIndexFormatPostingsPositionsConsumer *)addDocWithInt:(jint)docID
                                                               withInt:(jint)termDocFreq {
  jint delta = docID - lastDocID_;
  if (docID < 0 || (df_ > 0 && delta <= 0)) @throw create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_(JreStrcat("$I$I$@C", @"docs out of order (", docID, @" <= ", lastDocID_, @" ) (out: ", out_, ')'));
  if ((++df_ % skipInterval_) == 0) {
    [((OrgApacheLuceneIndexDefaultSkipListWriter *) nil_chk(skipListWriter_)) setSkipDataWithInt:lastDocID_ withBoolean:storePayloads_ withInt:((OrgApacheLuceneIndexFormatPostingsPositionsWriter *) nil_chk(posWriter_))->lastPayloadLength_];
    [skipListWriter_ bufferSkipWithInt:df_];
  }
  JreAssert((docID < totalNumDocs_), (JreStrcat("$I$I", @"docID=", docID, @" totalNumDocs=", totalNumDocs_)));
  lastDocID_ = docID;
  if (omitTermFreqAndPositions_) [((OrgApacheLuceneStoreIndexOutput *) nil_chk(out_)) writeVIntWithInt:delta];
  else if (1 == termDocFreq) [((OrgApacheLuceneStoreIndexOutput *) nil_chk(out_)) writeVIntWithInt:(JreLShift32(delta, 1)) | 1];
  else {
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(out_)) writeVIntWithInt:JreLShift32(delta, 1)];
    [out_ writeVIntWithInt:termDocFreq];
  }
  return posWriter_;
}

- (void)finish {
  jlong skipPointer = [((OrgApacheLuceneIndexDefaultSkipListWriter *) nil_chk(skipListWriter_)) writeSkipWithOrgApacheLuceneStoreIndexOutput:out_];
  [((OrgApacheLuceneIndexTermInfo *) nil_chk(termInfo_)) setWithInt:df_ withLong:((OrgApacheLuceneIndexFormatPostingsTermsWriter *) nil_chk(parent_))->freqStart_ withLong:parent_->proxStart_ withInt:(jint) (skipPointer - parent_->freqStart_)];
  OrgApacheLuceneUtilUnicodeUtil_UTF16toUTF8WithCharArray_withInt_withOrgApacheLuceneUtilUnicodeUtil_UTF8Result_(parent_->currentTerm_, parent_->currentTermStart_, utf8_);
  if (df_ > 0) {
    [((OrgApacheLuceneIndexTermInfosWriter *) nil_chk(parent_->termsOut_)) addWithInt:((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo_))->number_ withByteArray:((OrgApacheLuceneUtilUnicodeUtil_UTF8Result *) nil_chk(utf8_))->result_ withInt:utf8_->length_ withOrgApacheLuceneIndexTermInfo:termInfo_];
  }
  lastDocID_ = 0;
  df_ = 0;
}

- (void)close {
  OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ out_, posWriter_ } count:2 type:JavaIoCloseable_class_()]);
}

- (void)__javaClone:(OrgApacheLuceneIndexFormatPostingsDocsWriter *)original {
  [super __javaClone:original];
  [parent_ release];
  [posWriter_ release];
}

- (void)dealloc {
  RELEASE_(out_);
  RELEASE_(skipListWriter_);
  RELEASE_(fieldInfo_);
  RELEASE_(termInfo_);
  RELEASE_(utf8_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexFormatPostingsPositionsConsumer;", 0x0, 4, 5, 1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexSegmentWriteState:withOrgApacheLuceneIndexFormatPostingsTermsWriter:);
  methods[1].selector = @selector(setFieldWithOrgApacheLuceneIndexFieldInfo:);
  methods[2].selector = @selector(addDocWithInt:withInt:);
  methods[3].selector = @selector(finish);
  methods[4].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "out_", "LOrgApacheLuceneStoreIndexOutput;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "parent_", "LOrgApacheLuceneIndexFormatPostingsTermsWriter;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "posWriter_", "LOrgApacheLuceneIndexFormatPostingsPositionsWriter;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "skipListWriter_", "LOrgApacheLuceneIndexDefaultSkipListWriter;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "skipInterval_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "totalNumDocs_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "omitTermFreqAndPositions_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "storePayloads_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "freqStart_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "fieldInfo_", "LOrgApacheLuceneIndexFieldInfo;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "lastDocID_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "df_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "termInfo_", "LOrgApacheLuceneIndexTermInfo;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "utf8_", "LOrgApacheLuceneUtilUnicodeUtil_UTF8Result;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexSegmentWriteState;LOrgApacheLuceneIndexFormatPostingsTermsWriter;", "LJavaIoIOException;", "setField", "LOrgApacheLuceneIndexFieldInfo;", "addDoc", "II" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexFormatPostingsDocsWriter = { "FormatPostingsDocsWriter", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x10, 5, 14, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexFormatPostingsDocsWriter;
}

@end

void OrgApacheLuceneIndexFormatPostingsDocsWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withOrgApacheLuceneIndexFormatPostingsTermsWriter_(OrgApacheLuceneIndexFormatPostingsDocsWriter *self, OrgApacheLuceneIndexSegmentWriteState *state, OrgApacheLuceneIndexFormatPostingsTermsWriter *parent) {
  OrgApacheLuceneIndexFormatPostingsDocsConsumer_init(self);
  JreStrongAssignAndConsume(&self->termInfo_, new_OrgApacheLuceneIndexTermInfo_init());
  JreStrongAssignAndConsume(&self->utf8_, new_OrgApacheLuceneUtilUnicodeUtil_UTF8Result_init());
  self->parent_ = parent;
  JreStrongAssign(&self->out_, [((OrgApacheLuceneStoreDirectory *) nil_chk(((OrgApacheLuceneIndexFormatPostingsFieldsWriter *) nil_chk(((OrgApacheLuceneIndexFormatPostingsTermsWriter *) nil_chk(parent))->parent_))->dir_)) createOutputWithNSString:OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_(parent->parent_->segment_, OrgApacheLuceneIndexIndexFileNames_FREQ_EXTENSION)]);
  jboolean success = false;
  @try {
    self->totalNumDocs_ = parent->parent_->totalNumDocs_;
    self->skipInterval_ = ((OrgApacheLuceneIndexTermInfosWriter *) nil_chk(parent->parent_->termsOut_))->skipInterval_;
    JreStrongAssign(&self->skipListWriter_, parent->parent_->skipListWriter_);
    [((OrgApacheLuceneIndexDefaultSkipListWriter *) nil_chk(self->skipListWriter_)) setFreqOutputWithOrgApacheLuceneStoreIndexOutput:self->out_];
    self->posWriter_ = create_OrgApacheLuceneIndexFormatPostingsPositionsWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withOrgApacheLuceneIndexFormatPostingsDocsWriter_(state, self);
    success = true;
  }
  @finally {
    if (!success) {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ self->out_ } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

OrgApacheLuceneIndexFormatPostingsDocsWriter *new_OrgApacheLuceneIndexFormatPostingsDocsWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withOrgApacheLuceneIndexFormatPostingsTermsWriter_(OrgApacheLuceneIndexSegmentWriteState *state, OrgApacheLuceneIndexFormatPostingsTermsWriter *parent) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexFormatPostingsDocsWriter, initWithOrgApacheLuceneIndexSegmentWriteState_withOrgApacheLuceneIndexFormatPostingsTermsWriter_, state, parent)
}

OrgApacheLuceneIndexFormatPostingsDocsWriter *create_OrgApacheLuceneIndexFormatPostingsDocsWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withOrgApacheLuceneIndexFormatPostingsTermsWriter_(OrgApacheLuceneIndexSegmentWriteState *state, OrgApacheLuceneIndexFormatPostingsTermsWriter *parent) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexFormatPostingsDocsWriter, initWithOrgApacheLuceneIndexSegmentWriteState_withOrgApacheLuceneIndexFormatPostingsTermsWriter_, state, parent)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexFormatPostingsDocsWriter)
