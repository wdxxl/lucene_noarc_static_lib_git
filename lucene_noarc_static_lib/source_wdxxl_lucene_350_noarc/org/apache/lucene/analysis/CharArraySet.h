//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/analysis/CharArraySet.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCharArraySet")
#ifdef RESTRICT_OrgApacheLuceneAnalysisCharArraySet
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCharArraySet 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCharArraySet 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisCharArraySet

#if !defined (OrgApacheLuceneAnalysisCharArraySet_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisCharArraySet || defined(INCLUDE_OrgApacheLuceneAnalysisCharArraySet))
#define OrgApacheLuceneAnalysisCharArraySet_

#define RESTRICT_JavaUtilAbstractSet 1
#define INCLUDE_JavaUtilAbstractSet 1
#include "java/util/AbstractSet.h"

@class IOSCharArray;
@class OrgApacheLuceneAnalysisCharArrayMap;
@class OrgApacheLuceneUtilVersion;
@protocol JavaLangCharSequence;
@protocol JavaUtilCollection;
@protocol JavaUtilIterator;
@protocol JavaUtilSet;

@interface OrgApacheLuceneAnalysisCharArraySet : JavaUtilAbstractSet

#pragma mark Public

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)c
                               withBoolean:(jboolean)ignoreCase;

- (instancetype)initWithInt:(jint)startSize
                withBoolean:(jboolean)ignoreCase;

- (instancetype)initWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion
                            withJavaUtilCollection:(id<JavaUtilCollection>)c
                                       withBoolean:(jboolean)ignoreCase;

- (instancetype)initWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion
                                           withInt:(jint)startSize
                                       withBoolean:(jboolean)ignoreCase;

- (jboolean)addWithCharArray:(IOSCharArray *)text;

- (jboolean)addWithJavaLangCharSequence:(id<JavaLangCharSequence>)text;

- (jboolean)addWithId:(id)o;

- (jboolean)addWithNSString:(NSString *)text;

- (void)clear;

- (jboolean)containsWithCharArray:(IOSCharArray *)text
                          withInt:(jint)off
                          withInt:(jint)len;

- (jboolean)containsWithJavaLangCharSequence:(id<JavaLangCharSequence>)cs;

- (jboolean)containsWithId:(id)o;

+ (OrgApacheLuceneAnalysisCharArraySet *)copy__WithJavaUtilSet:(id<JavaUtilSet>)set OBJC_METHOD_FAMILY_NONE;

+ (OrgApacheLuceneAnalysisCharArraySet *)copy__WithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion
                                                              withJavaUtilSet:(id<JavaUtilSet>)set OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilIterator>)iterator;

- (jint)size;

- (id<JavaUtilIterator>)stringIterator;

- (NSString *)description;

+ (OrgApacheLuceneAnalysisCharArraySet *)unmodifiableSetWithOrgApacheLuceneAnalysisCharArraySet:(OrgApacheLuceneAnalysisCharArraySet *)set;

#pragma mark Package-Private

- (instancetype)initWithOrgApacheLuceneAnalysisCharArrayMap:(OrgApacheLuceneAnalysisCharArrayMap *)map;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneAnalysisCharArraySet)

inline OrgApacheLuceneAnalysisCharArraySet *OrgApacheLuceneAnalysisCharArraySet_get_EMPTY_SET();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharArraySet *OrgApacheLuceneAnalysisCharArraySet_EMPTY_SET;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisCharArraySet, EMPTY_SET, OrgApacheLuceneAnalysisCharArraySet *)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCharArraySet_initWithOrgApacheLuceneUtilVersion_withInt_withBoolean_(OrgApacheLuceneAnalysisCharArraySet *self, OrgApacheLuceneUtilVersion *matchVersion, jint startSize, jboolean ignoreCase);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharArraySet *new_OrgApacheLuceneAnalysisCharArraySet_initWithOrgApacheLuceneUtilVersion_withInt_withBoolean_(OrgApacheLuceneUtilVersion *matchVersion, jint startSize, jboolean ignoreCase) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharArraySet *create_OrgApacheLuceneAnalysisCharArraySet_initWithOrgApacheLuceneUtilVersion_withInt_withBoolean_(OrgApacheLuceneUtilVersion *matchVersion, jint startSize, jboolean ignoreCase);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCharArraySet_initWithOrgApacheLuceneUtilVersion_withJavaUtilCollection_withBoolean_(OrgApacheLuceneAnalysisCharArraySet *self, OrgApacheLuceneUtilVersion *matchVersion, id<JavaUtilCollection> c, jboolean ignoreCase);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharArraySet *new_OrgApacheLuceneAnalysisCharArraySet_initWithOrgApacheLuceneUtilVersion_withJavaUtilCollection_withBoolean_(OrgApacheLuceneUtilVersion *matchVersion, id<JavaUtilCollection> c, jboolean ignoreCase) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharArraySet *create_OrgApacheLuceneAnalysisCharArraySet_initWithOrgApacheLuceneUtilVersion_withJavaUtilCollection_withBoolean_(OrgApacheLuceneUtilVersion *matchVersion, id<JavaUtilCollection> c, jboolean ignoreCase);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCharArraySet_initWithInt_withBoolean_(OrgApacheLuceneAnalysisCharArraySet *self, jint startSize, jboolean ignoreCase);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharArraySet *new_OrgApacheLuceneAnalysisCharArraySet_initWithInt_withBoolean_(jint startSize, jboolean ignoreCase) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharArraySet *create_OrgApacheLuceneAnalysisCharArraySet_initWithInt_withBoolean_(jint startSize, jboolean ignoreCase);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCharArraySet_initWithJavaUtilCollection_withBoolean_(OrgApacheLuceneAnalysisCharArraySet *self, id<JavaUtilCollection> c, jboolean ignoreCase);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharArraySet *new_OrgApacheLuceneAnalysisCharArraySet_initWithJavaUtilCollection_withBoolean_(id<JavaUtilCollection> c, jboolean ignoreCase) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharArraySet *create_OrgApacheLuceneAnalysisCharArraySet_initWithJavaUtilCollection_withBoolean_(id<JavaUtilCollection> c, jboolean ignoreCase);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCharArraySet_initWithOrgApacheLuceneAnalysisCharArrayMap_(OrgApacheLuceneAnalysisCharArraySet *self, OrgApacheLuceneAnalysisCharArrayMap *map);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharArraySet *new_OrgApacheLuceneAnalysisCharArraySet_initWithOrgApacheLuceneAnalysisCharArrayMap_(OrgApacheLuceneAnalysisCharArrayMap *map) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharArraySet *create_OrgApacheLuceneAnalysisCharArraySet_initWithOrgApacheLuceneAnalysisCharArrayMap_(OrgApacheLuceneAnalysisCharArrayMap *map);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharArraySet *OrgApacheLuceneAnalysisCharArraySet_unmodifiableSetWithOrgApacheLuceneAnalysisCharArraySet_(OrgApacheLuceneAnalysisCharArraySet *set);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharArraySet *OrgApacheLuceneAnalysisCharArraySet_copy__WithJavaUtilSet_(id<JavaUtilSet> set);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharArraySet *OrgApacheLuceneAnalysisCharArraySet_copy__WithOrgApacheLuceneUtilVersion_withJavaUtilSet_(OrgApacheLuceneUtilVersion *matchVersion, id<JavaUtilSet> set);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisCharArraySet)

#endif

#if !defined (OrgApacheLuceneAnalysisCharArraySet_CharArraySetIterator_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisCharArraySet || defined(INCLUDE_OrgApacheLuceneAnalysisCharArraySet_CharArraySetIterator))
#define OrgApacheLuceneAnalysisCharArraySet_CharArraySetIterator_

#define RESTRICT_JavaUtilIterator 1
#define INCLUDE_JavaUtilIterator 1
#include "java/util/Iterator.h"

@class IOSCharArray;
@protocol JavaUtilFunctionConsumer;

@interface OrgApacheLuceneAnalysisCharArraySet_CharArraySetIterator : NSObject < JavaUtilIterator > {
 @public
  jint pos_;
  IOSCharArray *next_;
}

#pragma mark Public

- (jboolean)hasNext;

- (NSString *)next;

- (IOSCharArray *)nextCharArray;

- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisCharArraySet_CharArraySetIterator)

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCharArraySet_CharArraySetIterator, next_, IOSCharArray *)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisCharArraySet_CharArraySetIterator)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCharArraySet")
