//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/analysis/standard/StandardTokenizerImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisStandardStandardTokenizerImpl")
#ifdef RESTRICT_OrgApacheLuceneAnalysisStandardStandardTokenizerImpl
#define INCLUDE_ALL_OrgApacheLuceneAnalysisStandardStandardTokenizerImpl 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisStandardStandardTokenizerImpl 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisStandardStandardTokenizerImpl

#if !defined (OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisStandardStandardTokenizerImpl || defined(INCLUDE_OrgApacheLuceneAnalysisStandardStandardTokenizerImpl))
#define OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_

#define RESTRICT_OrgApacheLuceneAnalysisStandardStandardTokenizerInterface 1
#define INCLUDE_OrgApacheLuceneAnalysisStandardStandardTokenizerInterface 1
#include "org/apache/lucene/analysis/standard/StandardTokenizerInterface.h"

@class JavaIoInputStream;
@class JavaIoReader;
@protocol OrgApacheLuceneAnalysisTokenattributesCharTermAttribute;

@interface OrgApacheLuceneAnalysisStandardStandardTokenizerImpl : NSObject < OrgApacheLuceneAnalysisStandardStandardTokenizerInterface >

#pragma mark Public

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (instancetype)initWithJavaIoReader:(JavaIoReader *)inArg;

- (jint)getNextToken;

- (void)getTextWithOrgApacheLuceneAnalysisTokenattributesCharTermAttribute:(id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)t;

- (void)yybeginWithInt:(jint)newState;

- (jint)yychar;

- (jchar)yycharatWithInt:(jint)pos;

- (void)yyclose;

- (jint)yylength;

- (void)yypushbackWithInt:(jint)number;

- (void)yyresetWithJavaIoReader:(JavaIoReader *)reader;

- (jint)yystate;

- (NSString *)yytext;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneAnalysisStandardStandardTokenizerImpl)

inline jint OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_get_YYEOF();
#define OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_YYEOF -1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardStandardTokenizerImpl, YYEOF, jint)

inline jint OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_get_YYINITIAL();
#define OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_YYINITIAL 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardStandardTokenizerImpl, YYINITIAL, jint)

inline jint OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_get_WORD_TYPE();
#define OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_WORD_TYPE 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardStandardTokenizerImpl, WORD_TYPE, jint)

inline jint OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_get_NUMERIC_TYPE();
#define OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_NUMERIC_TYPE 6
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardStandardTokenizerImpl, NUMERIC_TYPE, jint)

inline jint OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_get_SOUTH_EAST_ASIAN_TYPE();
#define OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_SOUTH_EAST_ASIAN_TYPE 9
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardStandardTokenizerImpl, SOUTH_EAST_ASIAN_TYPE, jint)

inline jint OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_get_IDEOGRAPHIC_TYPE();
#define OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_IDEOGRAPHIC_TYPE 10
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardStandardTokenizerImpl, IDEOGRAPHIC_TYPE, jint)

inline jint OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_get_HIRAGANA_TYPE();
#define OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_HIRAGANA_TYPE 11
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardStandardTokenizerImpl, HIRAGANA_TYPE, jint)

inline jint OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_get_KATAKANA_TYPE();
#define OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_KATAKANA_TYPE 12
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardStandardTokenizerImpl, KATAKANA_TYPE, jint)

inline jint OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_get_HANGUL_TYPE();
#define OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_HANGUL_TYPE 13
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisStandardStandardTokenizerImpl, HANGUL_TYPE, jint)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_initWithJavaIoReader_(OrgApacheLuceneAnalysisStandardStandardTokenizerImpl *self, JavaIoReader *inArg);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisStandardStandardTokenizerImpl *new_OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_initWithJavaIoReader_(JavaIoReader *inArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisStandardStandardTokenizerImpl *create_OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_initWithJavaIoReader_(JavaIoReader *inArg);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_initWithJavaIoInputStream_(OrgApacheLuceneAnalysisStandardStandardTokenizerImpl *self, JavaIoInputStream *inArg);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisStandardStandardTokenizerImpl *new_OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_initWithJavaIoInputStream_(JavaIoInputStream *inArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisStandardStandardTokenizerImpl *create_OrgApacheLuceneAnalysisStandardStandardTokenizerImpl_initWithJavaIoInputStream_(JavaIoInputStream *inArg);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisStandardStandardTokenizerImpl)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisStandardStandardTokenizerImpl")
