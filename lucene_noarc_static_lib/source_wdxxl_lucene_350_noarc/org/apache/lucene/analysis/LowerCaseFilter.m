//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/analysis/LowerCaseFilter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Character.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "org/apache/lucene/analysis/LowerCaseFilter.h"
#include "org/apache/lucene/analysis/TokenFilter.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/util/CharacterUtils.h"
#include "org/apache/lucene/util/Version.h"

@interface OrgApacheLuceneAnalysisLowerCaseFilter () {
 @public
  OrgApacheLuceneUtilCharacterUtils *charUtils_;
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisLowerCaseFilter, charUtils_, OrgApacheLuceneUtilCharacterUtils *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisLowerCaseFilter, termAtt_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneAnalysisLowerCaseFilter__Annotations$0();

@implementation OrgApacheLuceneAnalysisLowerCaseFilter

- (instancetype)initWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion
            withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg {
  OrgApacheLuceneAnalysisLowerCaseFilter_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_(self, matchVersion, inArg);
  return self;
}

- (instancetype)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg {
  OrgApacheLuceneAnalysisLowerCaseFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, inArg);
  return self;
}

- (jboolean)incrementToken {
  if ([((OrgApacheLuceneAnalysisTokenStream *) nil_chk(input_)) incrementToken]) {
    IOSCharArray *buffer = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt_)) buffer];
    jint length = [termAtt_ java_length];
    for (jint i = 0; i < length; ) {
      i += JavaLangCharacter_toCharsWithInt_withCharArray_withInt_(JavaLangCharacter_toLowerCaseWithInt_([((OrgApacheLuceneUtilCharacterUtils *) nil_chk(charUtils_)) codePointAtWithCharArray:buffer withInt:i]), buffer, i);
    }
    return true;
  }
  else return false;
}

- (void)dealloc {
  RELEASE_(charUtils_);
  RELEASE_(termAtt_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, 2, -1 },
    { NULL, "Z", 0x11, -1, -1, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneUtilVersion:withOrgApacheLuceneAnalysisTokenStream:);
  methods[1].selector = @selector(initWithOrgApacheLuceneAnalysisTokenStream:);
  methods[2].selector = @selector(incrementToken);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "charUtils_", "LOrgApacheLuceneUtilCharacterUtils;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "termAtt_", "LOrgApacheLuceneAnalysisTokenattributesCharTermAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilVersion;LOrgApacheLuceneAnalysisTokenStream;", "LOrgApacheLuceneAnalysisTokenStream;", (void *)&OrgApacheLuceneAnalysisLowerCaseFilter__Annotations$0, "LJavaIoIOException;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisLowerCaseFilter = { "LowerCaseFilter", "org.apache.lucene.analysis", ptrTable, methods, fields, 7, 0x11, 3, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisLowerCaseFilter;
}

@end

void OrgApacheLuceneAnalysisLowerCaseFilter_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisLowerCaseFilter *self, OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneAnalysisTokenStream *inArg) {
  OrgApacheLuceneAnalysisTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, inArg);
  JreStrongAssign(&self->termAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  JreStrongAssign(&self->charUtils_, OrgApacheLuceneUtilCharacterUtils_getInstanceWithOrgApacheLuceneUtilVersion_(matchVersion));
}

OrgApacheLuceneAnalysisLowerCaseFilter *new_OrgApacheLuceneAnalysisLowerCaseFilter_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneAnalysisTokenStream *inArg) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisLowerCaseFilter, initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_, matchVersion, inArg)
}

OrgApacheLuceneAnalysisLowerCaseFilter *create_OrgApacheLuceneAnalysisLowerCaseFilter_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneAnalysisTokenStream *inArg) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisLowerCaseFilter, initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_, matchVersion, inArg)
}

void OrgApacheLuceneAnalysisLowerCaseFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisLowerCaseFilter *self, OrgApacheLuceneAnalysisTokenStream *inArg) {
  OrgApacheLuceneAnalysisLowerCaseFilter_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_(self, JreLoadEnum(OrgApacheLuceneUtilVersion, LUCENE_30), inArg);
}

OrgApacheLuceneAnalysisLowerCaseFilter *new_OrgApacheLuceneAnalysisLowerCaseFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *inArg) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisLowerCaseFilter, initWithOrgApacheLuceneAnalysisTokenStream_, inArg)
}

OrgApacheLuceneAnalysisLowerCaseFilter *create_OrgApacheLuceneAnalysisLowerCaseFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *inArg) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisLowerCaseFilter, initWithOrgApacheLuceneAnalysisTokenStream_, inArg)
}

IOSObjectArray *OrgApacheLuceneAnalysisLowerCaseFilter__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisLowerCaseFilter)
