//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/analysis/tokenattributes/OffsetAttributeImpl.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/analysis/tokenattributes/OffsetAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/OffsetAttributeImpl.h"
#include "org/apache/lucene/util/AttributeImpl.h"

@interface OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl () {
 @public
  jint startOffset_;
  jint endOffset_;
}

@end

@implementation OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)startOffset {
  return startOffset_;
}

- (void)setOffsetWithInt:(jint)startOffset
                 withInt:(jint)endOffset {
  self->startOffset_ = startOffset;
  self->endOffset_ = endOffset;
}

- (jint)endOffset {
  return endOffset_;
}

- (void)clear {
  startOffset_ = 0;
  endOffset_ = 0;
}

- (jboolean)isEqual:(id)other {
  if (other == self) {
    return true;
  }
  if ([other isKindOfClass:[OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl class]]) {
    OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl *o = (OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl *) cast_chk(other, [OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl class]);
    return ((OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl *) nil_chk(o))->startOffset_ == startOffset_ && o->endOffset_ == endOffset_;
  }
  return false;
}

- (NSUInteger)hash {
  jint code = startOffset_;
  code = code * 31 + endOffset_;
  return code;
}

- (void)copyToWithOrgApacheLuceneUtilAttributeImpl:(OrgApacheLuceneUtilAttributeImpl *)target {
  id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute> t = (id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) cast_check(target, OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_());
  [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(t)) setOffsetWithInt:startOffset_ withInt:endOffset_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(startOffset);
  methods[2].selector = @selector(setOffsetWithInt:withInt:);
  methods[3].selector = @selector(endOffset);
  methods[4].selector = @selector(clear);
  methods[5].selector = @selector(isEqual:);
  methods[6].selector = @selector(hash);
  methods[7].selector = @selector(copyToWithOrgApacheLuceneUtilAttributeImpl:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "startOffset_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "endOffset_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setOffset", "II", "equals", "LNSObject;", "hashCode", "copyTo", "LOrgApacheLuceneUtilAttributeImpl;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl = { "OffsetAttributeImpl", "org.apache.lucene.analysis.tokenattributes", ptrTable, methods, fields, 7, 0x1, 8, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl;
}

@end

void OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl_init(OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl *self) {
  OrgApacheLuceneUtilAttributeImpl_init(self);
}

OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl *new_OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl, init)
}

OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl *create_OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisTokenattributesOffsetAttributeImpl)
