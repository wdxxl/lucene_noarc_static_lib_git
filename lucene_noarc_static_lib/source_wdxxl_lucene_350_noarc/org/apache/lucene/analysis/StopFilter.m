//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/analysis/StopFilter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "org/apache/lucene/analysis/CharArraySet.h"
#include "org/apache/lucene/analysis/FilteringTokenFilter.h"
#include "org/apache/lucene/analysis/StopFilter.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/util/Version.h"

@interface OrgApacheLuceneAnalysisStopFilter () {
 @public
  OrgApacheLuceneAnalysisCharArraySet *stopWords_;
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt_;
}

- (instancetype)initWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion
                                       withBoolean:(jboolean)enablePositionIncrements
            withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input
                                   withJavaUtilSet:(id<JavaUtilSet>)stopWords
                                       withBoolean:(jboolean)ignoreCase;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisStopFilter, stopWords_, OrgApacheLuceneAnalysisCharArraySet *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisStopFilter, termAtt_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)

__attribute__((unused)) static void OrgApacheLuceneAnalysisStopFilter_initWithOrgApacheLuceneUtilVersion_withBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_(OrgApacheLuceneAnalysisStopFilter *self, OrgApacheLuceneUtilVersion *matchVersion, jboolean enablePositionIncrements, OrgApacheLuceneAnalysisTokenStream *input, id<JavaUtilSet> stopWords, jboolean ignoreCase);

__attribute__((unused)) static OrgApacheLuceneAnalysisStopFilter *new_OrgApacheLuceneAnalysisStopFilter_initWithOrgApacheLuceneUtilVersion_withBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_(OrgApacheLuceneUtilVersion *matchVersion, jboolean enablePositionIncrements, OrgApacheLuceneAnalysisTokenStream *input, id<JavaUtilSet> stopWords, jboolean ignoreCase) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneAnalysisStopFilter *create_OrgApacheLuceneAnalysisStopFilter_initWithOrgApacheLuceneUtilVersion_withBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_(OrgApacheLuceneUtilVersion *matchVersion, jboolean enablePositionIncrements, OrgApacheLuceneAnalysisTokenStream *input, id<JavaUtilSet> stopWords, jboolean ignoreCase);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneAnalysisStopFilter__Annotations$0();

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneAnalysisStopFilter__Annotations$1();

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneAnalysisStopFilter__Annotations$2();

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneAnalysisStopFilter__Annotations$3();

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneAnalysisStopFilter__Annotations$4();

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneAnalysisStopFilter__Annotations$5();

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneAnalysisStopFilter__Annotations$6();

@implementation OrgApacheLuceneAnalysisStopFilter

- (instancetype)initWithBoolean:(jboolean)enablePositionIncrements
withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input
                withJavaUtilSet:(id<JavaUtilSet>)stopWords
                    withBoolean:(jboolean)ignoreCase {
  OrgApacheLuceneAnalysisStopFilter_initWithBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_(self, enablePositionIncrements, input, stopWords, ignoreCase);
  return self;
}

- (instancetype)initWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion
            withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input
                                   withJavaUtilSet:(id<JavaUtilSet>)stopWords
                                       withBoolean:(jboolean)ignoreCase {
  OrgApacheLuceneAnalysisStopFilter_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_(self, matchVersion, input, stopWords, ignoreCase);
  return self;
}

- (instancetype)initWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion
                                       withBoolean:(jboolean)enablePositionIncrements
            withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input
                                   withJavaUtilSet:(id<JavaUtilSet>)stopWords
                                       withBoolean:(jboolean)ignoreCase {
  OrgApacheLuceneAnalysisStopFilter_initWithOrgApacheLuceneUtilVersion_withBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_(self, matchVersion, enablePositionIncrements, input, stopWords, ignoreCase);
  return self;
}

- (instancetype)initWithBoolean:(jboolean)enablePositionIncrements
withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg
                withJavaUtilSet:(id<JavaUtilSet>)stopWords {
  OrgApacheLuceneAnalysisStopFilter_initWithBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_(self, enablePositionIncrements, inArg, stopWords);
  return self;
}

- (instancetype)initWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion
            withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg
                                   withJavaUtilSet:(id<JavaUtilSet>)stopWords {
  OrgApacheLuceneAnalysisStopFilter_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_(self, matchVersion, inArg, stopWords);
  return self;
}

+ (id<JavaUtilSet>)makeStopSetWithNSStringArray:(IOSObjectArray *)stopWords {
  return OrgApacheLuceneAnalysisStopFilter_makeStopSetWithNSStringArray_(stopWords);
}

+ (id<JavaUtilSet>)makeStopSetWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion
                                           withNSStringArray:(IOSObjectArray *)stopWords {
  return OrgApacheLuceneAnalysisStopFilter_makeStopSetWithOrgApacheLuceneUtilVersion_withNSStringArray_(matchVersion, stopWords);
}

+ (id<JavaUtilSet>)makeStopSetWithJavaUtilList:(id<JavaUtilList>)stopWords {
  return OrgApacheLuceneAnalysisStopFilter_makeStopSetWithJavaUtilList_(stopWords);
}

+ (id<JavaUtilSet>)makeStopSetWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion
                                            withJavaUtilList:(id<JavaUtilList>)stopWords {
  return OrgApacheLuceneAnalysisStopFilter_makeStopSetWithOrgApacheLuceneUtilVersion_withJavaUtilList_(matchVersion, stopWords);
}

+ (id<JavaUtilSet>)makeStopSetWithNSStringArray:(IOSObjectArray *)stopWords
                                    withBoolean:(jboolean)ignoreCase {
  return OrgApacheLuceneAnalysisStopFilter_makeStopSetWithNSStringArray_withBoolean_(stopWords, ignoreCase);
}

+ (id<JavaUtilSet>)makeStopSetWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion
                                           withNSStringArray:(IOSObjectArray *)stopWords
                                                 withBoolean:(jboolean)ignoreCase {
  return OrgApacheLuceneAnalysisStopFilter_makeStopSetWithOrgApacheLuceneUtilVersion_withNSStringArray_withBoolean_(matchVersion, stopWords, ignoreCase);
}

+ (id<JavaUtilSet>)makeStopSetWithJavaUtilList:(id<JavaUtilList>)stopWords
                                   withBoolean:(jboolean)ignoreCase {
  return OrgApacheLuceneAnalysisStopFilter_makeStopSetWithJavaUtilList_withBoolean_(stopWords, ignoreCase);
}

+ (id<JavaUtilSet>)makeStopSetWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion
                                            withJavaUtilList:(id<JavaUtilList>)stopWords
                                                 withBoolean:(jboolean)ignoreCase {
  return OrgApacheLuceneAnalysisStopFilter_makeStopSetWithOrgApacheLuceneUtilVersion_withJavaUtilList_withBoolean_(matchVersion, stopWords, ignoreCase);
}

- (jboolean)accept {
  return ![((OrgApacheLuceneAnalysisCharArraySet *) nil_chk(stopWords_)) containsWithCharArray:[((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt_)) buffer] withInt:0 withInt:[termAtt_ java_length]];
}

+ (jboolean)getEnablePositionIncrementsVersionDefaultWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion {
  return OrgApacheLuceneAnalysisStopFilter_getEnablePositionIncrementsVersionDefaultWithOrgApacheLuceneUtilVersion_(matchVersion);
}

- (void)dealloc {
  RELEASE_(stopWords_);
  RELEASE_(termAtt_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, 2, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x2, -1, 5, -1, 6, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, 8, 9, -1 },
    { NULL, NULL, 0x1, -1, 10, -1, 11, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x99, 12, 13, -1, 14, 15, -1 },
    { NULL, "LJavaUtilSet;", 0x99, 12, 16, -1, 17, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x19, 12, 18, -1, 19, 20, -1 },
    { NULL, "LJavaUtilSet;", 0x19, 12, 21, -1, 22, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x19, 12, 23, -1, 24, 25, -1 },
    { NULL, "LJavaUtilSet;", 0x19, 12, 26, -1, 27, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x19, 12, 28, -1, 29, 30, -1 },
    { NULL, "LJavaUtilSet;", 0x19, 12, 31, -1, 32, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, 33, -1, -1, -1 },
    { NULL, "Z", 0x9, 34, 35, -1, -1, 36, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithBoolean:withOrgApacheLuceneAnalysisTokenStream:withJavaUtilSet:withBoolean:);
  methods[1].selector = @selector(initWithOrgApacheLuceneUtilVersion:withOrgApacheLuceneAnalysisTokenStream:withJavaUtilSet:withBoolean:);
  methods[2].selector = @selector(initWithOrgApacheLuceneUtilVersion:withBoolean:withOrgApacheLuceneAnalysisTokenStream:withJavaUtilSet:withBoolean:);
  methods[3].selector = @selector(initWithBoolean:withOrgApacheLuceneAnalysisTokenStream:withJavaUtilSet:);
  methods[4].selector = @selector(initWithOrgApacheLuceneUtilVersion:withOrgApacheLuceneAnalysisTokenStream:withJavaUtilSet:);
  methods[5].selector = @selector(makeStopSetWithNSStringArray:);
  methods[6].selector = @selector(makeStopSetWithOrgApacheLuceneUtilVersion:withNSStringArray:);
  methods[7].selector = @selector(makeStopSetWithJavaUtilList:);
  methods[8].selector = @selector(makeStopSetWithOrgApacheLuceneUtilVersion:withJavaUtilList:);
  methods[9].selector = @selector(makeStopSetWithNSStringArray:withBoolean:);
  methods[10].selector = @selector(makeStopSetWithOrgApacheLuceneUtilVersion:withNSStringArray:withBoolean:);
  methods[11].selector = @selector(makeStopSetWithJavaUtilList:withBoolean:);
  methods[12].selector = @selector(makeStopSetWithOrgApacheLuceneUtilVersion:withJavaUtilList:withBoolean:);
  methods[13].selector = @selector(accept);
  methods[14].selector = @selector(getEnablePositionIncrementsVersionDefaultWithOrgApacheLuceneUtilVersion:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "stopWords_", "LOrgApacheLuceneAnalysisCharArraySet;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "termAtt_", "LOrgApacheLuceneAnalysisTokenattributesCharTermAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ZLOrgApacheLuceneAnalysisTokenStream;LJavaUtilSet;Z", "(ZLorg/apache/lucene/analysis/TokenStream;Ljava/util/Set<*>;Z)V", (void *)&OrgApacheLuceneAnalysisStopFilter__Annotations$0, "LOrgApacheLuceneUtilVersion;LOrgApacheLuceneAnalysisTokenStream;LJavaUtilSet;Z", "(Lorg/apache/lucene/util/Version;Lorg/apache/lucene/analysis/TokenStream;Ljava/util/Set<*>;Z)V", "LOrgApacheLuceneUtilVersion;ZLOrgApacheLuceneAnalysisTokenStream;LJavaUtilSet;Z", "(Lorg/apache/lucene/util/Version;ZLorg/apache/lucene/analysis/TokenStream;Ljava/util/Set<*>;Z)V", "ZLOrgApacheLuceneAnalysisTokenStream;LJavaUtilSet;", "(ZLorg/apache/lucene/analysis/TokenStream;Ljava/util/Set<*>;)V", (void *)&OrgApacheLuceneAnalysisStopFilter__Annotations$1, "LOrgApacheLuceneUtilVersion;LOrgApacheLuceneAnalysisTokenStream;LJavaUtilSet;", "(Lorg/apache/lucene/util/Version;Lorg/apache/lucene/analysis/TokenStream;Ljava/util/Set<*>;)V", "makeStopSet", "[LNSString;", "([Ljava/lang/String;)Ljava/util/Set<Ljava/lang/Object;>;", (void *)&OrgApacheLuceneAnalysisStopFilter__Annotations$2, "LOrgApacheLuceneUtilVersion;[LNSString;", "(Lorg/apache/lucene/util/Version;[Ljava/lang/String;)Ljava/util/Set<Ljava/lang/Object;>;", "LJavaUtilList;", "(Ljava/util/List<*>;)Ljava/util/Set<Ljava/lang/Object;>;", (void *)&OrgApacheLuceneAnalysisStopFilter__Annotations$3, "LOrgApacheLuceneUtilVersion;LJavaUtilList;", "(Lorg/apache/lucene/util/Version;Ljava/util/List<*>;)Ljava/util/Set<Ljava/lang/Object;>;", "[LNSString;Z", "([Ljava/lang/String;Z)Ljava/util/Set<Ljava/lang/Object;>;", (void *)&OrgApacheLuceneAnalysisStopFilter__Annotations$4, "LOrgApacheLuceneUtilVersion;[LNSString;Z", "(Lorg/apache/lucene/util/Version;[Ljava/lang/String;Z)Ljava/util/Set<Ljava/lang/Object;>;", "LJavaUtilList;Z", "(Ljava/util/List<*>;Z)Ljava/util/Set<Ljava/lang/Object;>;", (void *)&OrgApacheLuceneAnalysisStopFilter__Annotations$5, "LOrgApacheLuceneUtilVersion;LJavaUtilList;Z", "(Lorg/apache/lucene/util/Version;Ljava/util/List<*>;Z)Ljava/util/Set<Ljava/lang/Object;>;", "LJavaIoIOException;", "getEnablePositionIncrementsVersionDefault", "LOrgApacheLuceneUtilVersion;", (void *)&OrgApacheLuceneAnalysisStopFilter__Annotations$6 };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisStopFilter = { "StopFilter", "org.apache.lucene.analysis", ptrTable, methods, fields, 7, 0x11, 15, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisStopFilter;
}

@end

void OrgApacheLuceneAnalysisStopFilter_initWithBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_(OrgApacheLuceneAnalysisStopFilter *self, jboolean enablePositionIncrements, OrgApacheLuceneAnalysisTokenStream *input, id<JavaUtilSet> stopWords, jboolean ignoreCase) {
  OrgApacheLuceneAnalysisStopFilter_initWithOrgApacheLuceneUtilVersion_withBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_(self, JreLoadEnum(OrgApacheLuceneUtilVersion, LUCENE_30), enablePositionIncrements, input, stopWords, ignoreCase);
}

OrgApacheLuceneAnalysisStopFilter *new_OrgApacheLuceneAnalysisStopFilter_initWithBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_(jboolean enablePositionIncrements, OrgApacheLuceneAnalysisTokenStream *input, id<JavaUtilSet> stopWords, jboolean ignoreCase) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisStopFilter, initWithBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_, enablePositionIncrements, input, stopWords, ignoreCase)
}

OrgApacheLuceneAnalysisStopFilter *create_OrgApacheLuceneAnalysisStopFilter_initWithBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_(jboolean enablePositionIncrements, OrgApacheLuceneAnalysisTokenStream *input, id<JavaUtilSet> stopWords, jboolean ignoreCase) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisStopFilter, initWithBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_, enablePositionIncrements, input, stopWords, ignoreCase)
}

void OrgApacheLuceneAnalysisStopFilter_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_(OrgApacheLuceneAnalysisStopFilter *self, OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneAnalysisTokenStream *input, id<JavaUtilSet> stopWords, jboolean ignoreCase) {
  OrgApacheLuceneAnalysisStopFilter_initWithOrgApacheLuceneUtilVersion_withBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_(self, matchVersion, [((OrgApacheLuceneUtilVersion *) nil_chk(matchVersion)) onOrAfterWithOrgApacheLuceneUtilVersion:JreLoadEnum(OrgApacheLuceneUtilVersion, LUCENE_29)], input, stopWords, ignoreCase);
}

OrgApacheLuceneAnalysisStopFilter *new_OrgApacheLuceneAnalysisStopFilter_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_(OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneAnalysisTokenStream *input, id<JavaUtilSet> stopWords, jboolean ignoreCase) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisStopFilter, initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_, matchVersion, input, stopWords, ignoreCase)
}

OrgApacheLuceneAnalysisStopFilter *create_OrgApacheLuceneAnalysisStopFilter_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_(OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneAnalysisTokenStream *input, id<JavaUtilSet> stopWords, jboolean ignoreCase) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisStopFilter, initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_, matchVersion, input, stopWords, ignoreCase)
}

void OrgApacheLuceneAnalysisStopFilter_initWithOrgApacheLuceneUtilVersion_withBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_(OrgApacheLuceneAnalysisStopFilter *self, OrgApacheLuceneUtilVersion *matchVersion, jboolean enablePositionIncrements, OrgApacheLuceneAnalysisTokenStream *input, id<JavaUtilSet> stopWords, jboolean ignoreCase) {
  OrgApacheLuceneAnalysisFilteringTokenFilter_initWithBoolean_withOrgApacheLuceneAnalysisTokenStream_(self, enablePositionIncrements, input);
  JreStrongAssign(&self->termAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  JreStrongAssign(&self->stopWords_, [stopWords isKindOfClass:[OrgApacheLuceneAnalysisCharArraySet class]] ? (OrgApacheLuceneAnalysisCharArraySet *) cast_chk(stopWords, [OrgApacheLuceneAnalysisCharArraySet class]) : create_OrgApacheLuceneAnalysisCharArraySet_initWithOrgApacheLuceneUtilVersion_withJavaUtilCollection_withBoolean_(matchVersion, stopWords, ignoreCase));
}

OrgApacheLuceneAnalysisStopFilter *new_OrgApacheLuceneAnalysisStopFilter_initWithOrgApacheLuceneUtilVersion_withBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_(OrgApacheLuceneUtilVersion *matchVersion, jboolean enablePositionIncrements, OrgApacheLuceneAnalysisTokenStream *input, id<JavaUtilSet> stopWords, jboolean ignoreCase) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisStopFilter, initWithOrgApacheLuceneUtilVersion_withBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_, matchVersion, enablePositionIncrements, input, stopWords, ignoreCase)
}

OrgApacheLuceneAnalysisStopFilter *create_OrgApacheLuceneAnalysisStopFilter_initWithOrgApacheLuceneUtilVersion_withBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_(OrgApacheLuceneUtilVersion *matchVersion, jboolean enablePositionIncrements, OrgApacheLuceneAnalysisTokenStream *input, id<JavaUtilSet> stopWords, jboolean ignoreCase) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisStopFilter, initWithOrgApacheLuceneUtilVersion_withBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_, matchVersion, enablePositionIncrements, input, stopWords, ignoreCase)
}

void OrgApacheLuceneAnalysisStopFilter_initWithBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_(OrgApacheLuceneAnalysisStopFilter *self, jboolean enablePositionIncrements, OrgApacheLuceneAnalysisTokenStream *inArg, id<JavaUtilSet> stopWords) {
  OrgApacheLuceneAnalysisStopFilter_initWithOrgApacheLuceneUtilVersion_withBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_(self, JreLoadEnum(OrgApacheLuceneUtilVersion, LUCENE_30), enablePositionIncrements, inArg, stopWords, false);
}

OrgApacheLuceneAnalysisStopFilter *new_OrgApacheLuceneAnalysisStopFilter_initWithBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_(jboolean enablePositionIncrements, OrgApacheLuceneAnalysisTokenStream *inArg, id<JavaUtilSet> stopWords) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisStopFilter, initWithBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_, enablePositionIncrements, inArg, stopWords)
}

OrgApacheLuceneAnalysisStopFilter *create_OrgApacheLuceneAnalysisStopFilter_initWithBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_(jboolean enablePositionIncrements, OrgApacheLuceneAnalysisTokenStream *inArg, id<JavaUtilSet> stopWords) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisStopFilter, initWithBoolean_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_, enablePositionIncrements, inArg, stopWords)
}

void OrgApacheLuceneAnalysisStopFilter_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_(OrgApacheLuceneAnalysisStopFilter *self, OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneAnalysisTokenStream *inArg, id<JavaUtilSet> stopWords) {
  OrgApacheLuceneAnalysisStopFilter_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_withBoolean_(self, matchVersion, inArg, stopWords, false);
}

OrgApacheLuceneAnalysisStopFilter *new_OrgApacheLuceneAnalysisStopFilter_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_(OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneAnalysisTokenStream *inArg, id<JavaUtilSet> stopWords) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisStopFilter, initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_, matchVersion, inArg, stopWords)
}

OrgApacheLuceneAnalysisStopFilter *create_OrgApacheLuceneAnalysisStopFilter_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_(OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneAnalysisTokenStream *inArg, id<JavaUtilSet> stopWords) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisStopFilter, initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisTokenStream_withJavaUtilSet_, matchVersion, inArg, stopWords)
}

id<JavaUtilSet> OrgApacheLuceneAnalysisStopFilter_makeStopSetWithNSStringArray_(IOSObjectArray *stopWords) {
  OrgApacheLuceneAnalysisStopFilter_initialize();
  return OrgApacheLuceneAnalysisStopFilter_makeStopSetWithOrgApacheLuceneUtilVersion_withNSStringArray_withBoolean_(JreLoadEnum(OrgApacheLuceneUtilVersion, LUCENE_30), stopWords, false);
}

id<JavaUtilSet> OrgApacheLuceneAnalysisStopFilter_makeStopSetWithOrgApacheLuceneUtilVersion_withNSStringArray_(OrgApacheLuceneUtilVersion *matchVersion, IOSObjectArray *stopWords) {
  OrgApacheLuceneAnalysisStopFilter_initialize();
  return OrgApacheLuceneAnalysisStopFilter_makeStopSetWithOrgApacheLuceneUtilVersion_withNSStringArray_withBoolean_(matchVersion, stopWords, false);
}

id<JavaUtilSet> OrgApacheLuceneAnalysisStopFilter_makeStopSetWithJavaUtilList_(id<JavaUtilList> stopWords) {
  OrgApacheLuceneAnalysisStopFilter_initialize();
  return OrgApacheLuceneAnalysisStopFilter_makeStopSetWithOrgApacheLuceneUtilVersion_withJavaUtilList_withBoolean_(JreLoadEnum(OrgApacheLuceneUtilVersion, LUCENE_30), stopWords, false);
}

id<JavaUtilSet> OrgApacheLuceneAnalysisStopFilter_makeStopSetWithOrgApacheLuceneUtilVersion_withJavaUtilList_(OrgApacheLuceneUtilVersion *matchVersion, id<JavaUtilList> stopWords) {
  OrgApacheLuceneAnalysisStopFilter_initialize();
  return OrgApacheLuceneAnalysisStopFilter_makeStopSetWithOrgApacheLuceneUtilVersion_withJavaUtilList_withBoolean_(matchVersion, stopWords, false);
}

id<JavaUtilSet> OrgApacheLuceneAnalysisStopFilter_makeStopSetWithNSStringArray_withBoolean_(IOSObjectArray *stopWords, jboolean ignoreCase) {
  OrgApacheLuceneAnalysisStopFilter_initialize();
  return OrgApacheLuceneAnalysisStopFilter_makeStopSetWithOrgApacheLuceneUtilVersion_withNSStringArray_withBoolean_(JreLoadEnum(OrgApacheLuceneUtilVersion, LUCENE_30), stopWords, ignoreCase);
}

id<JavaUtilSet> OrgApacheLuceneAnalysisStopFilter_makeStopSetWithOrgApacheLuceneUtilVersion_withNSStringArray_withBoolean_(OrgApacheLuceneUtilVersion *matchVersion, IOSObjectArray *stopWords, jboolean ignoreCase) {
  OrgApacheLuceneAnalysisStopFilter_initialize();
  OrgApacheLuceneAnalysisCharArraySet *stopSet = create_OrgApacheLuceneAnalysisCharArraySet_initWithOrgApacheLuceneUtilVersion_withInt_withBoolean_(matchVersion, ((IOSObjectArray *) nil_chk(stopWords))->size_, ignoreCase);
  [stopSet addAllWithJavaUtilCollection:JavaUtilArrays_asListWithNSObjectArray_(stopWords)];
  return stopSet;
}

id<JavaUtilSet> OrgApacheLuceneAnalysisStopFilter_makeStopSetWithJavaUtilList_withBoolean_(id<JavaUtilList> stopWords, jboolean ignoreCase) {
  OrgApacheLuceneAnalysisStopFilter_initialize();
  return OrgApacheLuceneAnalysisStopFilter_makeStopSetWithOrgApacheLuceneUtilVersion_withJavaUtilList_withBoolean_(JreLoadEnum(OrgApacheLuceneUtilVersion, LUCENE_30), stopWords, ignoreCase);
}

id<JavaUtilSet> OrgApacheLuceneAnalysisStopFilter_makeStopSetWithOrgApacheLuceneUtilVersion_withJavaUtilList_withBoolean_(OrgApacheLuceneUtilVersion *matchVersion, id<JavaUtilList> stopWords, jboolean ignoreCase) {
  OrgApacheLuceneAnalysisStopFilter_initialize();
  OrgApacheLuceneAnalysisCharArraySet *stopSet = create_OrgApacheLuceneAnalysisCharArraySet_initWithOrgApacheLuceneUtilVersion_withInt_withBoolean_(matchVersion, [((id<JavaUtilList>) nil_chk(stopWords)) size], ignoreCase);
  [stopSet addAllWithJavaUtilCollection:stopWords];
  return stopSet;
}

jboolean OrgApacheLuceneAnalysisStopFilter_getEnablePositionIncrementsVersionDefaultWithOrgApacheLuceneUtilVersion_(OrgApacheLuceneUtilVersion *matchVersion) {
  OrgApacheLuceneAnalysisStopFilter_initialize();
  return [((OrgApacheLuceneUtilVersion *) nil_chk(matchVersion)) onOrAfterWithOrgApacheLuceneUtilVersion:JreLoadEnum(OrgApacheLuceneUtilVersion, LUCENE_29)];
}

IOSObjectArray *OrgApacheLuceneAnalysisStopFilter__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneAnalysisStopFilter__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneAnalysisStopFilter__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneAnalysisStopFilter__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneAnalysisStopFilter__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneAnalysisStopFilter__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneAnalysisStopFilter__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisStopFilter)
