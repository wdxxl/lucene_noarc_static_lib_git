//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/search/spans/SpanWeight.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/search/ComplexExplanation.h"
#include "org/apache/lucene/search/Explanation.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/Searcher.h"
#include "org/apache/lucene/search/Similarity.h"
#include "org/apache/lucene/search/Weight.h"
#include "org/apache/lucene/search/spans/SpanQuery.h"
#include "org/apache/lucene/search/spans/SpanScorer.h"
#include "org/apache/lucene/search/spans/SpanWeight.h"
#include "org/apache/lucene/search/spans/Spans.h"

@interface OrgApacheLuceneSearchSpansSpanWeight () {
 @public
  OrgApacheLuceneSearchExplanation_IDFExplanation *idfExp_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpansSpanWeight, idfExp_, OrgApacheLuceneSearchExplanation_IDFExplanation *)

@implementation OrgApacheLuceneSearchSpansSpanWeight

- (instancetype)initWithOrgApacheLuceneSearchSpansSpanQuery:(OrgApacheLuceneSearchSpansSpanQuery *)query
                          withOrgApacheLuceneSearchSearcher:(OrgApacheLuceneSearchSearcher *)searcher {
  OrgApacheLuceneSearchSpansSpanWeight_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSearcher_(self, query, searcher);
  return self;
}

- (OrgApacheLuceneSearchQuery *)getQuery {
  return query_;
}

- (jfloat)getValue {
  return value_;
}

- (jfloat)sumOfSquaredWeights {
  queryWeight_ = idf_ * [((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(query_)) getBoost];
  return queryWeight_ * queryWeight_;
}

- (void)normalizeWithFloat:(jfloat)queryNorm {
  self->queryNorm_ = queryNorm;
  JreTimesAssignFloatF(&queryWeight_, queryNorm);
  value_ = queryWeight_ * idf_;
}

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                               withBoolean:(jboolean)scoreDocsInOrder
                                                               withBoolean:(jboolean)topScorer {
  return create_OrgApacheLuceneSearchSpansSpanScorer_initWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchSimilarity_withByteArray_([((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(query_)) getSpansWithOrgApacheLuceneIndexIndexReader:reader], self, similarity_, [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) normsWithNSString:[((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(query_)) getField]]);
}

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                                         withInt:(jint)doc {
  OrgApacheLuceneSearchComplexExplanation *result = create_OrgApacheLuceneSearchComplexExplanation_init();
  [result setDescriptionWithNSString:JreStrcat("$@$I$", @"weight(", [self getQuery], @" in ", doc, @"), product of:")];
  NSString *field = [((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(((OrgApacheLuceneSearchSpansSpanQuery *) cast_chk([self getQuery], [OrgApacheLuceneSearchSpansSpanQuery class])))) getField];
  OrgApacheLuceneSearchExplanation *idfExpl = create_OrgApacheLuceneSearchExplanation_initWithFloat_withNSString_(idf_, JreStrcat("$$$$C", @"idf(", field, @": ", [((OrgApacheLuceneSearchExplanation_IDFExplanation *) nil_chk(idfExp_)) explain], ')'));
  OrgApacheLuceneSearchExplanation *queryExpl = create_OrgApacheLuceneSearchExplanation_init();
  [queryExpl setDescriptionWithNSString:JreStrcat("$@$", @"queryWeight(", [self getQuery], @"), product of:")];
  OrgApacheLuceneSearchExplanation *boostExpl = create_OrgApacheLuceneSearchExplanation_initWithFloat_withNSString_([((OrgApacheLuceneSearchQuery *) nil_chk([self getQuery])) getBoost], @"boost");
  if ([((OrgApacheLuceneSearchQuery *) nil_chk([self getQuery])) getBoost] != 1.0f) [queryExpl addDetailWithOrgApacheLuceneSearchExplanation:boostExpl];
  [queryExpl addDetailWithOrgApacheLuceneSearchExplanation:idfExpl];
  OrgApacheLuceneSearchExplanation *queryNormExpl = create_OrgApacheLuceneSearchExplanation_initWithFloat_withNSString_(queryNorm_, @"queryNorm");
  [queryExpl addDetailWithOrgApacheLuceneSearchExplanation:queryNormExpl];
  [queryExpl setValueWithFloat:[boostExpl getValue] * [idfExpl getValue] * [queryNormExpl getValue]];
  [result addDetailWithOrgApacheLuceneSearchExplanation:queryExpl];
  OrgApacheLuceneSearchComplexExplanation *fieldExpl = create_OrgApacheLuceneSearchComplexExplanation_init();
  [fieldExpl setDescriptionWithNSString:JreStrcat("$$C$$I$", @"fieldWeight(", field, ':', [((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(query_)) toStringWithNSString:field], @" in ", doc, @"), product of:")];
  OrgApacheLuceneSearchExplanation *tfExpl = [((OrgApacheLuceneSearchSpansSpanScorer *) nil_chk(((OrgApacheLuceneSearchSpansSpanScorer *) cast_chk([self scorerWithOrgApacheLuceneIndexIndexReader:reader withBoolean:true withBoolean:false], [OrgApacheLuceneSearchSpansSpanScorer class])))) explainWithInt:doc];
  [fieldExpl addDetailWithOrgApacheLuceneSearchExplanation:tfExpl];
  [fieldExpl addDetailWithOrgApacheLuceneSearchExplanation:idfExpl];
  OrgApacheLuceneSearchExplanation *fieldNormExpl = create_OrgApacheLuceneSearchExplanation_init();
  IOSByteArray *fieldNorms = [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) normsWithNSString:field];
  jfloat fieldNorm = fieldNorms != nil ? [((OrgApacheLuceneSearchSimilarity *) nil_chk(similarity_)) decodeNormValueWithByte:IOSByteArray_Get(fieldNorms, doc)] : 1.0f;
  [fieldNormExpl setValueWithFloat:fieldNorm];
  [fieldNormExpl setDescriptionWithNSString:JreStrcat("$$$IC", @"fieldNorm(field=", field, @", doc=", doc, ')')];
  [fieldExpl addDetailWithOrgApacheLuceneSearchExplanation:fieldNormExpl];
  [fieldExpl setMatchWithJavaLangBoolean:JavaLangBoolean_valueOfWithBoolean_([((OrgApacheLuceneSearchExplanation *) nil_chk(tfExpl)) isMatch])];
  [fieldExpl setValueWithFloat:[tfExpl getValue] * [idfExpl getValue] * [fieldNormExpl getValue]];
  [result addDetailWithOrgApacheLuceneSearchExplanation:fieldExpl];
  [result setMatchWithJavaLangBoolean:[fieldExpl getMatch]];
  [result setValueWithFloat:[queryExpl getValue] * [fieldExpl getValue]];
  if ([queryExpl getValue] == 1.0f) return fieldExpl;
  return result;
}

- (void)dealloc {
  RELEASE_(similarity_);
  RELEASE_(terms_);
  RELEASE_(query_);
  RELEASE_(idfExp_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchScorer;", 0x1, 4, 5, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchExplanation;", 0x1, 6, 7, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchSpansSpanQuery:withOrgApacheLuceneSearchSearcher:);
  methods[1].selector = @selector(getQuery);
  methods[2].selector = @selector(getValue);
  methods[3].selector = @selector(sumOfSquaredWeights);
  methods[4].selector = @selector(normalizeWithFloat:);
  methods[5].selector = @selector(scorerWithOrgApacheLuceneIndexIndexReader:withBoolean:withBoolean:);
  methods[6].selector = @selector(explainWithOrgApacheLuceneIndexIndexReader:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "similarity_", "LOrgApacheLuceneSearchSimilarity;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "value_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "idf_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "queryNorm_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "queryWeight_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "terms_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x4, -1, -1, 8, -1 },
    { "query_", "LOrgApacheLuceneSearchSpansSpanQuery;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "idfExp_", "LOrgApacheLuceneSearchExplanation_IDFExplanation;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSpansSpanQuery;LOrgApacheLuceneSearchSearcher;", "LJavaIoIOException;", "normalize", "F", "scorer", "LOrgApacheLuceneIndexIndexReader;ZZ", "explain", "LOrgApacheLuceneIndexIndexReader;I", "Ljava/util/Set<Lorg/apache/lucene/index/Term;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpansSpanWeight = { "SpanWeight", "org.apache.lucene.search.spans", ptrTable, methods, fields, 7, 0x1, 7, 8, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSpansSpanWeight;
}

@end

void OrgApacheLuceneSearchSpansSpanWeight_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSearcher_(OrgApacheLuceneSearchSpansSpanWeight *self, OrgApacheLuceneSearchSpansSpanQuery *query, OrgApacheLuceneSearchSearcher *searcher) {
  OrgApacheLuceneSearchWeight_init(self);
  JreStrongAssign(&self->similarity_, [((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(query)) getSimilarityWithOrgApacheLuceneSearchSearcher:searcher]);
  JreStrongAssign(&self->query_, query);
  JreStrongAssignAndConsume(&self->terms_, new_JavaUtilHashSet_init());
  [query extractTermsWithJavaUtilSet:self->terms_];
  JreStrongAssign(&self->idfExp_, [((OrgApacheLuceneSearchSimilarity *) nil_chk(self->similarity_)) idfExplainWithJavaUtilCollection:self->terms_ withOrgApacheLuceneSearchSearcher:searcher]);
  self->idf_ = [((OrgApacheLuceneSearchExplanation_IDFExplanation *) nil_chk(self->idfExp_)) getIdf];
}

OrgApacheLuceneSearchSpansSpanWeight *new_OrgApacheLuceneSearchSpansSpanWeight_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSearcher_(OrgApacheLuceneSearchSpansSpanQuery *query, OrgApacheLuceneSearchSearcher *searcher) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSpansSpanWeight, initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSearcher_, query, searcher)
}

OrgApacheLuceneSearchSpansSpanWeight *create_OrgApacheLuceneSearchSpansSpanWeight_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSearcher_(OrgApacheLuceneSearchSpansSpanQuery *query, OrgApacheLuceneSearchSearcher *searcher) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSpansSpanWeight, initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSearcher_, query, searcher)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSpansSpanWeight)
