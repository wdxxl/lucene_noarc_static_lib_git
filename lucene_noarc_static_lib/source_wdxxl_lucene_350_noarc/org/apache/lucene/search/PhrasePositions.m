//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/search/PhrasePositions.java
//

#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "org/apache/lucene/index/TermPositions.h"
#include "org/apache/lucene/search/PhrasePositions.h"

__attribute__((unused)) static jboolean OrgApacheLuceneSearchPhrasePositions_nextPosition(OrgApacheLuceneSearchPhrasePositions *self);

@implementation OrgApacheLuceneSearchPhrasePositions

- (instancetype)initWithOrgApacheLuceneIndexTermPositions:(id<OrgApacheLuceneIndexTermPositions>)t
                                                  withInt:(jint)o
                                                  withInt:(jint)ord {
  OrgApacheLuceneSearchPhrasePositions_initWithOrgApacheLuceneIndexTermPositions_withInt_withInt_(self, t, o, ord);
  return self;
}

- (jboolean)next {
  if (![((id<OrgApacheLuceneIndexTermPositions>) nil_chk(tp_)) next]) {
    [((id<OrgApacheLuceneIndexTermPositions>) nil_chk(tp_)) close];
    doc_ = JavaLangInteger_MAX_VALUE;
    return false;
  }
  doc_ = [((id<OrgApacheLuceneIndexTermPositions>) nil_chk(tp_)) doc];
  position_ = 0;
  return true;
}

- (jboolean)skipToWithInt:(jint)target {
  if (![((id<OrgApacheLuceneIndexTermPositions>) nil_chk(tp_)) skipToWithInt:target]) {
    [((id<OrgApacheLuceneIndexTermPositions>) nil_chk(tp_)) close];
    doc_ = JavaLangInteger_MAX_VALUE;
    return false;
  }
  doc_ = [((id<OrgApacheLuceneIndexTermPositions>) nil_chk(tp_)) doc];
  position_ = 0;
  return true;
}

- (void)firstPosition {
  count_ = [((id<OrgApacheLuceneIndexTermPositions>) nil_chk(tp_)) freq];
  OrgApacheLuceneSearchPhrasePositions_nextPosition(self);
}

- (jboolean)nextPosition {
  return OrgApacheLuceneSearchPhrasePositions_nextPosition(self);
}

- (NSString *)description {
  NSString *s = JreStrcat("$I$I$I$I", @"d:", doc_, @" o:", offset_, @" p:", position_, @" c:", count_);
  if (nextRepeating_ != nil) {
    JreStrAppend(&s, "$@$", @" rpt[ ", nextRepeating_, @" ]");
  }
  return s;
}

- (void)dealloc {
  RELEASE_(tp_);
  RELEASE_(next_);
  RELEASE_(nextRepeating_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x10, -1, -1, 1, -1, -1, -1 },
    { NULL, "Z", 0x10, 2, 3, 1, -1, -1, -1 },
    { NULL, "V", 0x10, -1, -1, 1, -1, -1, -1 },
    { NULL, "Z", 0x10, -1, -1, 1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexTermPositions:withInt:withInt:);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(skipToWithInt:);
  methods[3].selector = @selector(firstPosition);
  methods[4].selector = @selector(nextPosition);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "doc_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "position_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "count_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "offset_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "ord_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "tp_", "LOrgApacheLuceneIndexTermPositions;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "next_", "LOrgApacheLuceneSearchPhrasePositions;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "nextRepeating_", "LOrgApacheLuceneSearchPhrasePositions;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexTermPositions;II", "LJavaIoIOException;", "skipTo", "I", "toString" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchPhrasePositions = { "PhrasePositions", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x10, 6, 8, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchPhrasePositions;
}

@end

void OrgApacheLuceneSearchPhrasePositions_initWithOrgApacheLuceneIndexTermPositions_withInt_withInt_(OrgApacheLuceneSearchPhrasePositions *self, id<OrgApacheLuceneIndexTermPositions> t, jint o, jint ord) {
  NSObject_init(self);
  JreStrongAssign(&self->tp_, t);
  self->offset_ = o;
  self->ord_ = ord;
}

OrgApacheLuceneSearchPhrasePositions *new_OrgApacheLuceneSearchPhrasePositions_initWithOrgApacheLuceneIndexTermPositions_withInt_withInt_(id<OrgApacheLuceneIndexTermPositions> t, jint o, jint ord) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchPhrasePositions, initWithOrgApacheLuceneIndexTermPositions_withInt_withInt_, t, o, ord)
}

OrgApacheLuceneSearchPhrasePositions *create_OrgApacheLuceneSearchPhrasePositions_initWithOrgApacheLuceneIndexTermPositions_withInt_withInt_(id<OrgApacheLuceneIndexTermPositions> t, jint o, jint ord) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchPhrasePositions, initWithOrgApacheLuceneIndexTermPositions_withInt_withInt_, t, o, ord)
}

jboolean OrgApacheLuceneSearchPhrasePositions_nextPosition(OrgApacheLuceneSearchPhrasePositions *self) {
  if (self->count_-- > 0) {
    self->position_ = [((id<OrgApacheLuceneIndexTermPositions>) nil_chk(self->tp_)) nextPosition] - self->offset_;
    return true;
  }
  else return false;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchPhrasePositions)
