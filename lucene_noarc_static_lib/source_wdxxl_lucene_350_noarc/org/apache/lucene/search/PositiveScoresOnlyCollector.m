//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/search/PositiveScoresOnlyCollector.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/search/Collector.h"
#include "org/apache/lucene/search/PositiveScoresOnlyCollector.h"
#include "org/apache/lucene/search/ScoreCachingWrappingScorer.h"
#include "org/apache/lucene/search/Scorer.h"

@interface OrgApacheLuceneSearchPositiveScoresOnlyCollector () {
 @public
  OrgApacheLuceneSearchCollector *c_;
  OrgApacheLuceneSearchScorer *scorer_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchPositiveScoresOnlyCollector, c_, OrgApacheLuceneSearchCollector *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchPositiveScoresOnlyCollector, scorer_, OrgApacheLuceneSearchScorer *)

@implementation OrgApacheLuceneSearchPositiveScoresOnlyCollector

- (instancetype)initWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)c {
  OrgApacheLuceneSearchPositiveScoresOnlyCollector_initWithOrgApacheLuceneSearchCollector_(self, c);
  return self;
}

- (void)collectWithInt:(jint)doc {
  if ([((OrgApacheLuceneSearchScorer *) nil_chk(scorer_)) score] > 0) {
    [((OrgApacheLuceneSearchCollector *) nil_chk(c_)) collectWithInt:doc];
  }
}

- (void)setNextReaderWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                 withInt:(jint)docBase {
  [((OrgApacheLuceneSearchCollector *) nil_chk(c_)) setNextReaderWithOrgApacheLuceneIndexIndexReader:reader withInt:docBase];
}

- (void)setScorerWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)scorer {
  JreStrongAssignAndConsume(&self->scorer_, new_OrgApacheLuceneSearchScoreCachingWrappingScorer_initWithOrgApacheLuceneSearchScorer_(scorer));
  [((OrgApacheLuceneSearchCollector *) nil_chk(c_)) setScorerWithOrgApacheLuceneSearchScorer:self->scorer_];
}

- (jboolean)acceptsDocsOutOfOrder {
  return [((OrgApacheLuceneSearchCollector *) nil_chk(c_)) acceptsDocsOutOfOrder];
}

- (void)dealloc {
  RELEASE_(c_);
  RELEASE_(scorer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, 3, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchCollector:);
  methods[1].selector = @selector(collectWithInt:);
  methods[2].selector = @selector(setNextReaderWithOrgApacheLuceneIndexIndexReader:withInt:);
  methods[3].selector = @selector(setScorerWithOrgApacheLuceneSearchScorer:);
  methods[4].selector = @selector(acceptsDocsOutOfOrder);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "c_", "LOrgApacheLuceneSearchCollector;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "scorer_", "LOrgApacheLuceneSearchScorer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchCollector;", "collect", "I", "LJavaIoIOException;", "setNextReader", "LOrgApacheLuceneIndexIndexReader;I", "setScorer", "LOrgApacheLuceneSearchScorer;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchPositiveScoresOnlyCollector = { "PositiveScoresOnlyCollector", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x1, 5, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchPositiveScoresOnlyCollector;
}

@end

void OrgApacheLuceneSearchPositiveScoresOnlyCollector_initWithOrgApacheLuceneSearchCollector_(OrgApacheLuceneSearchPositiveScoresOnlyCollector *self, OrgApacheLuceneSearchCollector *c) {
  OrgApacheLuceneSearchCollector_init(self);
  JreStrongAssign(&self->c_, c);
}

OrgApacheLuceneSearchPositiveScoresOnlyCollector *new_OrgApacheLuceneSearchPositiveScoresOnlyCollector_initWithOrgApacheLuceneSearchCollector_(OrgApacheLuceneSearchCollector *c) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchPositiveScoresOnlyCollector, initWithOrgApacheLuceneSearchCollector_, c)
}

OrgApacheLuceneSearchPositiveScoresOnlyCollector *create_OrgApacheLuceneSearchPositiveScoresOnlyCollector_initWithOrgApacheLuceneSearchCollector_(OrgApacheLuceneSearchCollector *c) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchPositiveScoresOnlyCollector, initWithOrgApacheLuceneSearchCollector_, c)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchPositiveScoresOnlyCollector)
