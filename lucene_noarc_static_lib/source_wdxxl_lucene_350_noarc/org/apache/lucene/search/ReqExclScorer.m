//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/search/ReqExclScorer.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/ReqExclScorer.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/Weight.h"

@interface OrgApacheLuceneSearchReqExclScorer () {
 @public
  OrgApacheLuceneSearchScorer *reqScorer_;
  OrgApacheLuceneSearchDocIdSetIterator *exclDisi_;
  jint doc_;
}

- (jint)toNonExcluded;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchReqExclScorer, reqScorer_, OrgApacheLuceneSearchScorer *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchReqExclScorer, exclDisi_, OrgApacheLuceneSearchDocIdSetIterator *)

__attribute__((unused)) static jint OrgApacheLuceneSearchReqExclScorer_toNonExcluded(OrgApacheLuceneSearchReqExclScorer *self);

@implementation OrgApacheLuceneSearchReqExclScorer

- (instancetype)initWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)reqScorer
          withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)exclDisi {
  OrgApacheLuceneSearchReqExclScorer_initWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchDocIdSetIterator_(self, reqScorer, exclDisi);
  return self;
}

- (jint)nextDoc {
  if (reqScorer_ == nil) {
    return doc_;
  }
  doc_ = [reqScorer_ nextDoc];
  if (doc_ == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
    JreStrongAssign(&reqScorer_, nil);
    return doc_;
  }
  if (exclDisi_ == nil) {
    return doc_;
  }
  return doc_ = OrgApacheLuceneSearchReqExclScorer_toNonExcluded(self);
}

- (jint)toNonExcluded {
  return OrgApacheLuceneSearchReqExclScorer_toNonExcluded(self);
}

- (jint)docID {
  return doc_;
}

- (jfloat)score {
  return [((OrgApacheLuceneSearchScorer *) nil_chk(reqScorer_)) score];
}

- (jint)advanceWithInt:(jint)target {
  if (reqScorer_ == nil) {
    return doc_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
  }
  if (exclDisi_ == nil) {
    return doc_ = [reqScorer_ advanceWithInt:target];
  }
  if ([reqScorer_ advanceWithInt:target] == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
    JreStrongAssign(&reqScorer_, nil);
    return doc_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
  }
  return doc_ = OrgApacheLuceneSearchReqExclScorer_toNonExcluded(self);
}

- (void)dealloc {
  RELEASE_(reqScorer_);
  RELEASE_(exclDisi_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchScorer:withOrgApacheLuceneSearchDocIdSetIterator:);
  methods[1].selector = @selector(nextDoc);
  methods[2].selector = @selector(toNonExcluded);
  methods[3].selector = @selector(docID);
  methods[4].selector = @selector(score);
  methods[5].selector = @selector(advanceWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "reqScorer_", "LOrgApacheLuceneSearchScorer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "exclDisi_", "LOrgApacheLuceneSearchDocIdSetIterator;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "doc_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchScorer;LOrgApacheLuceneSearchDocIdSetIterator;", "LJavaIoIOException;", "advance", "I" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchReqExclScorer = { "ReqExclScorer", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x0, 6, 3, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchReqExclScorer;
}

@end

void OrgApacheLuceneSearchReqExclScorer_initWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchReqExclScorer *self, OrgApacheLuceneSearchScorer *reqScorer, OrgApacheLuceneSearchDocIdSetIterator *exclDisi) {
  OrgApacheLuceneSearchScorer_initWithOrgApacheLuceneSearchWeight_(self, ((OrgApacheLuceneSearchScorer *) nil_chk(reqScorer))->weight_);
  self->doc_ = -1;
  JreStrongAssign(&self->reqScorer_, reqScorer);
  JreStrongAssign(&self->exclDisi_, exclDisi);
}

OrgApacheLuceneSearchReqExclScorer *new_OrgApacheLuceneSearchReqExclScorer_initWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchScorer *reqScorer, OrgApacheLuceneSearchDocIdSetIterator *exclDisi) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchReqExclScorer, initWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchDocIdSetIterator_, reqScorer, exclDisi)
}

OrgApacheLuceneSearchReqExclScorer *create_OrgApacheLuceneSearchReqExclScorer_initWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchScorer *reqScorer, OrgApacheLuceneSearchDocIdSetIterator *exclDisi) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchReqExclScorer, initWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchDocIdSetIterator_, reqScorer, exclDisi)
}

jint OrgApacheLuceneSearchReqExclScorer_toNonExcluded(OrgApacheLuceneSearchReqExclScorer *self) {
  jint exclDoc = [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(self->exclDisi_)) docID];
  jint reqDoc = [((OrgApacheLuceneSearchScorer *) nil_chk(self->reqScorer_)) docID];
  do {
    if (reqDoc < exclDoc) {
      return reqDoc;
    }
    else if (reqDoc > exclDoc) {
      exclDoc = [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(self->exclDisi_)) advanceWithInt:reqDoc];
      if (exclDoc == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
        JreStrongAssign(&self->exclDisi_, nil);
        return reqDoc;
      }
      if (exclDoc > reqDoc) {
        return reqDoc;
      }
    }
  }
  while ((reqDoc = [((OrgApacheLuceneSearchScorer *) nil_chk(self->reqScorer_)) nextDoc]) != OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS);
  JreStrongAssign(&self->reqScorer_, nil);
  return OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchReqExclScorer)
