//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/search/FilteredQuery.java
//

#include "J2ObjC_source.h"
#include "java/lang/Float.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Set.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/search/Collector.h"
#include "org/apache/lucene/search/DocIdSet.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/Explanation.h"
#include "org/apache/lucene/search/Filter.h"
#include "org/apache/lucene/search/FilteredQuery.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/Searcher.h"
#include "org/apache/lucene/search/Similarity.h"
#include "org/apache/lucene/search/Weight.h"
#include "org/apache/lucene/util/ToStringUtils.h"

@interface OrgApacheLuceneSearchFilteredQuery_1 : OrgApacheLuceneSearchWeight {
 @public
  OrgApacheLuceneSearchFilteredQuery *this$0_;
  OrgApacheLuceneSearchWeight *val$weight_;
  OrgApacheLuceneSearchSimilarity *val$similarity_;
  jfloat value_;
}

- (instancetype)initWithOrgApacheLuceneSearchFilteredQuery:(OrgApacheLuceneSearchFilteredQuery *)outer$
                           withOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)capture$0
                       withOrgApacheLuceneSearchSimilarity:(OrgApacheLuceneSearchSimilarity *)capture$1;

- (jfloat)getValue;

- (jboolean)scoresDocsOutOfOrder;

- (jfloat)sumOfSquaredWeights;

- (void)normalizeWithFloat:(jfloat)v;

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)ir
                                                                         withInt:(jint)i;

- (OrgApacheLuceneSearchQuery *)getQuery;

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)indexReader
                                                               withBoolean:(jboolean)scoreDocsInOrder
                                                               withBoolean:(jboolean)topScorer;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchFilteredQuery_1)

__attribute__((unused)) static void OrgApacheLuceneSearchFilteredQuery_1_initWithOrgApacheLuceneSearchFilteredQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchSimilarity_(OrgApacheLuceneSearchFilteredQuery_1 *self, OrgApacheLuceneSearchFilteredQuery *outer$, OrgApacheLuceneSearchWeight *capture$0, OrgApacheLuceneSearchSimilarity *capture$1);

__attribute__((unused)) static OrgApacheLuceneSearchFilteredQuery_1 *new_OrgApacheLuceneSearchFilteredQuery_1_initWithOrgApacheLuceneSearchFilteredQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchSimilarity_(OrgApacheLuceneSearchFilteredQuery *outer$, OrgApacheLuceneSearchWeight *capture$0, OrgApacheLuceneSearchSimilarity *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchFilteredQuery_1 *create_OrgApacheLuceneSearchFilteredQuery_1_initWithOrgApacheLuceneSearchFilteredQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchSimilarity_(OrgApacheLuceneSearchFilteredQuery *outer$, OrgApacheLuceneSearchWeight *capture$0, OrgApacheLuceneSearchSimilarity *capture$1);

@interface OrgApacheLuceneSearchFilteredQuery_2 : OrgApacheLuceneSearchScorer {
 @public
  OrgApacheLuceneSearchDocIdSetIterator *val$filterIter_;
  OrgApacheLuceneSearchScorer *val$scorer_;
  jint scorerDoc_;
  jint filterDoc_;
}

- (instancetype)initWithOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)capture$0
                              withOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)capture$1
                          withOrgApacheLuceneSearchSimilarity:(OrgApacheLuceneSearchSimilarity *)similarity
                              withOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight;

- (void)scoreWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)collector;

- (jint)advanceToNextCommonDoc;

- (jint)nextDoc;

- (jint)advanceWithInt:(jint)target;

- (jint)docID;

- (jfloat)score;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchFilteredQuery_2)

__attribute__((unused)) static void OrgApacheLuceneSearchFilteredQuery_2_initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchWeight_(OrgApacheLuceneSearchFilteredQuery_2 *self, OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchScorer *capture$1, OrgApacheLuceneSearchSimilarity *similarity, OrgApacheLuceneSearchWeight *weight);

__attribute__((unused)) static OrgApacheLuceneSearchFilteredQuery_2 *new_OrgApacheLuceneSearchFilteredQuery_2_initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchWeight_(OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchScorer *capture$1, OrgApacheLuceneSearchSimilarity *similarity, OrgApacheLuceneSearchWeight *weight) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchFilteredQuery_2 *create_OrgApacheLuceneSearchFilteredQuery_2_initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchWeight_(OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchScorer *capture$1, OrgApacheLuceneSearchSimilarity *similarity, OrgApacheLuceneSearchWeight *weight);

__attribute__((unused)) static jint OrgApacheLuceneSearchFilteredQuery_2_advanceToNextCommonDoc(OrgApacheLuceneSearchFilteredQuery_2 *self);

@implementation OrgApacheLuceneSearchFilteredQuery

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                   withOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter {
  OrgApacheLuceneSearchFilteredQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchFilter_(self, query, filter);
  return self;
}

- (OrgApacheLuceneSearchWeight *)createWeightWithOrgApacheLuceneSearchSearcher:(OrgApacheLuceneSearchSearcher *)searcher {
  OrgApacheLuceneSearchWeight *weight = [((OrgApacheLuceneSearchQuery *) nil_chk(query_)) createWeightWithOrgApacheLuceneSearchSearcher:searcher];
  OrgApacheLuceneSearchSimilarity *similarity = [((OrgApacheLuceneSearchQuery *) nil_chk(query_)) getSimilarityWithOrgApacheLuceneSearchSearcher:searcher];
  return create_OrgApacheLuceneSearchFilteredQuery_1_initWithOrgApacheLuceneSearchFilteredQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchSimilarity_(self, weight, similarity);
}

+ (OrgApacheLuceneSearchScorer *)getFilteredScorerWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)indexReader
                                                  withOrgApacheLuceneSearchSimilarity:(OrgApacheLuceneSearchSimilarity *)similarity
                                                      withOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                                                      withOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)wrapperWeight
                                                      withOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter {
  return OrgApacheLuceneSearchFilteredQuery_getFilteredScorerWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchFilter_(indexReader, similarity, weight, wrapperWeight, filter);
}

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  OrgApacheLuceneSearchQuery *rewritten = [((OrgApacheLuceneSearchQuery *) nil_chk(query_)) rewriteWithOrgApacheLuceneIndexIndexReader:reader];
  if (rewritten != query_) {
    OrgApacheLuceneSearchFilteredQuery *clone = (OrgApacheLuceneSearchFilteredQuery *) cast_chk([self java_clone], [OrgApacheLuceneSearchFilteredQuery class]);
    JreStrongAssign(&((OrgApacheLuceneSearchFilteredQuery *) nil_chk(clone))->query_, rewritten);
    return clone;
  }
  else {
    return self;
  }
}

- (OrgApacheLuceneSearchQuery *)getQuery {
  return query_;
}

- (OrgApacheLuceneSearchFilter *)getFilter {
  return filter_;
}

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms {
  [((OrgApacheLuceneSearchQuery *) nil_chk([self getQuery])) extractTermsWithJavaUtilSet:terms];
}

- (NSString *)toStringWithNSString:(NSString *)s {
  JavaLangStringBuilder *buffer = create_JavaLangStringBuilder_init();
  [buffer appendWithNSString:@"filtered("];
  [buffer appendWithNSString:[((OrgApacheLuceneSearchQuery *) nil_chk(query_)) toStringWithNSString:s]];
  [buffer appendWithNSString:@")->"];
  [buffer appendWithId:filter_];
  [buffer appendWithNSString:OrgApacheLuceneUtilToStringUtils_boostWithFloat_([self getBoost])];
  return [buffer description];
}

- (jboolean)isEqual:(id)o {
  if ([o isKindOfClass:[OrgApacheLuceneSearchFilteredQuery class]]) {
    OrgApacheLuceneSearchFilteredQuery *fq = (OrgApacheLuceneSearchFilteredQuery *) cast_chk(o, [OrgApacheLuceneSearchFilteredQuery class]);
    return ([((OrgApacheLuceneSearchQuery *) nil_chk(query_)) isEqual:((OrgApacheLuceneSearchFilteredQuery *) nil_chk(fq))->query_] && [((OrgApacheLuceneSearchFilter *) nil_chk(filter_)) isEqual:fq->filter_] && [self getBoost] == [fq getBoost]);
  }
  return false;
}

- (NSUInteger)hash {
  return ((jint) [((OrgApacheLuceneSearchQuery *) nil_chk(query_)) hash]) ^ ((jint) [((OrgApacheLuceneSearchFilter *) nil_chk(filter_)) hash]) + JavaLangFloat_floatToRawIntBitsWithFloat_([self getBoost]);
}

- (void)dealloc {
  RELEASE_(query_);
  RELEASE_(filter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchWeight;", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchScorer;", 0x8, 4, 5, 3, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 6, 7, 3, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchFilter;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, 10, -1, -1 },
    { NULL, "LNSString;", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 15, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchQuery:withOrgApacheLuceneSearchFilter:);
  methods[1].selector = @selector(createWeightWithOrgApacheLuceneSearchSearcher:);
  methods[2].selector = @selector(getFilteredScorerWithOrgApacheLuceneIndexIndexReader:withOrgApacheLuceneSearchSimilarity:withOrgApacheLuceneSearchWeight:withOrgApacheLuceneSearchWeight:withOrgApacheLuceneSearchFilter:);
  methods[3].selector = @selector(rewriteWithOrgApacheLuceneIndexIndexReader:);
  methods[4].selector = @selector(getQuery);
  methods[5].selector = @selector(getFilter);
  methods[6].selector = @selector(extractTermsWithJavaUtilSet:);
  methods[7].selector = @selector(toStringWithNSString:);
  methods[8].selector = @selector(isEqual:);
  methods[9].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "query_", "LOrgApacheLuceneSearchQuery;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "filter_", "LOrgApacheLuceneSearchFilter;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchQuery;LOrgApacheLuceneSearchFilter;", "createWeight", "LOrgApacheLuceneSearchSearcher;", "LJavaIoIOException;", "getFilteredScorer", "LOrgApacheLuceneIndexIndexReader;LOrgApacheLuceneSearchSimilarity;LOrgApacheLuceneSearchWeight;LOrgApacheLuceneSearchWeight;LOrgApacheLuceneSearchFilter;", "rewrite", "LOrgApacheLuceneIndexIndexReader;", "extractTerms", "LJavaUtilSet;", "(Ljava/util/Set<Lorg/apache/lucene/index/Term;>;)V", "toString", "LNSString;", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchFilteredQuery = { "FilteredQuery", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x1, 10, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchFilteredQuery;
}

@end

void OrgApacheLuceneSearchFilteredQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchFilter_(OrgApacheLuceneSearchFilteredQuery *self, OrgApacheLuceneSearchQuery *query, OrgApacheLuceneSearchFilter *filter) {
  OrgApacheLuceneSearchQuery_init(self);
  JreStrongAssign(&self->query_, query);
  JreStrongAssign(&self->filter_, filter);
}

OrgApacheLuceneSearchFilteredQuery *new_OrgApacheLuceneSearchFilteredQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchFilter_(OrgApacheLuceneSearchQuery *query, OrgApacheLuceneSearchFilter *filter) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchFilteredQuery, initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchFilter_, query, filter)
}

OrgApacheLuceneSearchFilteredQuery *create_OrgApacheLuceneSearchFilteredQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchFilter_(OrgApacheLuceneSearchQuery *query, OrgApacheLuceneSearchFilter *filter) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchFilteredQuery, initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchFilter_, query, filter)
}

OrgApacheLuceneSearchScorer *OrgApacheLuceneSearchFilteredQuery_getFilteredScorerWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchFilter_(OrgApacheLuceneIndexIndexReader *indexReader, OrgApacheLuceneSearchSimilarity *similarity, OrgApacheLuceneSearchWeight *weight, OrgApacheLuceneSearchWeight *wrapperWeight, OrgApacheLuceneSearchFilter *filter) {
  OrgApacheLuceneSearchFilteredQuery_initialize();
  JreAssert((filter != nil), (@"org/apache/lucene/search/FilteredQuery.java:134 condition failed: assert filter != null;"));
  OrgApacheLuceneSearchDocIdSet *filterDocIdSet = [((OrgApacheLuceneSearchFilter *) nil_chk(filter)) getDocIdSetWithOrgApacheLuceneIndexIndexReader:indexReader];
  if (filterDocIdSet == nil) {
    return nil;
  }
  OrgApacheLuceneSearchDocIdSetIterator *filterIter = [filterDocIdSet iterator];
  if (filterIter == nil) {
    return nil;
  }
  OrgApacheLuceneSearchScorer *scorer = [((OrgApacheLuceneSearchWeight *) nil_chk(weight)) scorerWithOrgApacheLuceneIndexIndexReader:indexReader withBoolean:true withBoolean:false];
  return (scorer == nil) ? nil : create_OrgApacheLuceneSearchFilteredQuery_2_initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchWeight_(filterIter, scorer, similarity, wrapperWeight);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchFilteredQuery)

@implementation OrgApacheLuceneSearchFilteredQuery_1

- (instancetype)initWithOrgApacheLuceneSearchFilteredQuery:(OrgApacheLuceneSearchFilteredQuery *)outer$
                           withOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)capture$0
                       withOrgApacheLuceneSearchSimilarity:(OrgApacheLuceneSearchSimilarity *)capture$1 {
  OrgApacheLuceneSearchFilteredQuery_1_initWithOrgApacheLuceneSearchFilteredQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchSimilarity_(self, outer$, capture$0, capture$1);
  return self;
}

- (jfloat)getValue {
  return value_;
}

- (jboolean)scoresDocsOutOfOrder {
  return false;
}

- (jfloat)sumOfSquaredWeights {
  return [((OrgApacheLuceneSearchWeight *) nil_chk(val$weight_)) sumOfSquaredWeights] * [this$0_ getBoost] * [this$0_ getBoost];
}

- (void)normalizeWithFloat:(jfloat)v {
  [((OrgApacheLuceneSearchWeight *) nil_chk(val$weight_)) normalizeWithFloat:v * [this$0_ getBoost]];
  value_ = [val$weight_ getValue];
}

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)ir
                                                                         withInt:(jint)i {
  OrgApacheLuceneSearchExplanation *inner = [((OrgApacheLuceneSearchWeight *) nil_chk(val$weight_)) explainWithOrgApacheLuceneIndexIndexReader:ir withInt:i];
  OrgApacheLuceneSearchFilter *f = this$0_->filter_;
  OrgApacheLuceneSearchDocIdSet *docIdSet = [((OrgApacheLuceneSearchFilter *) nil_chk(f)) getDocIdSetWithOrgApacheLuceneIndexIndexReader:ir];
  OrgApacheLuceneSearchDocIdSetIterator *docIdSetIterator = docIdSet == nil ? [((OrgApacheLuceneSearchDocIdSet *) nil_chk(JreLoadStatic(OrgApacheLuceneSearchDocIdSet, EMPTY_DOCIDSET))) iterator] : [docIdSet iterator];
  if (docIdSetIterator == nil) {
    docIdSetIterator = [((OrgApacheLuceneSearchDocIdSet *) nil_chk(JreLoadStatic(OrgApacheLuceneSearchDocIdSet, EMPTY_DOCIDSET))) iterator];
  }
  if ([((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(docIdSetIterator)) advanceWithInt:i] == i) {
    return inner;
  }
  else {
    OrgApacheLuceneSearchExplanation *result = create_OrgApacheLuceneSearchExplanation_initWithFloat_withNSString_(0.0f, JreStrcat("$$", @"failure to match filter: ", [f description]));
    [result addDetailWithOrgApacheLuceneSearchExplanation:inner];
    return result;
  }
}

- (OrgApacheLuceneSearchQuery *)getQuery {
  return this$0_;
}

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)indexReader
                                                               withBoolean:(jboolean)scoreDocsInOrder
                                                               withBoolean:(jboolean)topScorer {
  return OrgApacheLuceneSearchFilteredQuery_getFilteredScorerWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchFilter_(indexReader, val$similarity_, val$weight_, self, this$0_->filter_);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$weight_);
  RELEASE_(val$similarity_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchExplanation;", 0x1, 3, 4, 0, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchScorer;", 0x1, 5, 6, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchFilteredQuery:withOrgApacheLuceneSearchWeight:withOrgApacheLuceneSearchSimilarity:);
  methods[1].selector = @selector(getValue);
  methods[2].selector = @selector(scoresDocsOutOfOrder);
  methods[3].selector = @selector(sumOfSquaredWeights);
  methods[4].selector = @selector(normalizeWithFloat:);
  methods[5].selector = @selector(explainWithOrgApacheLuceneIndexIndexReader:withInt:);
  methods[6].selector = @selector(getQuery);
  methods[7].selector = @selector(scorerWithOrgApacheLuceneIndexIndexReader:withBoolean:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneSearchFilteredQuery;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$weight_", "LOrgApacheLuceneSearchWeight;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$similarity_", "LOrgApacheLuceneSearchSimilarity;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "value_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoIOException;", "normalize", "F", "explain", "LOrgApacheLuceneIndexIndexReader;I", "scorer", "LOrgApacheLuceneIndexIndexReader;ZZ", "LOrgApacheLuceneSearchFilteredQuery;", "createWeightWithOrgApacheLuceneSearchSearcher:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchFilteredQuery_1 = { "", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x8018, 8, 4, 7, -1, 8, -1, -1 };
  return &_OrgApacheLuceneSearchFilteredQuery_1;
}

@end

void OrgApacheLuceneSearchFilteredQuery_1_initWithOrgApacheLuceneSearchFilteredQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchSimilarity_(OrgApacheLuceneSearchFilteredQuery_1 *self, OrgApacheLuceneSearchFilteredQuery *outer$, OrgApacheLuceneSearchWeight *capture$0, OrgApacheLuceneSearchSimilarity *capture$1) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$weight_, capture$0);
  JreStrongAssign(&self->val$similarity_, capture$1);
  OrgApacheLuceneSearchWeight_init(self);
}

OrgApacheLuceneSearchFilteredQuery_1 *new_OrgApacheLuceneSearchFilteredQuery_1_initWithOrgApacheLuceneSearchFilteredQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchSimilarity_(OrgApacheLuceneSearchFilteredQuery *outer$, OrgApacheLuceneSearchWeight *capture$0, OrgApacheLuceneSearchSimilarity *capture$1) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchFilteredQuery_1, initWithOrgApacheLuceneSearchFilteredQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchSimilarity_, outer$, capture$0, capture$1)
}

OrgApacheLuceneSearchFilteredQuery_1 *create_OrgApacheLuceneSearchFilteredQuery_1_initWithOrgApacheLuceneSearchFilteredQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchSimilarity_(OrgApacheLuceneSearchFilteredQuery *outer$, OrgApacheLuceneSearchWeight *capture$0, OrgApacheLuceneSearchSimilarity *capture$1) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchFilteredQuery_1, initWithOrgApacheLuceneSearchFilteredQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchSimilarity_, outer$, capture$0, capture$1)
}

@implementation OrgApacheLuceneSearchFilteredQuery_2

- (instancetype)initWithOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)capture$0
                              withOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)capture$1
                          withOrgApacheLuceneSearchSimilarity:(OrgApacheLuceneSearchSimilarity *)similarity
                              withOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight {
  OrgApacheLuceneSearchFilteredQuery_2_initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchWeight_(self, capture$0, capture$1, similarity, weight);
  return self;
}

- (void)scoreWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)collector {
  jint filterDoc = [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(val$filterIter_)) nextDoc];
  jint scorerDoc = [((OrgApacheLuceneSearchScorer *) nil_chk(val$scorer_)) advanceWithInt:filterDoc];
  [((OrgApacheLuceneSearchCollector *) nil_chk(collector)) setScorerWithOrgApacheLuceneSearchScorer:val$scorer_];
  for (; ; ) {
    if (scorerDoc == filterDoc) {
      if (scorerDoc == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
        break;
      }
      [collector collectWithInt:scorerDoc];
      filterDoc = [val$filterIter_ nextDoc];
      scorerDoc = [val$scorer_ advanceWithInt:filterDoc];
    }
    else if (scorerDoc > filterDoc) {
      filterDoc = [val$filterIter_ advanceWithInt:scorerDoc];
    }
    else {
      scorerDoc = [val$scorer_ advanceWithInt:filterDoc];
    }
  }
}

- (jint)advanceToNextCommonDoc {
  return OrgApacheLuceneSearchFilteredQuery_2_advanceToNextCommonDoc(self);
}

- (jint)nextDoc {
  filterDoc_ = [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(val$filterIter_)) nextDoc];
  return OrgApacheLuceneSearchFilteredQuery_2_advanceToNextCommonDoc(self);
}

- (jint)advanceWithInt:(jint)target {
  if (target > filterDoc_) {
    filterDoc_ = [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(val$filterIter_)) advanceWithInt:target];
  }
  return OrgApacheLuceneSearchFilteredQuery_2_advanceToNextCommonDoc(self);
}

- (jint)docID {
  return scorerDoc_;
}

- (jfloat)score {
  return [((OrgApacheLuceneSearchScorer *) nil_chk(val$scorer_)) score];
}

- (void)dealloc {
  RELEASE_(val$filterIter_);
  RELEASE_(val$scorer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, 3, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 5, 3, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchDocIdSetIterator:withOrgApacheLuceneSearchScorer:withOrgApacheLuceneSearchSimilarity:withOrgApacheLuceneSearchWeight:);
  methods[1].selector = @selector(scoreWithOrgApacheLuceneSearchCollector:);
  methods[2].selector = @selector(advanceToNextCommonDoc);
  methods[3].selector = @selector(nextDoc);
  methods[4].selector = @selector(advanceWithInt:);
  methods[5].selector = @selector(docID);
  methods[6].selector = @selector(score);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$filterIter_", "LOrgApacheLuceneSearchDocIdSetIterator;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$scorer_", "LOrgApacheLuceneSearchScorer;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "scorerDoc_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "filterDoc_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSimilarity;LOrgApacheLuceneSearchWeight;", "score", "LOrgApacheLuceneSearchCollector;", "LJavaIoIOException;", "advance", "I", "LOrgApacheLuceneSearchFilteredQuery;", "getFilteredScorerWithOrgApacheLuceneIndexIndexReader:withOrgApacheLuceneSearchSimilarity:withOrgApacheLuceneSearchWeight:withOrgApacheLuceneSearchWeight:withOrgApacheLuceneSearchFilter:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchFilteredQuery_2 = { "", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x8018, 7, 4, 6, -1, 7, -1, -1 };
  return &_OrgApacheLuceneSearchFilteredQuery_2;
}

@end

void OrgApacheLuceneSearchFilteredQuery_2_initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchWeight_(OrgApacheLuceneSearchFilteredQuery_2 *self, OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchScorer *capture$1, OrgApacheLuceneSearchSimilarity *similarity, OrgApacheLuceneSearchWeight *weight) {
  JreStrongAssign(&self->val$filterIter_, capture$0);
  JreStrongAssign(&self->val$scorer_, capture$1);
  OrgApacheLuceneSearchScorer_initWithOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchWeight_(self, similarity, weight);
  self->scorerDoc_ = -1;
  self->filterDoc_ = -1;
}

OrgApacheLuceneSearchFilteredQuery_2 *new_OrgApacheLuceneSearchFilteredQuery_2_initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchWeight_(OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchScorer *capture$1, OrgApacheLuceneSearchSimilarity *similarity, OrgApacheLuceneSearchWeight *weight) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchFilteredQuery_2, initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchWeight_, capture$0, capture$1, similarity, weight)
}

OrgApacheLuceneSearchFilteredQuery_2 *create_OrgApacheLuceneSearchFilteredQuery_2_initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchWeight_(OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchScorer *capture$1, OrgApacheLuceneSearchSimilarity *similarity, OrgApacheLuceneSearchWeight *weight) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchFilteredQuery_2, initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchWeight_, capture$0, capture$1, similarity, weight)
}

jint OrgApacheLuceneSearchFilteredQuery_2_advanceToNextCommonDoc(OrgApacheLuceneSearchFilteredQuery_2 *self) {
  for (; ; ) {
    if (self->scorerDoc_ < self->filterDoc_) {
      self->scorerDoc_ = [((OrgApacheLuceneSearchScorer *) nil_chk(self->val$scorer_)) advanceWithInt:self->filterDoc_];
    }
    else if (self->scorerDoc_ == self->filterDoc_) {
      return self->scorerDoc_;
    }
    else {
      self->filterDoc_ = [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(self->val$filterIter_)) advanceWithInt:self->scorerDoc_];
    }
  }
}
