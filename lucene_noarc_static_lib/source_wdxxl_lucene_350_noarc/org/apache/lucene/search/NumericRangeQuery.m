//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/search/NumericRangeQuery.java
//

#include "J2ObjC_source.h"
#include "java/io/ObjectInputStream.h"
#include "java/lang/Boolean.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/LinkedList.h"
#include "org/apache/lucene/document/NumericField.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/index/TermEnum.h"
#include "org/apache/lucene/search/FilteredTermEnum.h"
#include "org/apache/lucene/search/MultiTermQuery.h"
#include "org/apache/lucene/search/NumericRangeQuery.h"
#include "org/apache/lucene/util/NumericUtils.h"
#include "org/apache/lucene/util/StringHelper.h"
#include "org/apache/lucene/util/ToStringUtils.h"

@interface OrgApacheLuceneSearchNumericRangeQuery ()

- (instancetype)initWithNSString:(NSString *)field
                         withInt:(jint)precisionStep
withOrgApacheLuceneDocumentNumericField_DataType:(OrgApacheLuceneDocumentNumericField_DataType *)dataType
                    withNSNumber:(NSNumber *)min
                    withNSNumber:(NSNumber *)max
                     withBoolean:(jboolean)minInclusive
                     withBoolean:(jboolean)maxInclusive;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

@end

__attribute__((unused)) static void OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentNumericField_DataType_withNSNumber_withNSNumber_withBoolean_withBoolean_(OrgApacheLuceneSearchNumericRangeQuery *self, NSString *field, jint precisionStep, OrgApacheLuceneDocumentNumericField_DataType *dataType, NSNumber *min, NSNumber *max, jboolean minInclusive, jboolean maxInclusive);

__attribute__((unused)) static OrgApacheLuceneSearchNumericRangeQuery *new_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentNumericField_DataType_withNSNumber_withNSNumber_withBoolean_withBoolean_(NSString *field, jint precisionStep, OrgApacheLuceneDocumentNumericField_DataType *dataType, NSNumber *min, NSNumber *max, jboolean minInclusive, jboolean maxInclusive) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchNumericRangeQuery *create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentNumericField_DataType_withNSNumber_withNSNumber_withBoolean_withBoolean_(NSString *field, jint precisionStep, OrgApacheLuceneDocumentNumericField_DataType *dataType, NSNumber *min, NSNumber *max, jboolean minInclusive, jboolean maxInclusive);

@interface OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum : OrgApacheLuceneSearchFilteredTermEnum {
 @public
  OrgApacheLuceneSearchNumericRangeQuery *this$0_;
  OrgApacheLuceneIndexIndexReader *reader_;
  JavaUtilLinkedList *rangeBounds_;
  OrgApacheLuceneIndexTerm *termTemplate_;
  NSString *currentUpperBound_;
}

- (instancetype)initWithOrgApacheLuceneSearchNumericRangeQuery:(OrgApacheLuceneSearchNumericRangeQuery *)outer$
                           withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader;

- (jfloat)difference;

- (jboolean)endEnum;

- (void)setEnumWithOrgApacheLuceneIndexTermEnum:(OrgApacheLuceneIndexTermEnum *)tenum;

- (jboolean)termCompareWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term;

- (jboolean)next;

- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum, reader_, OrgApacheLuceneIndexIndexReader *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum, rangeBounds_, JavaUtilLinkedList *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum, termTemplate_, OrgApacheLuceneIndexTerm *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum, currentUpperBound_, NSString *)

__attribute__((unused)) static void OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *self, OrgApacheLuceneSearchNumericRangeQuery *outer$, OrgApacheLuceneIndexIndexReader *reader);

__attribute__((unused)) static OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *new_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneSearchNumericRangeQuery *outer$, OrgApacheLuceneIndexIndexReader *reader) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *create_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneSearchNumericRangeQuery *outer$, OrgApacheLuceneIndexIndexReader *reader);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum)

@interface OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1 : OrgApacheLuceneUtilNumericUtils_LongRangeBuilder {
 @public
  OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *this$0_;
}

- (instancetype)initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum:(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *)outer$;

- (void)addRangeWithNSString:(NSString *)minPrefixCoded
                withNSString:(NSString *)maxPrefixCoded;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1)

__attribute__((unused)) static void OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1 *self, OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *outer$);

__attribute__((unused)) static OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1 *new_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1 *create_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *outer$);

@interface OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2 : OrgApacheLuceneUtilNumericUtils_IntRangeBuilder {
 @public
  OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *this$0_;
}

- (instancetype)initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum:(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *)outer$;

- (void)addRangeWithNSString:(NSString *)minPrefixCoded
                withNSString:(NSString *)maxPrefixCoded;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2)

__attribute__((unused)) static void OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2 *self, OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *outer$);

__attribute__((unused)) static OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2 *new_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2 *create_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *outer$);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchNumericRangeQuery)

jlong OrgApacheLuceneSearchNumericRangeQuery_LONG_NEGATIVE_INFINITY;
jlong OrgApacheLuceneSearchNumericRangeQuery_LONG_POSITIVE_INFINITY;
jint OrgApacheLuceneSearchNumericRangeQuery_INT_NEGATIVE_INFINITY;
jint OrgApacheLuceneSearchNumericRangeQuery_INT_POSITIVE_INFINITY;

@implementation OrgApacheLuceneSearchNumericRangeQuery

- (instancetype)initWithNSString:(NSString *)field
                         withInt:(jint)precisionStep
withOrgApacheLuceneDocumentNumericField_DataType:(OrgApacheLuceneDocumentNumericField_DataType *)dataType
                    withNSNumber:(NSNumber *)min
                    withNSNumber:(NSNumber *)max
                     withBoolean:(jboolean)minInclusive
                     withBoolean:(jboolean)maxInclusive {
  OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentNumericField_DataType_withNSNumber_withNSNumber_withBoolean_withBoolean_(self, field, precisionStep, dataType, min, max, minInclusive, maxInclusive);
  return self;
}

+ (OrgApacheLuceneSearchNumericRangeQuery *)newLongRangeWithNSString:(NSString *)field
                                                             withInt:(jint)precisionStep
                                                    withJavaLangLong:(JavaLangLong *)min
                                                    withJavaLangLong:(JavaLangLong *)max
                                                         withBoolean:(jboolean)minInclusive
                                                         withBoolean:(jboolean)maxInclusive {
  return OrgApacheLuceneSearchNumericRangeQuery_newLongRangeWithNSString_withInt_withJavaLangLong_withJavaLangLong_withBoolean_withBoolean_(field, precisionStep, min, max, minInclusive, maxInclusive);
}

+ (OrgApacheLuceneSearchNumericRangeQuery *)newLongRangeWithNSString:(NSString *)field
                                                    withJavaLangLong:(JavaLangLong *)min
                                                    withJavaLangLong:(JavaLangLong *)max
                                                         withBoolean:(jboolean)minInclusive
                                                         withBoolean:(jboolean)maxInclusive {
  return OrgApacheLuceneSearchNumericRangeQuery_newLongRangeWithNSString_withJavaLangLong_withJavaLangLong_withBoolean_withBoolean_(field, min, max, minInclusive, maxInclusive);
}

+ (OrgApacheLuceneSearchNumericRangeQuery *)newIntRangeWithNSString:(NSString *)field
                                                            withInt:(jint)precisionStep
                                                withJavaLangInteger:(JavaLangInteger *)min
                                                withJavaLangInteger:(JavaLangInteger *)max
                                                        withBoolean:(jboolean)minInclusive
                                                        withBoolean:(jboolean)maxInclusive {
  return OrgApacheLuceneSearchNumericRangeQuery_newIntRangeWithNSString_withInt_withJavaLangInteger_withJavaLangInteger_withBoolean_withBoolean_(field, precisionStep, min, max, minInclusive, maxInclusive);
}

+ (OrgApacheLuceneSearchNumericRangeQuery *)newIntRangeWithNSString:(NSString *)field
                                                withJavaLangInteger:(JavaLangInteger *)min
                                                withJavaLangInteger:(JavaLangInteger *)max
                                                        withBoolean:(jboolean)minInclusive
                                                        withBoolean:(jboolean)maxInclusive {
  return OrgApacheLuceneSearchNumericRangeQuery_newIntRangeWithNSString_withJavaLangInteger_withJavaLangInteger_withBoolean_withBoolean_(field, min, max, minInclusive, maxInclusive);
}

+ (OrgApacheLuceneSearchNumericRangeQuery *)newDoubleRangeWithNSString:(NSString *)field
                                                               withInt:(jint)precisionStep
                                                    withJavaLangDouble:(JavaLangDouble *)min
                                                    withJavaLangDouble:(JavaLangDouble *)max
                                                           withBoolean:(jboolean)minInclusive
                                                           withBoolean:(jboolean)maxInclusive {
  return OrgApacheLuceneSearchNumericRangeQuery_newDoubleRangeWithNSString_withInt_withJavaLangDouble_withJavaLangDouble_withBoolean_withBoolean_(field, precisionStep, min, max, minInclusive, maxInclusive);
}

+ (OrgApacheLuceneSearchNumericRangeQuery *)newDoubleRangeWithNSString:(NSString *)field
                                                    withJavaLangDouble:(JavaLangDouble *)min
                                                    withJavaLangDouble:(JavaLangDouble *)max
                                                           withBoolean:(jboolean)minInclusive
                                                           withBoolean:(jboolean)maxInclusive {
  return OrgApacheLuceneSearchNumericRangeQuery_newDoubleRangeWithNSString_withJavaLangDouble_withJavaLangDouble_withBoolean_withBoolean_(field, min, max, minInclusive, maxInclusive);
}

+ (OrgApacheLuceneSearchNumericRangeQuery *)newFloatRangeWithNSString:(NSString *)field
                                                              withInt:(jint)precisionStep
                                                    withJavaLangFloat:(JavaLangFloat *)min
                                                    withJavaLangFloat:(JavaLangFloat *)max
                                                          withBoolean:(jboolean)minInclusive
                                                          withBoolean:(jboolean)maxInclusive {
  return OrgApacheLuceneSearchNumericRangeQuery_newFloatRangeWithNSString_withInt_withJavaLangFloat_withJavaLangFloat_withBoolean_withBoolean_(field, precisionStep, min, max, minInclusive, maxInclusive);
}

+ (OrgApacheLuceneSearchNumericRangeQuery *)newFloatRangeWithNSString:(NSString *)field
                                                    withJavaLangFloat:(JavaLangFloat *)min
                                                    withJavaLangFloat:(JavaLangFloat *)max
                                                          withBoolean:(jboolean)minInclusive
                                                          withBoolean:(jboolean)maxInclusive {
  return OrgApacheLuceneSearchNumericRangeQuery_newFloatRangeWithNSString_withJavaLangFloat_withJavaLangFloat_withBoolean_withBoolean_(field, min, max, minInclusive, maxInclusive);
}

- (OrgApacheLuceneSearchFilteredTermEnum *)getEnumWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  return create_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexIndexReader_(self, reader);
}

- (NSString *)getField {
  return field_;
}

- (jboolean)includesMin {
  return minInclusive_;
}

- (jboolean)includesMax {
  return maxInclusive_;
}

- (NSNumber *)getMin {
  return min_;
}

- (NSNumber *)getMax {
  return max_;
}

- (jint)getPrecisionStep {
  return precisionStep_;
}

- (NSString *)toStringWithNSString:(NSString *)field {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  if (![((NSString *) nil_chk(self->field_)) isEqual:field]) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:self->field_])) appendWithChar:':'];
  return [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithChar:minInclusive_ ? '[' : '{'])) appendWithNSString:(min_ == nil) ? @"*" : [((NSNumber *) nil_chk(min_)) description]])) appendWithNSString:@" TO "])) appendWithNSString:(max_ == nil) ? @"*" : [((NSNumber *) nil_chk(max_)) description]])) appendWithChar:maxInclusive_ ? ']' : '}'])) appendWithNSString:OrgApacheLuceneUtilToStringUtils_boostWithFloat_([self getBoost])])) description];
}

- (jboolean)isEqual:(id)o {
  if (o == self) return true;
  if (![super isEqual:o]) return false;
  if ([o isKindOfClass:[OrgApacheLuceneSearchNumericRangeQuery class]]) {
    OrgApacheLuceneSearchNumericRangeQuery *q = (OrgApacheLuceneSearchNumericRangeQuery *) cast_chk(o, [OrgApacheLuceneSearchNumericRangeQuery class]);
    return (field_ == ((OrgApacheLuceneSearchNumericRangeQuery *) nil_chk(q))->field_ && (q->min_ == nil ? min_ == nil : [q->min_ isEqual:min_]) && (q->max_ == nil ? max_ == nil : [q->max_ isEqual:max_]) && minInclusive_ == q->minInclusive_ && maxInclusive_ == q->maxInclusive_ && precisionStep_ == q->precisionStep_);
  }
  return false;
}

- (NSUInteger)hash {
  jint hash_ = ((jint) [super hash]);
  hash_ += ((jint) [((NSString *) nil_chk(field_)) hash]) ^ (jint) 0x4565fd66 + precisionStep_ ^ (jint) 0x64365465;
  if (min_ != nil) hash_ += ((jint) [min_ hash]) ^ (jint) 0x14fa55fb;
  if (max_ != nil) hash_ += ((jint) [max_ hash]) ^ (jint) 0x733fa5fe;
  return hash_ + (((jint) [JavaLangBoolean_valueOfWithBoolean_(minInclusive_) hash]) ^ (jint) 0x14fa55fb) + (((jint) [JavaLangBoolean_valueOfWithBoolean_(maxInclusive_) hash]) ^ (jint) 0x733fa5fe);
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  JreStrongAssign(&field_, OrgApacheLuceneUtilStringHelper_internWithNSString_(field_));
}

- (void)dealloc {
  RELEASE_(field_);
  RELEASE_(dataType_);
  RELEASE_(min_);
  RELEASE_(max_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, 1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchNumericRangeQuery;", 0x9, 2, 3, -1, 4, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchNumericRangeQuery;", 0x9, 2, 5, -1, 6, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchNumericRangeQuery;", 0x9, 7, 8, -1, 9, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchNumericRangeQuery;", 0x9, 7, 10, -1, 11, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchNumericRangeQuery;", 0x9, 12, 13, -1, 14, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchNumericRangeQuery;", 0x9, 12, 15, -1, 16, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchNumericRangeQuery;", 0x9, 17, 18, -1, 19, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchNumericRangeQuery;", 0x9, 17, 20, -1, 21, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchFilteredTermEnum;", 0x4, 22, 23, 24, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, -1, -1, -1, 25, -1, -1 },
    { NULL, "LNSNumber;", 0x1, -1, -1, -1, 25, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 26, 27, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 28, 29, -1, -1, -1, -1 },
    { NULL, "I", 0x11, 30, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 31, 32, 33, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withInt:withOrgApacheLuceneDocumentNumericField_DataType:withNSNumber:withNSNumber:withBoolean:withBoolean:);
  methods[1].selector = @selector(newLongRangeWithNSString:withInt:withJavaLangLong:withJavaLangLong:withBoolean:withBoolean:);
  methods[2].selector = @selector(newLongRangeWithNSString:withJavaLangLong:withJavaLangLong:withBoolean:withBoolean:);
  methods[3].selector = @selector(newIntRangeWithNSString:withInt:withJavaLangInteger:withJavaLangInteger:withBoolean:withBoolean:);
  methods[4].selector = @selector(newIntRangeWithNSString:withJavaLangInteger:withJavaLangInteger:withBoolean:withBoolean:);
  methods[5].selector = @selector(newDoubleRangeWithNSString:withInt:withJavaLangDouble:withJavaLangDouble:withBoolean:withBoolean:);
  methods[6].selector = @selector(newDoubleRangeWithNSString:withJavaLangDouble:withJavaLangDouble:withBoolean:withBoolean:);
  methods[7].selector = @selector(newFloatRangeWithNSString:withInt:withJavaLangFloat:withJavaLangFloat:withBoolean:withBoolean:);
  methods[8].selector = @selector(newFloatRangeWithNSString:withJavaLangFloat:withJavaLangFloat:withBoolean:withBoolean:);
  methods[9].selector = @selector(getEnumWithOrgApacheLuceneIndexIndexReader:);
  methods[10].selector = @selector(getField);
  methods[11].selector = @selector(includesMin);
  methods[12].selector = @selector(includesMax);
  methods[13].selector = @selector(getMin);
  methods[14].selector = @selector(getMax);
  methods[15].selector = @selector(getPrecisionStep);
  methods[16].selector = @selector(toStringWithNSString:);
  methods[17].selector = @selector(isEqual:);
  methods[18].selector = @selector(hash);
  methods[19].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "field_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "precisionStep_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "dataType_", "LOrgApacheLuceneDocumentNumericField_DataType;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "min_", "LNSNumber;", .constantValue.asLong = 0, 0x10, -1, -1, 34, -1 },
    { "max_", "LNSNumber;", .constantValue.asLong = 0, 0x10, -1, -1, 34, -1 },
    { "minInclusive_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "maxInclusive_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "LONG_NEGATIVE_INFINITY", "J", .constantValue.asLong = 0, 0x18, -1, 35, -1, -1 },
    { "LONG_POSITIVE_INFINITY", "J", .constantValue.asLong = 0, 0x18, -1, 36, -1, -1 },
    { "INT_NEGATIVE_INFINITY", "I", .constantValue.asLong = 0, 0x18, -1, 37, -1, -1 },
    { "INT_POSITIVE_INFINITY", "I", .constantValue.asLong = 0, 0x18, -1, 38, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;ILOrgApacheLuceneDocumentNumericField_DataType;LNSNumber;LNSNumber;ZZ", "(Ljava/lang/String;ILorg/apache/lucene/document/NumericField$DataType;TT;TT;ZZ)V", "newLongRange", "LNSString;ILJavaLangLong;LJavaLangLong;ZZ", "(Ljava/lang/String;ILjava/lang/Long;Ljava/lang/Long;ZZ)Lorg/apache/lucene/search/NumericRangeQuery<Ljava/lang/Long;>;", "LNSString;LJavaLangLong;LJavaLangLong;ZZ", "(Ljava/lang/String;Ljava/lang/Long;Ljava/lang/Long;ZZ)Lorg/apache/lucene/search/NumericRangeQuery<Ljava/lang/Long;>;", "newIntRange", "LNSString;ILJavaLangInteger;LJavaLangInteger;ZZ", "(Ljava/lang/String;ILjava/lang/Integer;Ljava/lang/Integer;ZZ)Lorg/apache/lucene/search/NumericRangeQuery<Ljava/lang/Integer;>;", "LNSString;LJavaLangInteger;LJavaLangInteger;ZZ", "(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;ZZ)Lorg/apache/lucene/search/NumericRangeQuery<Ljava/lang/Integer;>;", "newDoubleRange", "LNSString;ILJavaLangDouble;LJavaLangDouble;ZZ", "(Ljava/lang/String;ILjava/lang/Double;Ljava/lang/Double;ZZ)Lorg/apache/lucene/search/NumericRangeQuery<Ljava/lang/Double;>;", "LNSString;LJavaLangDouble;LJavaLangDouble;ZZ", "(Ljava/lang/String;Ljava/lang/Double;Ljava/lang/Double;ZZ)Lorg/apache/lucene/search/NumericRangeQuery<Ljava/lang/Double;>;", "newFloatRange", "LNSString;ILJavaLangFloat;LJavaLangFloat;ZZ", "(Ljava/lang/String;ILjava/lang/Float;Ljava/lang/Float;ZZ)Lorg/apache/lucene/search/NumericRangeQuery<Ljava/lang/Float;>;", "LNSString;LJavaLangFloat;LJavaLangFloat;ZZ", "(Ljava/lang/String;Ljava/lang/Float;Ljava/lang/Float;ZZ)Lorg/apache/lucene/search/NumericRangeQuery<Ljava/lang/Float;>;", "getEnum", "LOrgApacheLuceneIndexIndexReader;", "LJavaIoIOException;", "()TT;", "toString", "LNSString;", "equals", "LNSObject;", "hashCode", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "TT;", &OrgApacheLuceneSearchNumericRangeQuery_LONG_NEGATIVE_INFINITY, &OrgApacheLuceneSearchNumericRangeQuery_LONG_POSITIVE_INFINITY, &OrgApacheLuceneSearchNumericRangeQuery_INT_NEGATIVE_INFINITY, &OrgApacheLuceneSearchNumericRangeQuery_INT_POSITIVE_INFINITY, "LOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum;", "<T:Ljava/lang/Number;>Lorg/apache/lucene/search/MultiTermQuery;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchNumericRangeQuery = { "NumericRangeQuery", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x11, 20, 11, -1, 39, -1, 40, -1 };
  return &_OrgApacheLuceneSearchNumericRangeQuery;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchNumericRangeQuery class]) {
    OrgApacheLuceneSearchNumericRangeQuery_LONG_NEGATIVE_INFINITY = OrgApacheLuceneUtilNumericUtils_doubleToSortableLongWithDouble_(JavaLangDouble_NEGATIVE_INFINITY);
    OrgApacheLuceneSearchNumericRangeQuery_LONG_POSITIVE_INFINITY = OrgApacheLuceneUtilNumericUtils_doubleToSortableLongWithDouble_(JavaLangDouble_POSITIVE_INFINITY);
    OrgApacheLuceneSearchNumericRangeQuery_INT_NEGATIVE_INFINITY = OrgApacheLuceneUtilNumericUtils_floatToSortableIntWithFloat_(JavaLangFloat_NEGATIVE_INFINITY);
    OrgApacheLuceneSearchNumericRangeQuery_INT_POSITIVE_INFINITY = OrgApacheLuceneUtilNumericUtils_floatToSortableIntWithFloat_(JavaLangFloat_POSITIVE_INFINITY);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchNumericRangeQuery)
  }
}

@end

void OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentNumericField_DataType_withNSNumber_withNSNumber_withBoolean_withBoolean_(OrgApacheLuceneSearchNumericRangeQuery *self, NSString *field, jint precisionStep, OrgApacheLuceneDocumentNumericField_DataType *dataType, NSNumber *min, NSNumber *max, jboolean minInclusive, jboolean maxInclusive) {
  OrgApacheLuceneSearchMultiTermQuery_init(self);
  if (precisionStep < 1) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"precisionStep must be >=1");
  JreStrongAssign(&self->field_, OrgApacheLuceneUtilStringHelper_internWithNSString_(field));
  self->precisionStep_ = precisionStep;
  JreStrongAssign(&self->dataType_, dataType);
  JreStrongAssign(&self->min_, min);
  JreStrongAssign(&self->max_, max);
  self->minInclusive_ = minInclusive;
  self->maxInclusive_ = maxInclusive;
  switch ([dataType ordinal]) {
    case OrgApacheLuceneDocumentNumericField_DataType_Enum_LONG:
    case OrgApacheLuceneDocumentNumericField_DataType_Enum_DOUBLE:
    [self setRewriteMethodWithOrgApacheLuceneSearchMultiTermQuery_RewriteMethod:(precisionStep > 6) ? JreLoadStatic(OrgApacheLuceneSearchMultiTermQuery, CONSTANT_SCORE_FILTER_REWRITE) : JreLoadStatic(OrgApacheLuceneSearchMultiTermQuery, CONSTANT_SCORE_AUTO_REWRITE_DEFAULT)];
    break;
    case OrgApacheLuceneDocumentNumericField_DataType_Enum_INT:
    case OrgApacheLuceneDocumentNumericField_DataType_Enum_FLOAT:
    [self setRewriteMethodWithOrgApacheLuceneSearchMultiTermQuery_RewriteMethod:(precisionStep > 8) ? JreLoadStatic(OrgApacheLuceneSearchMultiTermQuery, CONSTANT_SCORE_FILTER_REWRITE) : JreLoadStatic(OrgApacheLuceneSearchMultiTermQuery, CONSTANT_SCORE_AUTO_REWRITE_DEFAULT)];
    break;
    default:
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Invalid numeric DataType");
  }
  if (min != nil && [min isEqual:max]) {
    [self setRewriteMethodWithOrgApacheLuceneSearchMultiTermQuery_RewriteMethod:JreLoadStatic(OrgApacheLuceneSearchMultiTermQuery, CONSTANT_SCORE_BOOLEAN_QUERY_REWRITE)];
  }
}

OrgApacheLuceneSearchNumericRangeQuery *new_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentNumericField_DataType_withNSNumber_withNSNumber_withBoolean_withBoolean_(NSString *field, jint precisionStep, OrgApacheLuceneDocumentNumericField_DataType *dataType, NSNumber *min, NSNumber *max, jboolean minInclusive, jboolean maxInclusive) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchNumericRangeQuery, initWithNSString_withInt_withOrgApacheLuceneDocumentNumericField_DataType_withNSNumber_withNSNumber_withBoolean_withBoolean_, field, precisionStep, dataType, min, max, minInclusive, maxInclusive)
}

OrgApacheLuceneSearchNumericRangeQuery *create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentNumericField_DataType_withNSNumber_withNSNumber_withBoolean_withBoolean_(NSString *field, jint precisionStep, OrgApacheLuceneDocumentNumericField_DataType *dataType, NSNumber *min, NSNumber *max, jboolean minInclusive, jboolean maxInclusive) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchNumericRangeQuery, initWithNSString_withInt_withOrgApacheLuceneDocumentNumericField_DataType_withNSNumber_withNSNumber_withBoolean_withBoolean_, field, precisionStep, dataType, min, max, minInclusive, maxInclusive)
}

OrgApacheLuceneSearchNumericRangeQuery *OrgApacheLuceneSearchNumericRangeQuery_newLongRangeWithNSString_withInt_withJavaLangLong_withJavaLangLong_withBoolean_withBoolean_(NSString *field, jint precisionStep, JavaLangLong *min, JavaLangLong *max, jboolean minInclusive, jboolean maxInclusive) {
  OrgApacheLuceneSearchNumericRangeQuery_initialize();
  return create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentNumericField_DataType_withNSNumber_withNSNumber_withBoolean_withBoolean_(field, precisionStep, JreLoadEnum(OrgApacheLuceneDocumentNumericField_DataType, LONG), min, max, minInclusive, maxInclusive);
}

OrgApacheLuceneSearchNumericRangeQuery *OrgApacheLuceneSearchNumericRangeQuery_newLongRangeWithNSString_withJavaLangLong_withJavaLangLong_withBoolean_withBoolean_(NSString *field, JavaLangLong *min, JavaLangLong *max, jboolean minInclusive, jboolean maxInclusive) {
  OrgApacheLuceneSearchNumericRangeQuery_initialize();
  return create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentNumericField_DataType_withNSNumber_withNSNumber_withBoolean_withBoolean_(field, OrgApacheLuceneUtilNumericUtils_PRECISION_STEP_DEFAULT, JreLoadEnum(OrgApacheLuceneDocumentNumericField_DataType, LONG), min, max, minInclusive, maxInclusive);
}

OrgApacheLuceneSearchNumericRangeQuery *OrgApacheLuceneSearchNumericRangeQuery_newIntRangeWithNSString_withInt_withJavaLangInteger_withJavaLangInteger_withBoolean_withBoolean_(NSString *field, jint precisionStep, JavaLangInteger *min, JavaLangInteger *max, jboolean minInclusive, jboolean maxInclusive) {
  OrgApacheLuceneSearchNumericRangeQuery_initialize();
  return create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentNumericField_DataType_withNSNumber_withNSNumber_withBoolean_withBoolean_(field, precisionStep, JreLoadEnum(OrgApacheLuceneDocumentNumericField_DataType, INT), min, max, minInclusive, maxInclusive);
}

OrgApacheLuceneSearchNumericRangeQuery *OrgApacheLuceneSearchNumericRangeQuery_newIntRangeWithNSString_withJavaLangInteger_withJavaLangInteger_withBoolean_withBoolean_(NSString *field, JavaLangInteger *min, JavaLangInteger *max, jboolean minInclusive, jboolean maxInclusive) {
  OrgApacheLuceneSearchNumericRangeQuery_initialize();
  return create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentNumericField_DataType_withNSNumber_withNSNumber_withBoolean_withBoolean_(field, OrgApacheLuceneUtilNumericUtils_PRECISION_STEP_DEFAULT, JreLoadEnum(OrgApacheLuceneDocumentNumericField_DataType, INT), min, max, minInclusive, maxInclusive);
}

OrgApacheLuceneSearchNumericRangeQuery *OrgApacheLuceneSearchNumericRangeQuery_newDoubleRangeWithNSString_withInt_withJavaLangDouble_withJavaLangDouble_withBoolean_withBoolean_(NSString *field, jint precisionStep, JavaLangDouble *min, JavaLangDouble *max, jboolean minInclusive, jboolean maxInclusive) {
  OrgApacheLuceneSearchNumericRangeQuery_initialize();
  return create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentNumericField_DataType_withNSNumber_withNSNumber_withBoolean_withBoolean_(field, precisionStep, JreLoadEnum(OrgApacheLuceneDocumentNumericField_DataType, DOUBLE), min, max, minInclusive, maxInclusive);
}

OrgApacheLuceneSearchNumericRangeQuery *OrgApacheLuceneSearchNumericRangeQuery_newDoubleRangeWithNSString_withJavaLangDouble_withJavaLangDouble_withBoolean_withBoolean_(NSString *field, JavaLangDouble *min, JavaLangDouble *max, jboolean minInclusive, jboolean maxInclusive) {
  OrgApacheLuceneSearchNumericRangeQuery_initialize();
  return create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentNumericField_DataType_withNSNumber_withNSNumber_withBoolean_withBoolean_(field, OrgApacheLuceneUtilNumericUtils_PRECISION_STEP_DEFAULT, JreLoadEnum(OrgApacheLuceneDocumentNumericField_DataType, DOUBLE), min, max, minInclusive, maxInclusive);
}

OrgApacheLuceneSearchNumericRangeQuery *OrgApacheLuceneSearchNumericRangeQuery_newFloatRangeWithNSString_withInt_withJavaLangFloat_withJavaLangFloat_withBoolean_withBoolean_(NSString *field, jint precisionStep, JavaLangFloat *min, JavaLangFloat *max, jboolean minInclusive, jboolean maxInclusive) {
  OrgApacheLuceneSearchNumericRangeQuery_initialize();
  return create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentNumericField_DataType_withNSNumber_withNSNumber_withBoolean_withBoolean_(field, precisionStep, JreLoadEnum(OrgApacheLuceneDocumentNumericField_DataType, FLOAT), min, max, minInclusive, maxInclusive);
}

OrgApacheLuceneSearchNumericRangeQuery *OrgApacheLuceneSearchNumericRangeQuery_newFloatRangeWithNSString_withJavaLangFloat_withJavaLangFloat_withBoolean_withBoolean_(NSString *field, JavaLangFloat *min, JavaLangFloat *max, jboolean minInclusive, jboolean maxInclusive) {
  OrgApacheLuceneSearchNumericRangeQuery_initialize();
  return create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentNumericField_DataType_withNSNumber_withNSNumber_withBoolean_withBoolean_(field, OrgApacheLuceneUtilNumericUtils_PRECISION_STEP_DEFAULT, JreLoadEnum(OrgApacheLuceneDocumentNumericField_DataType, FLOAT), min, max, minInclusive, maxInclusive);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchNumericRangeQuery)

@implementation OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum

- (instancetype)initWithOrgApacheLuceneSearchNumericRangeQuery:(OrgApacheLuceneSearchNumericRangeQuery *)outer$
                           withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexIndexReader_(self, outer$, reader);
  return self;
}

- (jfloat)difference {
  return 1.0f;
}

- (jboolean)endEnum {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"not implemented");
}

- (void)setEnumWithOrgApacheLuceneIndexTermEnum:(OrgApacheLuceneIndexTermEnum *)tenum {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"not implemented");
}

- (jboolean)termCompareWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  return ([((OrgApacheLuceneIndexTerm *) nil_chk(term)) field] == this$0_->field_ && [((NSString *) nil_chk([term text])) compareToWithId:currentUpperBound_] <= 0);
}

- (jboolean)next {
  if (currentTerm_ != nil) {
    JreAssert((actualEnum_ != nil), (@"org/apache/lucene/search/NumericRangeQuery.java:544 condition failed: assert actualEnum != null;"));
    if ([((OrgApacheLuceneIndexTermEnum *) nil_chk(actualEnum_)) next]) {
      JreStrongAssign(&currentTerm_, [((OrgApacheLuceneIndexTermEnum *) nil_chk(actualEnum_)) term]);
      if ([self termCompareWithOrgApacheLuceneIndexTerm:currentTerm_]) return true;
    }
  }
  JreStrongAssign(&currentTerm_, nil);
  while ([((JavaUtilLinkedList *) nil_chk(rangeBounds_)) size] >= 2) {
    JreAssert(([rangeBounds_ size] % 2 == 0), (@"org/apache/lucene/search/NumericRangeQuery.java:556 condition failed: assert rangeBounds.size() % 2 == 0;"));
    if (actualEnum_ != nil) {
      [actualEnum_ close];
      JreStrongAssign(&actualEnum_, nil);
    }
    NSString *lowerBound = [rangeBounds_ removeFirst];
    JreStrongAssign(&self->currentUpperBound_, [rangeBounds_ removeFirst]);
    JreStrongAssign(&actualEnum_, [((OrgApacheLuceneIndexIndexReader *) nil_chk(reader_)) termsWithOrgApacheLuceneIndexTerm:[((OrgApacheLuceneIndexTerm *) nil_chk(termTemplate_)) createTermWithNSString:lowerBound]]);
    JreStrongAssign(&currentTerm_, [((OrgApacheLuceneIndexTermEnum *) nil_chk(actualEnum_)) term]);
    if (currentTerm_ != nil && [self termCompareWithOrgApacheLuceneIndexTerm:currentTerm_]) return true;
    JreStrongAssign(&currentTerm_, nil);
  }
  JreAssert(([rangeBounds_ size] == 0 && currentTerm_ == nil), (@"org/apache/lucene/search/NumericRangeQuery.java:574 condition failed: assert rangeBounds.size() == 0 && currentTerm == null;"));
  return false;
}

- (void)close {
  [((JavaUtilLinkedList *) nil_chk(rangeBounds_)) clear];
  JreStrongAssign(&currentUpperBound_, nil);
  [super close];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(reader_);
  RELEASE_(rangeBounds_);
  RELEASE_(termTemplate_);
  RELEASE_(currentUpperBound_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 4, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchNumericRangeQuery:withOrgApacheLuceneIndexIndexReader:);
  methods[1].selector = @selector(difference);
  methods[2].selector = @selector(endEnum);
  methods[3].selector = @selector(setEnumWithOrgApacheLuceneIndexTermEnum:);
  methods[4].selector = @selector(termCompareWithOrgApacheLuceneIndexTerm:);
  methods[5].selector = @selector(next);
  methods[6].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneSearchNumericRangeQuery;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
    { "reader_", "LOrgApacheLuceneIndexIndexReader;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "rangeBounds_", "LJavaUtilLinkedList;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
    { "termTemplate_", "LOrgApacheLuceneIndexTerm;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "currentUpperBound_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexIndexReader;", "LJavaIoIOException;", "setEnum", "LOrgApacheLuceneIndexTermEnum;", "termCompare", "LOrgApacheLuceneIndexTerm;", "Lorg/apache/lucene/search/NumericRangeQuery<TT;>;", "Ljava/util/LinkedList<Ljava/lang/String;>;", "LOrgApacheLuceneSearchNumericRangeQuery;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum = { "NumericRangeTermEnum", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x12, 7, 5, 8, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum;
}

@end

void OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *self, OrgApacheLuceneSearchNumericRangeQuery *outer$, OrgApacheLuceneIndexIndexReader *reader) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneSearchFilteredTermEnum_init(self);
  JreStrongAssignAndConsume(&self->rangeBounds_, new_JavaUtilLinkedList_init());
  JreStrongAssignAndConsume(&self->termTemplate_, new_OrgApacheLuceneIndexTerm_initWithNSString_(outer$->field_));
  JreStrongAssign(&self->currentUpperBound_, nil);
  JreStrongAssign(&self->reader_, reader);
  switch ([outer$->dataType_ ordinal]) {
    case OrgApacheLuceneDocumentNumericField_DataType_Enum_LONG:
    case OrgApacheLuceneDocumentNumericField_DataType_Enum_DOUBLE:
    {
      jlong minBound;
      if (outer$->dataType_ == JreLoadEnum(OrgApacheLuceneDocumentNumericField_DataType, LONG)) {
        minBound = (outer$->min_ == nil) ? JavaLangLong_MIN_VALUE : [((NSNumber *) nil_chk(outer$->min_)) longLongValue];
      }
      else {
        JreAssert((outer$->dataType_ == JreLoadEnum(OrgApacheLuceneDocumentNumericField_DataType, DOUBLE)), (@"org/apache/lucene/search/NumericRangeQuery.java:428 condition failed: assert dataType == DataType.DOUBLE;"));
        minBound = (outer$->min_ == nil) ? JreLoadStatic(OrgApacheLuceneSearchNumericRangeQuery, LONG_NEGATIVE_INFINITY) : OrgApacheLuceneUtilNumericUtils_doubleToSortableLongWithDouble_([((NSNumber *) nil_chk(outer$->min_)) doubleValue]);
      }
      if (!outer$->minInclusive_ && outer$->min_ != nil) {
        if (minBound == JavaLangLong_MAX_VALUE) break;
        minBound++;
      }
      jlong maxBound;
      if (outer$->dataType_ == JreLoadEnum(OrgApacheLuceneDocumentNumericField_DataType, LONG)) {
        maxBound = (outer$->max_ == nil) ? JavaLangLong_MAX_VALUE : [((NSNumber *) nil_chk(outer$->max_)) longLongValue];
      }
      else {
        JreAssert((outer$->dataType_ == JreLoadEnum(OrgApacheLuceneDocumentNumericField_DataType, DOUBLE)), (@"org/apache/lucene/search/NumericRangeQuery.java:442 condition failed: assert dataType == DataType.DOUBLE;"));
        maxBound = (outer$->max_ == nil) ? JreLoadStatic(OrgApacheLuceneSearchNumericRangeQuery, LONG_POSITIVE_INFINITY) : OrgApacheLuceneUtilNumericUtils_doubleToSortableLongWithDouble_([((NSNumber *) nil_chk(outer$->max_)) doubleValue]);
      }
      if (!outer$->maxInclusive_ && outer$->max_ != nil) {
        if (maxBound == JavaLangLong_MIN_VALUE) break;
        maxBound--;
      }
      OrgApacheLuceneUtilNumericUtils_splitLongRangeWithOrgApacheLuceneUtilNumericUtils_LongRangeBuilder_withInt_withLong_withLong_(create_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_(self), outer$->precisionStep_, minBound, maxBound);
      break;
    }
    case OrgApacheLuceneDocumentNumericField_DataType_Enum_INT:
    case OrgApacheLuceneDocumentNumericField_DataType_Enum_FLOAT:
    {
      jint minBound;
      if (outer$->dataType_ == JreLoadEnum(OrgApacheLuceneDocumentNumericField_DataType, INT)) {
        minBound = (outer$->min_ == nil) ? JavaLangInteger_MIN_VALUE : [((NSNumber *) nil_chk(outer$->min_)) intValue];
      }
      else {
        JreAssert((outer$->dataType_ == JreLoadEnum(OrgApacheLuceneDocumentNumericField_DataType, FLOAT)), (@"org/apache/lucene/search/NumericRangeQuery.java:468 condition failed: assert dataType == DataType.FLOAT;"));
        minBound = (outer$->min_ == nil) ? JreLoadStatic(OrgApacheLuceneSearchNumericRangeQuery, INT_NEGATIVE_INFINITY) : OrgApacheLuceneUtilNumericUtils_floatToSortableIntWithFloat_([((NSNumber *) nil_chk(outer$->min_)) floatValue]);
      }
      if (!outer$->minInclusive_ && outer$->min_ != nil) {
        if (minBound == JavaLangInteger_MAX_VALUE) break;
        minBound++;
      }
      jint maxBound;
      if (outer$->dataType_ == JreLoadEnum(OrgApacheLuceneDocumentNumericField_DataType, INT)) {
        maxBound = (outer$->max_ == nil) ? JavaLangInteger_MAX_VALUE : [((NSNumber *) nil_chk(outer$->max_)) intValue];
      }
      else {
        JreAssert((outer$->dataType_ == JreLoadEnum(OrgApacheLuceneDocumentNumericField_DataType, FLOAT)), (@"org/apache/lucene/search/NumericRangeQuery.java:482 condition failed: assert dataType == DataType.FLOAT;"));
        maxBound = (outer$->max_ == nil) ? JreLoadStatic(OrgApacheLuceneSearchNumericRangeQuery, INT_POSITIVE_INFINITY) : OrgApacheLuceneUtilNumericUtils_floatToSortableIntWithFloat_([((NSNumber *) nil_chk(outer$->max_)) floatValue]);
      }
      if (!outer$->maxInclusive_ && outer$->max_ != nil) {
        if (maxBound == JavaLangInteger_MIN_VALUE) break;
        maxBound--;
      }
      OrgApacheLuceneUtilNumericUtils_splitIntRangeWithOrgApacheLuceneUtilNumericUtils_IntRangeBuilder_withInt_withInt_withInt_(create_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_(self), outer$->precisionStep_, minBound, maxBound);
      break;
    }
    default:
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Invalid numeric DataType");
  }
  [self next];
}

OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *new_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneSearchNumericRangeQuery *outer$, OrgApacheLuceneIndexIndexReader *reader) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum, initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexIndexReader_, outer$, reader)
}

OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *create_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneSearchNumericRangeQuery *outer$, OrgApacheLuceneIndexIndexReader *reader) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum, initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexIndexReader_, outer$, reader)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum)

@implementation OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1

- (instancetype)initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum:(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *)outer$ {
  OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_(self, outer$);
  return self;
}

- (void)addRangeWithNSString:(NSString *)minPrefixCoded
                withNSString:(NSString *)maxPrefixCoded {
  [((JavaUtilLinkedList *) nil_chk(this$0_->rangeBounds_)) addWithId:minPrefixCoded];
  [this$0_->rangeBounds_ addWithId:maxPrefixCoded];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum:);
  methods[1].selector = @selector(addRangeWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "addRange", "LNSString;LNSString;", "LOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum;", "initWithOrgApacheLuceneSearchNumericRangeQuery:withOrgApacheLuceneIndexIndexReader:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1 = { "", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, 3, -1, -1 };
  return &_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1;
}

@end

void OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1 *self, OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneUtilNumericUtils_LongRangeBuilder_init(self);
}

OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1 *new_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1, initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_, outer$)
}

OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1 *create_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_1, initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_, outer$)
}

@implementation OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2

- (instancetype)initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum:(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *)outer$ {
  OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_(self, outer$);
  return self;
}

- (void)addRangeWithNSString:(NSString *)minPrefixCoded
                withNSString:(NSString *)maxPrefixCoded {
  [((JavaUtilLinkedList *) nil_chk(this$0_->rangeBounds_)) addWithId:minPrefixCoded];
  [this$0_->rangeBounds_ addWithId:maxPrefixCoded];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum:);
  methods[1].selector = @selector(addRangeWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "addRange", "LNSString;LNSString;", "LOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum;", "initWithOrgApacheLuceneSearchNumericRangeQuery:withOrgApacheLuceneIndexIndexReader:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2 = { "", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, 3, -1, -1 };
  return &_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2;
}

@end

void OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2 *self, OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneUtilNumericUtils_IntRangeBuilder_init(self);
}

OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2 *new_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2, initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_, outer$)
}

OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2 *create_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_2, initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermEnum_, outer$)
}
