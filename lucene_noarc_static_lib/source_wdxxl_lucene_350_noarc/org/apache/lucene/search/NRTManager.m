//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/search/NRTManager.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/Math.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "java/util/concurrent/CopyOnWriteArrayList.h"
#include "java/util/concurrent/ExecutorService.h"
#include "java/util/concurrent/TimeUnit.h"
#include "java/util/concurrent/atomic/AtomicLong.h"
#include "java/util/concurrent/locks/Condition.h"
#include "java/util/concurrent/locks/ReentrantLock.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/document/Document.h"
#include "org/apache/lucene/index/IndexWriter.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/search/NRTManager.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/SearcherManager.h"
#include "org/apache/lucene/search/SearcherWarmer.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/ThreadInterruptedException.h"

@interface OrgApacheLuceneSearchNRTManager () {
 @public
  OrgApacheLuceneIndexIndexWriter *writer_;
  OrgApacheLuceneSearchNRTManager_SearcherManagerRef *withoutDeletes_;
  OrgApacheLuceneSearchNRTManager_SearcherManagerRef *withDeletes_;
  JavaUtilConcurrentAtomicAtomicLong *indexingGen_;
  id<JavaUtilList> waitingListeners_;
  JavaUtilConcurrentLocksReentrantLock *reopenLock_;
  id<JavaUtilConcurrentLocksCondition> newGeneration_;
}

- (jboolean)waitOnGenConditionWithLong:(jlong)time
        withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchNRTManager, writer_, OrgApacheLuceneIndexIndexWriter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchNRTManager, withoutDeletes_, OrgApacheLuceneSearchNRTManager_SearcherManagerRef *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchNRTManager, withDeletes_, OrgApacheLuceneSearchNRTManager_SearcherManagerRef *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchNRTManager, indexingGen_, JavaUtilConcurrentAtomicAtomicLong *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchNRTManager, waitingListeners_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchNRTManager, reopenLock_, JavaUtilConcurrentLocksReentrantLock *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchNRTManager, newGeneration_, id<JavaUtilConcurrentLocksCondition>)

inline jlong OrgApacheLuceneSearchNRTManager_get_MAX_SEARCHER_GEN();
#define OrgApacheLuceneSearchNRTManager_MAX_SEARCHER_GEN 9223372036854775807LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneSearchNRTManager, MAX_SEARCHER_GEN, jlong)

__attribute__((unused)) static jboolean OrgApacheLuceneSearchNRTManager_waitOnGenConditionWithLong_withJavaUtilConcurrentTimeUnit_(OrgApacheLuceneSearchNRTManager *self, jlong time, JavaUtilConcurrentTimeUnit *unit);

@interface OrgApacheLuceneSearchNRTManager_WaitingListener : NSObject

@end

@implementation OrgApacheLuceneSearchNRTManager

- (instancetype)initWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer
                withOrgApacheLuceneSearchSearcherWarmer:(id<OrgApacheLuceneSearchSearcherWarmer>)warmer {
  OrgApacheLuceneSearchNRTManager_initWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneSearchSearcherWarmer_(self, writer, warmer);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer
                  withJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)es
                withOrgApacheLuceneSearchSearcherWarmer:(id<OrgApacheLuceneSearchSearcherWarmer>)warmer {
  OrgApacheLuceneSearchNRTManager_initWithOrgApacheLuceneIndexIndexWriter_withJavaUtilConcurrentExecutorService_withOrgApacheLuceneSearchSearcherWarmer_(self, writer, es, warmer);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer
                  withJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)es
                withOrgApacheLuceneSearchSearcherWarmer:(id<OrgApacheLuceneSearchSearcherWarmer>)warmer
                                            withBoolean:(jboolean)alwaysApplyDeletes {
  OrgApacheLuceneSearchNRTManager_initWithOrgApacheLuceneIndexIndexWriter_withJavaUtilConcurrentExecutorService_withOrgApacheLuceneSearchSearcherWarmer_withBoolean_(self, writer, es, warmer, alwaysApplyDeletes);
  return self;
}

- (void)addWaitingListenerWithOrgApacheLuceneSearchNRTManager_WaitingListener:(id<OrgApacheLuceneSearchNRTManager_WaitingListener>)l {
  [((id<JavaUtilList>) nil_chk(waitingListeners_)) addWithId:l];
}

- (void)removeWaitingListenerWithOrgApacheLuceneSearchNRTManager_WaitingListener:(id<OrgApacheLuceneSearchNRTManager_WaitingListener>)l {
  [((id<JavaUtilList>) nil_chk(waitingListeners_)) removeWithId:l];
}

- (jlong)updateDocumentWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)t
                withOrgApacheLuceneDocumentDocument:(OrgApacheLuceneDocumentDocument *)d
                withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)a {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) updateDocumentWithOrgApacheLuceneIndexTerm:t withOrgApacheLuceneDocumentDocument:d withOrgApacheLuceneAnalysisAnalyzer:a];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)updateDocumentWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)t
                withOrgApacheLuceneDocumentDocument:(OrgApacheLuceneDocumentDocument *)d {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) updateDocumentWithOrgApacheLuceneIndexTerm:t withOrgApacheLuceneDocumentDocument:d];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)updateDocumentsWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)t
                              withJavaUtilCollection:(id<JavaUtilCollection>)docs
                 withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)a {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) updateDocumentsWithOrgApacheLuceneIndexTerm:t withJavaUtilCollection:docs withOrgApacheLuceneAnalysisAnalyzer:a];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)updateDocumentsWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)t
                              withJavaUtilCollection:(id<JavaUtilCollection>)docs {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) updateDocumentsWithOrgApacheLuceneIndexTerm:t withJavaUtilCollection:docs];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)deleteDocumentsWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)t {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) deleteDocumentsWithOrgApacheLuceneIndexTerm:t];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)deleteDocumentsWithOrgApacheLuceneIndexTermArray:(IOSObjectArray *)terms {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) deleteDocumentsWithOrgApacheLuceneIndexTermArray:terms];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)deleteDocumentsWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)q {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) deleteDocumentsWithOrgApacheLuceneSearchQuery:q];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)deleteDocumentsWithOrgApacheLuceneSearchQueryArray:(IOSObjectArray *)queries {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) deleteDocumentsWithOrgApacheLuceneSearchQueryArray:queries];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)deleteAll {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) deleteAll];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)addDocumentWithOrgApacheLuceneDocumentDocument:(OrgApacheLuceneDocumentDocument *)d
                    withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)a {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) addDocumentWithOrgApacheLuceneDocumentDocument:d withOrgApacheLuceneAnalysisAnalyzer:a];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)addDocumentsWithJavaUtilCollection:(id<JavaUtilCollection>)docs
        withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)a {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) addDocumentsWithJavaUtilCollection:docs withOrgApacheLuceneAnalysisAnalyzer:a];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)addDocumentWithOrgApacheLuceneDocumentDocument:(OrgApacheLuceneDocumentDocument *)d {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) addDocumentWithOrgApacheLuceneDocumentDocument:d];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)addDocumentsWithJavaUtilCollection:(id<JavaUtilCollection>)docs {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) addDocumentsWithJavaUtilCollection:docs];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)addIndexesWithOrgApacheLuceneStoreDirectoryArray:(IOSObjectArray *)dirs {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) addIndexesWithOrgApacheLuceneStoreDirectoryArray:dirs];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)addIndexesWithOrgApacheLuceneIndexIndexReaderArray:(IOSObjectArray *)readers {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) addIndexesWithOrgApacheLuceneIndexIndexReaderArray:readers];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (OrgApacheLuceneSearchSearcherManager *)waitForGenerationWithLong:(jlong)targetGen
                                                        withBoolean:(jboolean)requireDeletes {
  return [self waitForGenerationWithLong:targetGen withBoolean:requireDeletes withLong:-1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, NANOSECONDS)];
}

- (OrgApacheLuceneSearchSearcherManager *)waitForGenerationWithLong:(jlong)targetGen
                                                        withBoolean:(jboolean)requireDeletes
                                                           withLong:(jlong)time
                                     withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  @try {
    jlong curGen = [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
    if (targetGen > curGen) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$J$JC", @"targetGen=", targetGen, @" was never returned by this NRTManager instance (current gen=", curGen, ')'));
    }
    [((JavaUtilConcurrentLocksReentrantLock *) nil_chk(reopenLock_)) lockInterruptibly];
    @try {
      if (targetGen > [self getCurrentSearchingGenWithBoolean:requireDeletes]) {
        for (id<OrgApacheLuceneSearchNRTManager_WaitingListener> __strong listener in nil_chk(waitingListeners_)) {
          [((id<OrgApacheLuceneSearchNRTManager_WaitingListener>) nil_chk(listener)) waitingWithBoolean:requireDeletes withLong:targetGen];
        }
        while (targetGen > [self getCurrentSearchingGenWithBoolean:requireDeletes]) {
          if (!OrgApacheLuceneSearchNRTManager_waitOnGenConditionWithLong_withJavaUtilConcurrentTimeUnit_(self, time, unit)) {
            return [self getSearcherManagerWithBoolean:requireDeletes];
          }
        }
      }
    }
    @finally {
      [reopenLock_ unlock];
    }
  }
  @catch (JavaLangInterruptedException *ie) {
    @throw create_OrgApacheLuceneUtilThreadInterruptedException_initWithJavaLangInterruptedException_(ie);
  }
  return [self getSearcherManagerWithBoolean:requireDeletes];
}

- (jboolean)waitOnGenConditionWithLong:(jlong)time
        withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return OrgApacheLuceneSearchNRTManager_waitOnGenConditionWithLong_withJavaUtilConcurrentTimeUnit_(self, time, unit);
}

- (jlong)getCurrentSearchingGenWithBoolean:(jboolean)applyAllDeletes {
  if (applyAllDeletes) {
    return JreLoadVolatileLong(&((OrgApacheLuceneSearchNRTManager_SearcherManagerRef *) nil_chk(withDeletes_))->generation_);
  }
  else {
    return JavaLangMath_maxWithLong_withLong_(JreLoadVolatileLong(&((OrgApacheLuceneSearchNRTManager_SearcherManagerRef *) nil_chk(withoutDeletes_))->generation_), JreLoadVolatileLong(&((OrgApacheLuceneSearchNRTManager_SearcherManagerRef *) nil_chk(withDeletes_))->generation_));
  }
}

- (jboolean)maybeReopenWithBoolean:(jboolean)applyAllDeletes {
  if ([((JavaUtilConcurrentLocksReentrantLock *) nil_chk(reopenLock_)) tryLock]) {
    @try {
      OrgApacheLuceneSearchNRTManager_SearcherManagerRef *reference = applyAllDeletes ? withDeletes_ : withoutDeletes_;
      jlong newSearcherGen = [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) getAndIncrement];
      jboolean setSearchGen = false;
      if (JreLoadVolatileLong(&reference->generation_) == OrgApacheLuceneSearchNRTManager_MAX_SEARCHER_GEN) {
        [((id<JavaUtilConcurrentLocksCondition>) nil_chk(newGeneration_)) signalAll];
        return false;
      }
      if (!(setSearchGen = [((OrgApacheLuceneSearchSearcherManager *) nil_chk(reference->manager_)) isSearcherCurrent])) {
        setSearchGen = [reference->manager_ maybeReopen];
      }
      if (setSearchGen) {
        JreAssignVolatileLong(&reference->generation_, newSearcherGen);
        [((id<JavaUtilConcurrentLocksCondition>) nil_chk(newGeneration_)) signalAll];
      }
      return setSearchGen;
    }
    @finally {
      [reopenLock_ unlock];
    }
  }
  return false;
}

- (void)close {
  [((JavaUtilConcurrentLocksReentrantLock *) nil_chk(reopenLock_)) lock];
  @try {
    @try {
      OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ withDeletes_, withoutDeletes_ } count:2 type:JavaIoCloseable_class_()]);
    }
    @finally {
      [((id<JavaUtilConcurrentLocksCondition>) nil_chk(newGeneration_)) signalAll];
    }
  }
  @finally {
    [reopenLock_ unlock];
    JreAssert((JreLoadVolatileLong(&((OrgApacheLuceneSearchNRTManager_SearcherManagerRef *) nil_chk(withDeletes_))->generation_) == OrgApacheLuceneSearchNRTManager_MAX_SEARCHER_GEN && JreLoadVolatileLong(&((OrgApacheLuceneSearchNRTManager_SearcherManagerRef *) nil_chk(withoutDeletes_))->generation_) == OrgApacheLuceneSearchNRTManager_MAX_SEARCHER_GEN), (@"org/apache/lucene/search/NRTManager.java:368 condition failed: assert withDeletes.generation == MAX_SEARCHER_GEN && withoutDeletes.generation == MAX_SEARCHER_GEN;"));
  }
}

- (OrgApacheLuceneSearchSearcherManager *)getSearcherManagerWithBoolean:(jboolean)applyAllDeletes {
  if (applyAllDeletes) {
    return ((OrgApacheLuceneSearchNRTManager_SearcherManagerRef *) nil_chk(withDeletes_))->manager_;
  }
  else {
    if (JreLoadVolatileLong(&((OrgApacheLuceneSearchNRTManager_SearcherManagerRef *) nil_chk(withDeletes_))->generation_) > JreLoadVolatileLong(&((OrgApacheLuceneSearchNRTManager_SearcherManagerRef *) nil_chk(withoutDeletes_))->generation_)) {
      return withDeletes_->manager_;
    }
    else {
      return withoutDeletes_->manager_;
    }
  }
}

- (void)dealloc {
  RELEASE_(writer_);
  RELEASE_(withoutDeletes_);
  RELEASE_(withDeletes_);
  RELEASE_(indexingGen_);
  RELEASE_(waitingListeners_);
  RELEASE_(reopenLock_);
  RELEASE_(newGeneration_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 7, 8, 1, -1, -1, -1 },
    { NULL, "J", 0x1, 7, 9, 1, -1, -1, -1 },
    { NULL, "J", 0x1, 10, 11, 1, 12, -1, -1 },
    { NULL, "J", 0x1, 10, 13, 1, 14, -1, -1 },
    { NULL, "J", 0x1, 15, 16, 1, -1, -1, -1 },
    { NULL, "J", 0x81, 15, 17, 1, -1, -1, -1 },
    { NULL, "J", 0x1, 15, 18, 1, -1, -1, -1 },
    { NULL, "J", 0x81, 15, 19, 1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "J", 0x1, 20, 21, 1, -1, -1, -1 },
    { NULL, "J", 0x1, 22, 23, 1, 24, -1, -1 },
    { NULL, "J", 0x1, 20, 25, 1, -1, -1, -1 },
    { NULL, "J", 0x1, 22, 26, 1, 27, -1, -1 },
    { NULL, "J", 0x81, 28, 29, 30, -1, -1, -1 },
    { NULL, "J", 0x81, 28, 31, 30, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchSearcherManager;", 0x1, 32, 33, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchSearcherManager;", 0x1, 32, 34, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 35, 36, 37, -1, -1, -1 },
    { NULL, "J", 0x1, 38, 39, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 40, 39, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchSearcherManager;", 0x1, 41, 39, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexIndexWriter:withOrgApacheLuceneSearchSearcherWarmer:);
  methods[1].selector = @selector(initWithOrgApacheLuceneIndexIndexWriter:withJavaUtilConcurrentExecutorService:withOrgApacheLuceneSearchSearcherWarmer:);
  methods[2].selector = @selector(initWithOrgApacheLuceneIndexIndexWriter:withJavaUtilConcurrentExecutorService:withOrgApacheLuceneSearchSearcherWarmer:withBoolean:);
  methods[3].selector = @selector(addWaitingListenerWithOrgApacheLuceneSearchNRTManager_WaitingListener:);
  methods[4].selector = @selector(removeWaitingListenerWithOrgApacheLuceneSearchNRTManager_WaitingListener:);
  methods[5].selector = @selector(updateDocumentWithOrgApacheLuceneIndexTerm:withOrgApacheLuceneDocumentDocument:withOrgApacheLuceneAnalysisAnalyzer:);
  methods[6].selector = @selector(updateDocumentWithOrgApacheLuceneIndexTerm:withOrgApacheLuceneDocumentDocument:);
  methods[7].selector = @selector(updateDocumentsWithOrgApacheLuceneIndexTerm:withJavaUtilCollection:withOrgApacheLuceneAnalysisAnalyzer:);
  methods[8].selector = @selector(updateDocumentsWithOrgApacheLuceneIndexTerm:withJavaUtilCollection:);
  methods[9].selector = @selector(deleteDocumentsWithOrgApacheLuceneIndexTerm:);
  methods[10].selector = @selector(deleteDocumentsWithOrgApacheLuceneIndexTermArray:);
  methods[11].selector = @selector(deleteDocumentsWithOrgApacheLuceneSearchQuery:);
  methods[12].selector = @selector(deleteDocumentsWithOrgApacheLuceneSearchQueryArray:);
  methods[13].selector = @selector(deleteAll);
  methods[14].selector = @selector(addDocumentWithOrgApacheLuceneDocumentDocument:withOrgApacheLuceneAnalysisAnalyzer:);
  methods[15].selector = @selector(addDocumentsWithJavaUtilCollection:withOrgApacheLuceneAnalysisAnalyzer:);
  methods[16].selector = @selector(addDocumentWithOrgApacheLuceneDocumentDocument:);
  methods[17].selector = @selector(addDocumentsWithJavaUtilCollection:);
  methods[18].selector = @selector(addIndexesWithOrgApacheLuceneStoreDirectoryArray:);
  methods[19].selector = @selector(addIndexesWithOrgApacheLuceneIndexIndexReaderArray:);
  methods[20].selector = @selector(waitForGenerationWithLong:withBoolean:);
  methods[21].selector = @selector(waitForGenerationWithLong:withBoolean:withLong:withJavaUtilConcurrentTimeUnit:);
  methods[22].selector = @selector(waitOnGenConditionWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[23].selector = @selector(getCurrentSearchingGenWithBoolean:);
  methods[24].selector = @selector(maybeReopenWithBoolean:);
  methods[25].selector = @selector(close);
  methods[26].selector = @selector(getSearcherManagerWithBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_SEARCHER_GEN", "J", .constantValue.asLong = OrgApacheLuceneSearchNRTManager_MAX_SEARCHER_GEN, 0x1a, -1, -1, -1, -1 },
    { "writer_", "LOrgApacheLuceneIndexIndexWriter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "withoutDeletes_", "LOrgApacheLuceneSearchNRTManager_SearcherManagerRef;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "withDeletes_", "LOrgApacheLuceneSearchNRTManager_SearcherManagerRef;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "indexingGen_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "waitingListeners_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 42, -1 },
    { "reopenLock_", "LJavaUtilConcurrentLocksReentrantLock;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "newGeneration_", "LJavaUtilConcurrentLocksCondition;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexIndexWriter;LOrgApacheLuceneSearchSearcherWarmer;", "LJavaIoIOException;", "LOrgApacheLuceneIndexIndexWriter;LJavaUtilConcurrentExecutorService;LOrgApacheLuceneSearchSearcherWarmer;", "LOrgApacheLuceneIndexIndexWriter;LJavaUtilConcurrentExecutorService;LOrgApacheLuceneSearchSearcherWarmer;Z", "addWaitingListener", "LOrgApacheLuceneSearchNRTManager_WaitingListener;", "removeWaitingListener", "updateDocument", "LOrgApacheLuceneIndexTerm;LOrgApacheLuceneDocumentDocument;LOrgApacheLuceneAnalysisAnalyzer;", "LOrgApacheLuceneIndexTerm;LOrgApacheLuceneDocumentDocument;", "updateDocuments", "LOrgApacheLuceneIndexTerm;LJavaUtilCollection;LOrgApacheLuceneAnalysisAnalyzer;", "(Lorg/apache/lucene/index/Term;Ljava/util/Collection<Lorg/apache/lucene/document/Document;>;Lorg/apache/lucene/analysis/Analyzer;)J", "LOrgApacheLuceneIndexTerm;LJavaUtilCollection;", "(Lorg/apache/lucene/index/Term;Ljava/util/Collection<Lorg/apache/lucene/document/Document;>;)J", "deleteDocuments", "LOrgApacheLuceneIndexTerm;", "[LOrgApacheLuceneIndexTerm;", "LOrgApacheLuceneSearchQuery;", "[LOrgApacheLuceneSearchQuery;", "addDocument", "LOrgApacheLuceneDocumentDocument;LOrgApacheLuceneAnalysisAnalyzer;", "addDocuments", "LJavaUtilCollection;LOrgApacheLuceneAnalysisAnalyzer;", "(Ljava/util/Collection<Lorg/apache/lucene/document/Document;>;Lorg/apache/lucene/analysis/Analyzer;)J", "LOrgApacheLuceneDocumentDocument;", "LJavaUtilCollection;", "(Ljava/util/Collection<Lorg/apache/lucene/document/Document;>;)J", "addIndexes", "[LOrgApacheLuceneStoreDirectory;", "LOrgApacheLuceneIndexCorruptIndexException;LJavaIoIOException;", "[LOrgApacheLuceneIndexIndexReader;", "waitForGeneration", "JZ", "JZJLJavaUtilConcurrentTimeUnit;", "waitOnGenCondition", "JLJavaUtilConcurrentTimeUnit;", "LJavaLangInterruptedException;", "getCurrentSearchingGen", "Z", "maybeReopen", "getSearcherManager", "Ljava/util/List<Lorg/apache/lucene/search/NRTManager$WaitingListener;>;", "LOrgApacheLuceneSearchNRTManager_WaitingListener;LOrgApacheLuceneSearchNRTManager_SearcherManagerRef;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchNRTManager = { "NRTManager", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x1, 27, 8, -1, 43, -1, -1, -1 };
  return &_OrgApacheLuceneSearchNRTManager;
}

@end

void OrgApacheLuceneSearchNRTManager_initWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneSearchSearcherWarmer_(OrgApacheLuceneSearchNRTManager *self, OrgApacheLuceneIndexIndexWriter *writer, id<OrgApacheLuceneSearchSearcherWarmer> warmer) {
  OrgApacheLuceneSearchNRTManager_initWithOrgApacheLuceneIndexIndexWriter_withJavaUtilConcurrentExecutorService_withOrgApacheLuceneSearchSearcherWarmer_withBoolean_(self, writer, nil, warmer, true);
}

OrgApacheLuceneSearchNRTManager *new_OrgApacheLuceneSearchNRTManager_initWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneSearchSearcherWarmer_(OrgApacheLuceneIndexIndexWriter *writer, id<OrgApacheLuceneSearchSearcherWarmer> warmer) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchNRTManager, initWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneSearchSearcherWarmer_, writer, warmer)
}

OrgApacheLuceneSearchNRTManager *create_OrgApacheLuceneSearchNRTManager_initWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneSearchSearcherWarmer_(OrgApacheLuceneIndexIndexWriter *writer, id<OrgApacheLuceneSearchSearcherWarmer> warmer) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchNRTManager, initWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneSearchSearcherWarmer_, writer, warmer)
}

void OrgApacheLuceneSearchNRTManager_initWithOrgApacheLuceneIndexIndexWriter_withJavaUtilConcurrentExecutorService_withOrgApacheLuceneSearchSearcherWarmer_(OrgApacheLuceneSearchNRTManager *self, OrgApacheLuceneIndexIndexWriter *writer, id<JavaUtilConcurrentExecutorService> es, id<OrgApacheLuceneSearchSearcherWarmer> warmer) {
  OrgApacheLuceneSearchNRTManager_initWithOrgApacheLuceneIndexIndexWriter_withJavaUtilConcurrentExecutorService_withOrgApacheLuceneSearchSearcherWarmer_withBoolean_(self, writer, es, warmer, true);
}

OrgApacheLuceneSearchNRTManager *new_OrgApacheLuceneSearchNRTManager_initWithOrgApacheLuceneIndexIndexWriter_withJavaUtilConcurrentExecutorService_withOrgApacheLuceneSearchSearcherWarmer_(OrgApacheLuceneIndexIndexWriter *writer, id<JavaUtilConcurrentExecutorService> es, id<OrgApacheLuceneSearchSearcherWarmer> warmer) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchNRTManager, initWithOrgApacheLuceneIndexIndexWriter_withJavaUtilConcurrentExecutorService_withOrgApacheLuceneSearchSearcherWarmer_, writer, es, warmer)
}

OrgApacheLuceneSearchNRTManager *create_OrgApacheLuceneSearchNRTManager_initWithOrgApacheLuceneIndexIndexWriter_withJavaUtilConcurrentExecutorService_withOrgApacheLuceneSearchSearcherWarmer_(OrgApacheLuceneIndexIndexWriter *writer, id<JavaUtilConcurrentExecutorService> es, id<OrgApacheLuceneSearchSearcherWarmer> warmer) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchNRTManager, initWithOrgApacheLuceneIndexIndexWriter_withJavaUtilConcurrentExecutorService_withOrgApacheLuceneSearchSearcherWarmer_, writer, es, warmer)
}

void OrgApacheLuceneSearchNRTManager_initWithOrgApacheLuceneIndexIndexWriter_withJavaUtilConcurrentExecutorService_withOrgApacheLuceneSearchSearcherWarmer_withBoolean_(OrgApacheLuceneSearchNRTManager *self, OrgApacheLuceneIndexIndexWriter *writer, id<JavaUtilConcurrentExecutorService> es, id<OrgApacheLuceneSearchSearcherWarmer> warmer, jboolean alwaysApplyDeletes) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->waitingListeners_, new_JavaUtilConcurrentCopyOnWriteArrayList_init());
  JreStrongAssignAndConsume(&self->reopenLock_, new_JavaUtilConcurrentLocksReentrantLock_init());
  JreStrongAssign(&self->newGeneration_, [self->reopenLock_ newCondition]);
  JreStrongAssign(&self->writer_, writer);
  if (alwaysApplyDeletes) {
    JreStrongAssign(&self->withoutDeletes_, JreStrongAssignAndConsume(&self->withDeletes_, new_OrgApacheLuceneSearchNRTManager_SearcherManagerRef_initWithBoolean_withLong_withOrgApacheLuceneSearchSearcherManager_(true, 0, create_OrgApacheLuceneSearchSearcherManager_initWithOrgApacheLuceneIndexIndexWriter_withBoolean_withOrgApacheLuceneSearchSearcherWarmer_withJavaUtilConcurrentExecutorService_(writer, true, warmer, es))));
  }
  else {
    JreStrongAssignAndConsume(&self->withDeletes_, new_OrgApacheLuceneSearchNRTManager_SearcherManagerRef_initWithBoolean_withLong_withOrgApacheLuceneSearchSearcherManager_(true, 0, create_OrgApacheLuceneSearchSearcherManager_initWithOrgApacheLuceneIndexIndexWriter_withBoolean_withOrgApacheLuceneSearchSearcherWarmer_withJavaUtilConcurrentExecutorService_(writer, true, warmer, es)));
    JreStrongAssignAndConsume(&self->withoutDeletes_, new_OrgApacheLuceneSearchNRTManager_SearcherManagerRef_initWithBoolean_withLong_withOrgApacheLuceneSearchSearcherManager_(false, 0, create_OrgApacheLuceneSearchSearcherManager_initWithOrgApacheLuceneIndexIndexWriter_withBoolean_withOrgApacheLuceneSearchSearcherWarmer_withJavaUtilConcurrentExecutorService_(writer, false, warmer, es)));
  }
  JreStrongAssignAndConsume(&self->indexingGen_, new_JavaUtilConcurrentAtomicAtomicLong_initWithLong_(1));
}

OrgApacheLuceneSearchNRTManager *new_OrgApacheLuceneSearchNRTManager_initWithOrgApacheLuceneIndexIndexWriter_withJavaUtilConcurrentExecutorService_withOrgApacheLuceneSearchSearcherWarmer_withBoolean_(OrgApacheLuceneIndexIndexWriter *writer, id<JavaUtilConcurrentExecutorService> es, id<OrgApacheLuceneSearchSearcherWarmer> warmer, jboolean alwaysApplyDeletes) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchNRTManager, initWithOrgApacheLuceneIndexIndexWriter_withJavaUtilConcurrentExecutorService_withOrgApacheLuceneSearchSearcherWarmer_withBoolean_, writer, es, warmer, alwaysApplyDeletes)
}

OrgApacheLuceneSearchNRTManager *create_OrgApacheLuceneSearchNRTManager_initWithOrgApacheLuceneIndexIndexWriter_withJavaUtilConcurrentExecutorService_withOrgApacheLuceneSearchSearcherWarmer_withBoolean_(OrgApacheLuceneIndexIndexWriter *writer, id<JavaUtilConcurrentExecutorService> es, id<OrgApacheLuceneSearchSearcherWarmer> warmer, jboolean alwaysApplyDeletes) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchNRTManager, initWithOrgApacheLuceneIndexIndexWriter_withJavaUtilConcurrentExecutorService_withOrgApacheLuceneSearchSearcherWarmer_withBoolean_, writer, es, warmer, alwaysApplyDeletes)
}

jboolean OrgApacheLuceneSearchNRTManager_waitOnGenConditionWithLong_withJavaUtilConcurrentTimeUnit_(OrgApacheLuceneSearchNRTManager *self, jlong time, JavaUtilConcurrentTimeUnit *unit) {
  JreAssert(([((JavaUtilConcurrentLocksReentrantLock *) nil_chk(self->reopenLock_)) isHeldByCurrentThread]), (@"org/apache/lucene/search/NRTManager.java:306 condition failed: assert reopenLock.isHeldByCurrentThread();"));
  if (time < 0) {
    [((id<JavaUtilConcurrentLocksCondition>) nil_chk(self->newGeneration_)) await];
    return true;
  }
  else {
    return [((id<JavaUtilConcurrentLocksCondition>) nil_chk(self->newGeneration_)) awaitWithLong:time withJavaUtilConcurrentTimeUnit:unit];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchNRTManager)

@implementation OrgApacheLuceneSearchNRTManager_WaitingListener

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(waitingWithBoolean:withLong:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "waiting", "ZJ", "LOrgApacheLuceneSearchNRTManager;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchNRTManager_WaitingListener = { "WaitingListener", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0x609, 1, 0, 2, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchNRTManager_WaitingListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchNRTManager_WaitingListener)

@implementation OrgApacheLuceneSearchNRTManager_SearcherManagerRef

- (instancetype)initWithBoolean:(jboolean)applyDeletes
                       withLong:(jlong)generation
withOrgApacheLuceneSearchSearcherManager:(OrgApacheLuceneSearchSearcherManager *)manager {
  OrgApacheLuceneSearchNRTManager_SearcherManagerRef_initWithBoolean_withLong_withOrgApacheLuceneSearchSearcherManager_(self, applyDeletes, generation, manager);
  return self;
}

- (void)close {
  JreAssignVolatileLong(&generation_, OrgApacheLuceneSearchNRTManager_MAX_SEARCHER_GEN);
  [((OrgApacheLuceneSearchSearcherManager *) nil_chk(manager_)) close];
}

- (void)dealloc {
  RELEASE_(manager_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithBoolean:withLong:withOrgApacheLuceneSearchSearcherManager:);
  methods[1].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "applyDeletes_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "generation_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "manager_", "LOrgApacheLuceneSearchSearcherManager;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ZJLOrgApacheLuceneSearchSearcherManager;", "LJavaIoIOException;", "LOrgApacheLuceneSearchNRTManager;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchNRTManager_SearcherManagerRef = { "SearcherManagerRef", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x18, 2, 3, 2, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchNRTManager_SearcherManagerRef;
}

@end

void OrgApacheLuceneSearchNRTManager_SearcherManagerRef_initWithBoolean_withLong_withOrgApacheLuceneSearchSearcherManager_(OrgApacheLuceneSearchNRTManager_SearcherManagerRef *self, jboolean applyDeletes, jlong generation, OrgApacheLuceneSearchSearcherManager *manager) {
  NSObject_init(self);
  self->applyDeletes_ = applyDeletes;
  JreAssignVolatileLong(&self->generation_, generation);
  JreStrongAssign(&self->manager_, manager);
}

OrgApacheLuceneSearchNRTManager_SearcherManagerRef *new_OrgApacheLuceneSearchNRTManager_SearcherManagerRef_initWithBoolean_withLong_withOrgApacheLuceneSearchSearcherManager_(jboolean applyDeletes, jlong generation, OrgApacheLuceneSearchSearcherManager *manager) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchNRTManager_SearcherManagerRef, initWithBoolean_withLong_withOrgApacheLuceneSearchSearcherManager_, applyDeletes, generation, manager)
}

OrgApacheLuceneSearchNRTManager_SearcherManagerRef *create_OrgApacheLuceneSearchNRTManager_SearcherManagerRef_initWithBoolean_withLong_withOrgApacheLuceneSearchSearcherManager_(jboolean applyDeletes, jlong generation, OrgApacheLuceneSearchSearcherManager *manager) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchNRTManager_SearcherManagerRef, initWithBoolean_withLong_withOrgApacheLuceneSearchSearcherManager_, applyDeletes, generation, manager)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchNRTManager_SearcherManagerRef)
