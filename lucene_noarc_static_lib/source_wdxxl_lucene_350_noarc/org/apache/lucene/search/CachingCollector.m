//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/search/CachingCollector.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/search/CachingCollector.h"
#include "org/apache/lucene/search/Collector.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"

@interface OrgApacheLuceneSearchCachingCollector () {
 @public
  OrgApacheLuceneIndexIndexReader *lastReader_;
}

- (instancetype)initWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other
                                            withDouble:(jdouble)maxRAMMB
                                           withBoolean:(jboolean)cacheScores;

- (instancetype)initWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other
                                               withInt:(jint)maxDocsToCache;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchCachingCollector, lastReader_, OrgApacheLuceneIndexIndexReader *)

inline jint OrgApacheLuceneSearchCachingCollector_get_MAX_ARRAY_SIZE();
#define OrgApacheLuceneSearchCachingCollector_MAX_ARRAY_SIZE 524288
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneSearchCachingCollector, MAX_ARRAY_SIZE, jint)

inline jint OrgApacheLuceneSearchCachingCollector_get_INITIAL_ARRAY_SIZE();
#define OrgApacheLuceneSearchCachingCollector_INITIAL_ARRAY_SIZE 128
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneSearchCachingCollector, INITIAL_ARRAY_SIZE, jint)

inline IOSIntArray *OrgApacheLuceneSearchCachingCollector_get_EMPTY_INT_ARRAY();
static IOSIntArray *OrgApacheLuceneSearchCachingCollector_EMPTY_INT_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneSearchCachingCollector, EMPTY_INT_ARRAY, IOSIntArray *)

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_withBoolean_(OrgApacheLuceneSearchCachingCollector *self, OrgApacheLuceneSearchCollector *other, jdouble maxRAMMB, jboolean cacheScores);

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCachingCollector *self, OrgApacheLuceneSearchCollector *other, jint maxDocsToCache);

@interface OrgApacheLuceneSearchCachingCollector_SegStart : NSObject {
 @public
  OrgApacheLuceneIndexIndexReader *reader_;
  jint base_;
  jint end_;
}

- (instancetype)initWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                withInt:(jint)base
                                                withInt:(jint)end;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchCachingCollector_SegStart)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchCachingCollector_SegStart, reader_, OrgApacheLuceneIndexIndexReader *)

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_SegStart_initWithOrgApacheLuceneIndexIndexReader_withInt_withInt_(OrgApacheLuceneSearchCachingCollector_SegStart *self, OrgApacheLuceneIndexIndexReader *reader, jint base, jint end);

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_SegStart *new_OrgApacheLuceneSearchCachingCollector_SegStart_initWithOrgApacheLuceneIndexIndexReader_withInt_withInt_(OrgApacheLuceneIndexIndexReader *reader, jint base, jint end) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_SegStart *create_OrgApacheLuceneSearchCachingCollector_SegStart_initWithOrgApacheLuceneIndexIndexReader_withInt_withInt_(OrgApacheLuceneIndexIndexReader *reader, jint base, jint end);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchCachingCollector_SegStart)

@interface OrgApacheLuceneSearchCachingCollector_CachedScorer : OrgApacheLuceneSearchScorer {
 @public
  jint doc_;
  jfloat score_;
}

- (instancetype)init;

- (jfloat)score;

- (jint)advanceWithInt:(jint)target;

- (jint)docID;

- (jfloat)freq;

- (jint)nextDoc;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchCachingCollector_CachedScorer)

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_CachedScorer_init(OrgApacheLuceneSearchCachingCollector_CachedScorer *self);

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_CachedScorer *new_OrgApacheLuceneSearchCachingCollector_CachedScorer_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_CachedScorer *create_OrgApacheLuceneSearchCachingCollector_CachedScorer_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchCachingCollector_CachedScorer)

@interface OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector : OrgApacheLuceneSearchCachingCollector {
 @public
  OrgApacheLuceneSearchCachingCollector_CachedScorer *cachedScorer_;
  id<JavaUtilList> cachedScores_;
  OrgApacheLuceneSearchScorer *scorer_;
  IOSFloatArray *curScores_;
}

- (instancetype)initWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other
                                            withDouble:(jdouble)maxRAMMB;

- (instancetype)initWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other
                                               withInt:(jint)maxDocsToCache;

- (void)collectWithInt:(jint)doc;

- (void)replayWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other;

- (void)setScorerWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)scorer;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector, cachedScorer_, OrgApacheLuceneSearchCachingCollector_CachedScorer *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector, cachedScores_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector, scorer_, OrgApacheLuceneSearchScorer *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector, curScores_, IOSFloatArray *)

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector *self, OrgApacheLuceneSearchCollector *other, jdouble maxRAMMB);

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector *new_OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_(OrgApacheLuceneSearchCollector *other, jdouble maxRAMMB) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector *create_OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_(OrgApacheLuceneSearchCollector *other, jdouble maxRAMMB);

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector *self, OrgApacheLuceneSearchCollector *other, jint maxDocsToCache);

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector *new_OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCollector *other, jint maxDocsToCache) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector *create_OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCollector *other, jint maxDocsToCache);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector)

@interface OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector : OrgApacheLuceneSearchCachingCollector

- (instancetype)initWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other
                                            withDouble:(jdouble)maxRAMMB;

- (instancetype)initWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other
                                               withInt:(jint)maxDocsToCache;

- (void)collectWithInt:(jint)doc;

- (void)replayWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other;

- (void)setScorerWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)scorer;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector)

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *self, OrgApacheLuceneSearchCollector *other, jdouble maxRAMMB);

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *new_OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_(OrgApacheLuceneSearchCollector *other, jdouble maxRAMMB) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *create_OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_(OrgApacheLuceneSearchCollector *other, jdouble maxRAMMB);

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *self, OrgApacheLuceneSearchCollector *other, jint maxDocsToCache);

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *new_OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCollector *other, jint maxDocsToCache) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *create_OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCollector *other, jint maxDocsToCache);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector)

@interface OrgApacheLuceneSearchCachingCollector_1 : OrgApacheLuceneSearchCollector {
 @public
  jboolean val$acceptDocsOutOfOrder_;
}

- (instancetype)initWithBoolean:(jboolean)capture$0;

- (jboolean)acceptsDocsOutOfOrder;

- (void)setScorerWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)scorer;

- (void)collectWithInt:(jint)doc;

- (void)setNextReaderWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                 withInt:(jint)docBase;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchCachingCollector_1)

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_1_initWithBoolean_(OrgApacheLuceneSearchCachingCollector_1 *self, jboolean capture$0);

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_1 *new_OrgApacheLuceneSearchCachingCollector_1_initWithBoolean_(jboolean capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_1 *create_OrgApacheLuceneSearchCachingCollector_1_initWithBoolean_(jboolean capture$0);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchCachingCollector)

@implementation OrgApacheLuceneSearchCachingCollector

+ (OrgApacheLuceneSearchCachingCollector *)createWithBoolean:(jboolean)acceptDocsOutOfOrder
                                                 withBoolean:(jboolean)cacheScores
                                                  withDouble:(jdouble)maxRAMMB {
  return OrgApacheLuceneSearchCachingCollector_createWithBoolean_withBoolean_withDouble_(acceptDocsOutOfOrder, cacheScores, maxRAMMB);
}

+ (OrgApacheLuceneSearchCachingCollector *)createWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other
                                                                        withBoolean:(jboolean)cacheScores
                                                                         withDouble:(jdouble)maxRAMMB {
  return OrgApacheLuceneSearchCachingCollector_createWithOrgApacheLuceneSearchCollector_withBoolean_withDouble_(other, cacheScores, maxRAMMB);
}

+ (OrgApacheLuceneSearchCachingCollector *)createWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other
                                                                        withBoolean:(jboolean)cacheScores
                                                                            withInt:(jint)maxDocsToCache {
  return OrgApacheLuceneSearchCachingCollector_createWithOrgApacheLuceneSearchCollector_withBoolean_withInt_(other, cacheScores, maxDocsToCache);
}

- (instancetype)initWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other
                                            withDouble:(jdouble)maxRAMMB
                                           withBoolean:(jboolean)cacheScores {
  OrgApacheLuceneSearchCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_withBoolean_(self, other, maxRAMMB, cacheScores);
  return self;
}

- (instancetype)initWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other
                                               withInt:(jint)maxDocsToCache {
  OrgApacheLuceneSearchCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(self, other, maxDocsToCache);
  return self;
}

- (jboolean)acceptsDocsOutOfOrder {
  return [((OrgApacheLuceneSearchCollector *) nil_chk(other_)) acceptsDocsOutOfOrder];
}

- (jboolean)isCached {
  return curDocs_ != nil;
}

- (void)setNextReaderWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                 withInt:(jint)docBase {
  [((OrgApacheLuceneSearchCollector *) nil_chk(other_)) setNextReaderWithOrgApacheLuceneIndexIndexReader:reader withInt:docBase];
  if (lastReader_ != nil) {
    [((id<JavaUtilList>) nil_chk(cachedSegs_)) addWithId:create_OrgApacheLuceneSearchCachingCollector_SegStart_initWithOrgApacheLuceneIndexIndexReader_withInt_withInt_(lastReader_, lastDocBase_, base_ + upto_)];
  }
  lastDocBase_ = docBase;
  JreStrongAssign(&lastReader_, reader);
}

- (void)replayInitWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other {
  if (![self isCached]) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"cannot replay: cache was cleared because too much RAM was required");
  }
  if (![((OrgApacheLuceneSearchCollector *) nil_chk(other)) acceptsDocsOutOfOrder] && [((OrgApacheLuceneSearchCollector *) nil_chk(self->other_)) acceptsDocsOutOfOrder]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"cannot replay: given collector does not support out-of-order collection, while the wrapped collector does. Therefore cached documents may be out-of-order.");
  }
  if (lastReader_ != nil) {
    [((id<JavaUtilList>) nil_chk(cachedSegs_)) addWithId:create_OrgApacheLuceneSearchCachingCollector_SegStart_initWithOrgApacheLuceneIndexIndexReader_withInt_withInt_(lastReader_, lastDocBase_, base_ + upto_)];
    JreStrongAssign(&lastReader_, nil);
  }
}

- (void)replayWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)dealloc {
  RELEASE_(other_);
  RELEASE_(cachedSegs_);
  RELEASE_(cachedDocs_);
  RELEASE_(lastReader_);
  RELEASE_(curDocs_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgApacheLuceneSearchCachingCollector;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchCachingCollector;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchCachingCollector;", 0x9, 0, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, 8, -1, -1, -1 },
    { NULL, "V", 0x0, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 11, 10, 8, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(createWithBoolean:withBoolean:withDouble:);
  methods[1].selector = @selector(createWithOrgApacheLuceneSearchCollector:withBoolean:withDouble:);
  methods[2].selector = @selector(createWithOrgApacheLuceneSearchCollector:withBoolean:withInt:);
  methods[3].selector = @selector(initWithOrgApacheLuceneSearchCollector:withDouble:withBoolean:);
  methods[4].selector = @selector(initWithOrgApacheLuceneSearchCollector:withInt:);
  methods[5].selector = @selector(acceptsDocsOutOfOrder);
  methods[6].selector = @selector(isCached);
  methods[7].selector = @selector(setNextReaderWithOrgApacheLuceneIndexIndexReader:withInt:);
  methods[8].selector = @selector(replayInitWithOrgApacheLuceneSearchCollector:);
  methods[9].selector = @selector(replayWithOrgApacheLuceneSearchCollector:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_ARRAY_SIZE", "I", .constantValue.asInt = OrgApacheLuceneSearchCachingCollector_MAX_ARRAY_SIZE, 0x1a, -1, -1, -1, -1 },
    { "INITIAL_ARRAY_SIZE", "I", .constantValue.asInt = OrgApacheLuceneSearchCachingCollector_INITIAL_ARRAY_SIZE, 0x1a, -1, -1, -1, -1 },
    { "EMPTY_INT_ARRAY", "[I", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
    { "other_", "LOrgApacheLuceneSearchCollector;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "maxDocsToCache_", "I", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "cachedSegs_", "LJavaUtilList;", .constantValue.asLong = 0, 0x14, -1, -1, 13, -1 },
    { "cachedDocs_", "LJavaUtilList;", .constantValue.asLong = 0, 0x14, -1, -1, 14, -1 },
    { "lastReader_", "LOrgApacheLuceneIndexIndexReader;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "curDocs_", "[I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "upto_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "base_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "lastDocBase_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "create", "ZZD", "LOrgApacheLuceneSearchCollector;ZD", "LOrgApacheLuceneSearchCollector;ZI", "LOrgApacheLuceneSearchCollector;DZ", "LOrgApacheLuceneSearchCollector;I", "setNextReader", "LOrgApacheLuceneIndexIndexReader;I", "LJavaIoIOException;", "replayInit", "LOrgApacheLuceneSearchCollector;", "replay", &OrgApacheLuceneSearchCachingCollector_EMPTY_INT_ARRAY, "Ljava/util/List<Lorg/apache/lucene/search/CachingCollector$SegStart;>;", "Ljava/util/List<[I>;", "LOrgApacheLuceneSearchCachingCollector_SegStart;LOrgApacheLuceneSearchCachingCollector_CachedScorer;LOrgApacheLuceneSearchCachingCollector_ScoreCachingCollector;LOrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchCachingCollector = { "CachingCollector", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x401, 10, 12, -1, 15, -1, -1, -1 };
  return &_OrgApacheLuceneSearchCachingCollector;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchCachingCollector class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchCachingCollector_EMPTY_INT_ARRAY, [IOSIntArray newArrayWithLength:0]);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchCachingCollector)
  }
}

@end

OrgApacheLuceneSearchCachingCollector *OrgApacheLuceneSearchCachingCollector_createWithBoolean_withBoolean_withDouble_(jboolean acceptDocsOutOfOrder, jboolean cacheScores, jdouble maxRAMMB) {
  OrgApacheLuceneSearchCachingCollector_initialize();
  OrgApacheLuceneSearchCollector *other = create_OrgApacheLuceneSearchCachingCollector_1_initWithBoolean_(acceptDocsOutOfOrder);
  return OrgApacheLuceneSearchCachingCollector_createWithOrgApacheLuceneSearchCollector_withBoolean_withDouble_(other, cacheScores, maxRAMMB);
}

OrgApacheLuceneSearchCachingCollector *OrgApacheLuceneSearchCachingCollector_createWithOrgApacheLuceneSearchCollector_withBoolean_withDouble_(OrgApacheLuceneSearchCollector *other, jboolean cacheScores, jdouble maxRAMMB) {
  OrgApacheLuceneSearchCachingCollector_initialize();
  return cacheScores ? create_OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_(other, maxRAMMB) : (id) create_OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_(other, maxRAMMB);
}

OrgApacheLuceneSearchCachingCollector *OrgApacheLuceneSearchCachingCollector_createWithOrgApacheLuceneSearchCollector_withBoolean_withInt_(OrgApacheLuceneSearchCollector *other, jboolean cacheScores, jint maxDocsToCache) {
  OrgApacheLuceneSearchCachingCollector_initialize();
  return cacheScores ? create_OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(other, maxDocsToCache) : (id) create_OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(other, maxDocsToCache);
}

void OrgApacheLuceneSearchCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_withBoolean_(OrgApacheLuceneSearchCachingCollector *self, OrgApacheLuceneSearchCollector *other, jdouble maxRAMMB, jboolean cacheScores) {
  OrgApacheLuceneSearchCollector_init(self);
  JreStrongAssignAndConsume(&self->cachedSegs_, new_JavaUtilArrayList_init());
  JreStrongAssign(&self->other_, other);
  JreStrongAssignAndConsume(&self->cachedDocs_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&self->curDocs_, [IOSIntArray newArrayWithLength:OrgApacheLuceneSearchCachingCollector_INITIAL_ARRAY_SIZE]);
  [self->cachedDocs_ addWithId:self->curDocs_];
  jint bytesPerDoc = OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_INT;
  if (cacheScores) {
    bytesPerDoc += OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_FLOAT;
  }
  self->maxDocsToCache_ = JreFpToInt(((maxRAMMB * 1024 * 1024) / bytesPerDoc));
}

void OrgApacheLuceneSearchCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCachingCollector *self, OrgApacheLuceneSearchCollector *other, jint maxDocsToCache) {
  OrgApacheLuceneSearchCollector_init(self);
  JreStrongAssignAndConsume(&self->cachedSegs_, new_JavaUtilArrayList_init());
  JreStrongAssign(&self->other_, other);
  JreStrongAssignAndConsume(&self->cachedDocs_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&self->curDocs_, [IOSIntArray newArrayWithLength:OrgApacheLuceneSearchCachingCollector_INITIAL_ARRAY_SIZE]);
  [self->cachedDocs_ addWithId:self->curDocs_];
  self->maxDocsToCache_ = maxDocsToCache;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchCachingCollector)

@implementation OrgApacheLuceneSearchCachingCollector_SegStart

- (instancetype)initWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                withInt:(jint)base
                                                withInt:(jint)end {
  OrgApacheLuceneSearchCachingCollector_SegStart_initWithOrgApacheLuceneIndexIndexReader_withInt_withInt_(self, reader, base, end);
  return self;
}

- (void)dealloc {
  RELEASE_(reader_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexIndexReader:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "reader_", "LOrgApacheLuceneIndexIndexReader;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "base_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "end_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexIndexReader;II", "LOrgApacheLuceneSearchCachingCollector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchCachingCollector_SegStart = { "SegStart", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0xa, 1, 3, 1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchCachingCollector_SegStart;
}

@end

void OrgApacheLuceneSearchCachingCollector_SegStart_initWithOrgApacheLuceneIndexIndexReader_withInt_withInt_(OrgApacheLuceneSearchCachingCollector_SegStart *self, OrgApacheLuceneIndexIndexReader *reader, jint base, jint end) {
  NSObject_init(self);
  JreStrongAssign(&self->reader_, reader);
  self->base_ = base;
  self->end_ = end;
}

OrgApacheLuceneSearchCachingCollector_SegStart *new_OrgApacheLuceneSearchCachingCollector_SegStart_initWithOrgApacheLuceneIndexIndexReader_withInt_withInt_(OrgApacheLuceneIndexIndexReader *reader, jint base, jint end) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchCachingCollector_SegStart, initWithOrgApacheLuceneIndexIndexReader_withInt_withInt_, reader, base, end)
}

OrgApacheLuceneSearchCachingCollector_SegStart *create_OrgApacheLuceneSearchCachingCollector_SegStart_initWithOrgApacheLuceneIndexIndexReader_withInt_withInt_(OrgApacheLuceneIndexIndexReader *reader, jint base, jint end) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchCachingCollector_SegStart, initWithOrgApacheLuceneIndexIndexReader_withInt_withInt_, reader, base, end)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchCachingCollector_SegStart)

@implementation OrgApacheLuceneSearchCachingCollector_CachedScorer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchCachingCollector_CachedScorer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jfloat)score {
  return score_;
}

- (jint)advanceWithInt:(jint)target {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jint)docID {
  return doc_;
}

- (jfloat)freq {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jint)nextDoc {
  @throw create_JavaLangUnsupportedOperationException_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(score);
  methods[2].selector = @selector(advanceWithInt:);
  methods[3].selector = @selector(docID);
  methods[4].selector = @selector(freq);
  methods[5].selector = @selector(nextDoc);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "doc_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "score_", "F", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "advance", "I", "LOrgApacheLuceneSearchCachingCollector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchCachingCollector_CachedScorer = { "CachedScorer", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x1a, 6, 2, 2, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchCachingCollector_CachedScorer;
}

@end

void OrgApacheLuceneSearchCachingCollector_CachedScorer_init(OrgApacheLuceneSearchCachingCollector_CachedScorer *self) {
  OrgApacheLuceneSearchScorer_initWithOrgApacheLuceneSearchWeight_(self, nil);
}

OrgApacheLuceneSearchCachingCollector_CachedScorer *new_OrgApacheLuceneSearchCachingCollector_CachedScorer_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchCachingCollector_CachedScorer, init)
}

OrgApacheLuceneSearchCachingCollector_CachedScorer *create_OrgApacheLuceneSearchCachingCollector_CachedScorer_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchCachingCollector_CachedScorer, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchCachingCollector_CachedScorer)

@implementation OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector

- (instancetype)initWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other
                                            withDouble:(jdouble)maxRAMMB {
  OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_(self, other, maxRAMMB);
  return self;
}

- (instancetype)initWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other
                                               withInt:(jint)maxDocsToCache {
  OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(self, other, maxDocsToCache);
  return self;
}

- (void)collectWithInt:(jint)doc {
  if (curDocs_ == nil) {
    ((OrgApacheLuceneSearchCachingCollector_CachedScorer *) nil_chk(cachedScorer_))->score_ = [((OrgApacheLuceneSearchScorer *) nil_chk(scorer_)) score];
    cachedScorer_->doc_ = doc;
    [((OrgApacheLuceneSearchCollector *) nil_chk(other_)) collectWithInt:doc];
    return;
  }
  if (upto_ == curDocs_->size_) {
    base_ += upto_;
    jint nextLength = 8 * curDocs_->size_;
    if (nextLength > OrgApacheLuceneSearchCachingCollector_MAX_ARRAY_SIZE) {
      nextLength = OrgApacheLuceneSearchCachingCollector_MAX_ARRAY_SIZE;
    }
    if (base_ + nextLength > maxDocsToCache_) {
      nextLength = maxDocsToCache_ - base_;
      if (nextLength <= 0) {
        JreStrongAssign(&curDocs_, nil);
        JreStrongAssign(&curScores_, nil);
        [((id<JavaUtilList>) nil_chk(cachedSegs_)) clear];
        [((id<JavaUtilList>) nil_chk(cachedDocs_)) clear];
        [((id<JavaUtilList>) nil_chk(cachedScores_)) clear];
        ((OrgApacheLuceneSearchCachingCollector_CachedScorer *) nil_chk(cachedScorer_))->score_ = [((OrgApacheLuceneSearchScorer *) nil_chk(scorer_)) score];
        cachedScorer_->doc_ = doc;
        [((OrgApacheLuceneSearchCollector *) nil_chk(other_)) collectWithInt:doc];
        return;
      }
    }
    JreStrongAssignAndConsume(&curDocs_, [IOSIntArray newArrayWithLength:nextLength]);
    [((id<JavaUtilList>) nil_chk(cachedDocs_)) addWithId:curDocs_];
    JreStrongAssignAndConsume(&curScores_, [IOSFloatArray newArrayWithLength:nextLength]);
    [((id<JavaUtilList>) nil_chk(cachedScores_)) addWithId:curScores_];
    upto_ = 0;
  }
  *IOSIntArray_GetRef(nil_chk(curDocs_), upto_) = doc;
  ((OrgApacheLuceneSearchCachingCollector_CachedScorer *) nil_chk(cachedScorer_))->score_ = *IOSFloatArray_GetRef(nil_chk(curScores_), upto_) = [((OrgApacheLuceneSearchScorer *) nil_chk(scorer_)) score];
  upto_++;
  cachedScorer_->doc_ = doc;
  [((OrgApacheLuceneSearchCollector *) nil_chk(other_)) collectWithInt:doc];
}

- (void)replayWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other {
  [self replayInitWithOrgApacheLuceneSearchCollector:other];
  jint curUpto = 0;
  jint curBase = 0;
  jint chunkUpto = 0;
  JreStrongAssign(&curDocs_, JreLoadStatic(OrgApacheLuceneSearchCachingCollector, EMPTY_INT_ARRAY));
  for (OrgApacheLuceneSearchCachingCollector_SegStart * __strong seg in nil_chk(cachedSegs_)) {
    [((OrgApacheLuceneSearchCollector *) nil_chk(other)) setNextReaderWithOrgApacheLuceneIndexIndexReader:((OrgApacheLuceneSearchCachingCollector_SegStart *) nil_chk(seg))->reader_ withInt:seg->base_];
    [other setScorerWithOrgApacheLuceneSearchScorer:cachedScorer_];
    while (curBase + curUpto < seg->end_) {
      if (curUpto == ((IOSIntArray *) nil_chk(curDocs_))->size_) {
        curBase += curDocs_->size_;
        JreStrongAssign(&curDocs_, [((id<JavaUtilList>) nil_chk(cachedDocs_)) getWithInt:chunkUpto]);
        JreStrongAssign(&curScores_, [((id<JavaUtilList>) nil_chk(cachedScores_)) getWithInt:chunkUpto]);
        chunkUpto++;
        curUpto = 0;
      }
      ((OrgApacheLuceneSearchCachingCollector_CachedScorer *) nil_chk(cachedScorer_))->score_ = IOSFloatArray_Get(nil_chk(curScores_), curUpto);
      cachedScorer_->doc_ = IOSIntArray_Get(nil_chk(curDocs_), curUpto);
      [other collectWithInt:IOSIntArray_Get(curDocs_, curUpto++)];
    }
  }
}

- (void)setScorerWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)scorer {
  JreStrongAssign(&self->scorer_, scorer);
  [((OrgApacheLuceneSearchCollector *) nil_chk(other_)) setScorerWithOrgApacheLuceneSearchScorer:cachedScorer_];
}

- (NSString *)description {
  if ([self isCached]) {
    return JreStrcat("$I$", @"CachingCollector (", (base_ + upto_), @" docs & scores cached)");
  }
  else {
    return @"CachingCollector (cache was cleared)";
  }
}

- (void)dealloc {
  RELEASE_(cachedScorer_);
  RELEASE_(cachedScores_);
  RELEASE_(scorer_);
  RELEASE_(curScores_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, 4, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchCollector:withDouble:);
  methods[1].selector = @selector(initWithOrgApacheLuceneSearchCollector:withInt:);
  methods[2].selector = @selector(collectWithInt:);
  methods[3].selector = @selector(replayWithOrgApacheLuceneSearchCollector:);
  methods[4].selector = @selector(setScorerWithOrgApacheLuceneSearchScorer:);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cachedScorer_", "LOrgApacheLuceneSearchCachingCollector_CachedScorer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "cachedScores_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 10, -1 },
    { "scorer_", "LOrgApacheLuceneSearchScorer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "curScores_", "[F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchCollector;D", "LOrgApacheLuceneSearchCollector;I", "collect", "I", "LJavaIoIOException;", "replay", "LOrgApacheLuceneSearchCollector;", "setScorer", "LOrgApacheLuceneSearchScorer;", "toString", "Ljava/util/List<[F>;", "LOrgApacheLuceneSearchCachingCollector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector = { "ScoreCachingCollector", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x1a, 6, 4, 11, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector;
}

@end

void OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector *self, OrgApacheLuceneSearchCollector *other, jdouble maxRAMMB) {
  OrgApacheLuceneSearchCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_withBoolean_(self, other, maxRAMMB, true);
  JreStrongAssignAndConsume(&self->cachedScorer_, new_OrgApacheLuceneSearchCachingCollector_CachedScorer_init());
  JreStrongAssignAndConsume(&self->cachedScores_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&self->curScores_, [IOSFloatArray newArrayWithLength:128]);
  [self->cachedScores_ addWithId:self->curScores_];
}

OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector *new_OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_(OrgApacheLuceneSearchCollector *other, jdouble maxRAMMB) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector, initWithOrgApacheLuceneSearchCollector_withDouble_, other, maxRAMMB)
}

OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector *create_OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_(OrgApacheLuceneSearchCollector *other, jdouble maxRAMMB) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector, initWithOrgApacheLuceneSearchCollector_withDouble_, other, maxRAMMB)
}

void OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector *self, OrgApacheLuceneSearchCollector *other, jint maxDocsToCache) {
  OrgApacheLuceneSearchCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(self, other, maxDocsToCache);
  JreStrongAssignAndConsume(&self->cachedScorer_, new_OrgApacheLuceneSearchCachingCollector_CachedScorer_init());
  JreStrongAssignAndConsume(&self->cachedScores_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&self->curScores_, [IOSFloatArray newArrayWithLength:OrgApacheLuceneSearchCachingCollector_INITIAL_ARRAY_SIZE]);
  [self->cachedScores_ addWithId:self->curScores_];
}

OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector *new_OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCollector *other, jint maxDocsToCache) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector, initWithOrgApacheLuceneSearchCollector_withInt_, other, maxDocsToCache)
}

OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector *create_OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCollector *other, jint maxDocsToCache) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector, initWithOrgApacheLuceneSearchCollector_withInt_, other, maxDocsToCache)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector)

@implementation OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector

- (instancetype)initWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other
                                            withDouble:(jdouble)maxRAMMB {
  OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_(self, other, maxRAMMB);
  return self;
}

- (instancetype)initWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other
                                               withInt:(jint)maxDocsToCache {
  OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(self, other, maxDocsToCache);
  return self;
}

- (void)collectWithInt:(jint)doc {
  if (curDocs_ == nil) {
    [((OrgApacheLuceneSearchCollector *) nil_chk(other_)) collectWithInt:doc];
    return;
  }
  if (upto_ == curDocs_->size_) {
    base_ += upto_;
    jint nextLength = 8 * curDocs_->size_;
    if (nextLength > OrgApacheLuceneSearchCachingCollector_MAX_ARRAY_SIZE) {
      nextLength = OrgApacheLuceneSearchCachingCollector_MAX_ARRAY_SIZE;
    }
    if (base_ + nextLength > maxDocsToCache_) {
      nextLength = maxDocsToCache_ - base_;
      if (nextLength <= 0) {
        JreStrongAssign(&curDocs_, nil);
        [((id<JavaUtilList>) nil_chk(cachedSegs_)) clear];
        [((id<JavaUtilList>) nil_chk(cachedDocs_)) clear];
        [((OrgApacheLuceneSearchCollector *) nil_chk(other_)) collectWithInt:doc];
        return;
      }
    }
    JreStrongAssignAndConsume(&curDocs_, [IOSIntArray newArrayWithLength:nextLength]);
    [((id<JavaUtilList>) nil_chk(cachedDocs_)) addWithId:curDocs_];
    upto_ = 0;
  }
  *IOSIntArray_GetRef(nil_chk(curDocs_), upto_) = doc;
  upto_++;
  [((OrgApacheLuceneSearchCollector *) nil_chk(other_)) collectWithInt:doc];
}

- (void)replayWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)other {
  [self replayInitWithOrgApacheLuceneSearchCollector:other];
  jint curUpto = 0;
  jint curbase = 0;
  jint chunkUpto = 0;
  JreStrongAssign(&curDocs_, JreLoadStatic(OrgApacheLuceneSearchCachingCollector, EMPTY_INT_ARRAY));
  for (OrgApacheLuceneSearchCachingCollector_SegStart * __strong seg in nil_chk(cachedSegs_)) {
    [((OrgApacheLuceneSearchCollector *) nil_chk(other)) setNextReaderWithOrgApacheLuceneIndexIndexReader:((OrgApacheLuceneSearchCachingCollector_SegStart *) nil_chk(seg))->reader_ withInt:seg->base_];
    while (curbase + curUpto < seg->end_) {
      if (curUpto == ((IOSIntArray *) nil_chk(curDocs_))->size_) {
        curbase += curDocs_->size_;
        JreStrongAssign(&curDocs_, [((id<JavaUtilList>) nil_chk(cachedDocs_)) getWithInt:chunkUpto]);
        chunkUpto++;
        curUpto = 0;
      }
      [other collectWithInt:IOSIntArray_Get(nil_chk(curDocs_), curUpto++)];
    }
  }
}

- (void)setScorerWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)scorer {
  [((OrgApacheLuceneSearchCollector *) nil_chk(other_)) setScorerWithOrgApacheLuceneSearchScorer:scorer];
}

- (NSString *)description {
  if ([self isCached]) {
    return JreStrcat("$I$", @"CachingCollector (", (base_ + upto_), @" docs cached)");
  }
  else {
    return @"CachingCollector (cache was cleared)";
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, 4, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchCollector:withDouble:);
  methods[1].selector = @selector(initWithOrgApacheLuceneSearchCollector:withInt:);
  methods[2].selector = @selector(collectWithInt:);
  methods[3].selector = @selector(replayWithOrgApacheLuceneSearchCollector:);
  methods[4].selector = @selector(setScorerWithOrgApacheLuceneSearchScorer:);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchCollector;D", "LOrgApacheLuceneSearchCollector;I", "collect", "I", "LJavaIoIOException;", "replay", "LOrgApacheLuceneSearchCollector;", "setScorer", "LOrgApacheLuceneSearchScorer;", "toString", "LOrgApacheLuceneSearchCachingCollector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector = { "NoScoreCachingCollector", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0x1a, 6, 0, 10, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector;
}

@end

void OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *self, OrgApacheLuceneSearchCollector *other, jdouble maxRAMMB) {
  OrgApacheLuceneSearchCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_withBoolean_(self, other, maxRAMMB, false);
}

OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *new_OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_(OrgApacheLuceneSearchCollector *other, jdouble maxRAMMB) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector, initWithOrgApacheLuceneSearchCollector_withDouble_, other, maxRAMMB)
}

OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *create_OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withDouble_(OrgApacheLuceneSearchCollector *other, jdouble maxRAMMB) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector, initWithOrgApacheLuceneSearchCollector_withDouble_, other, maxRAMMB)
}

void OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *self, OrgApacheLuceneSearchCollector *other, jint maxDocsToCache) {
  OrgApacheLuceneSearchCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(self, other, maxDocsToCache);
}

OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *new_OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCollector *other, jint maxDocsToCache) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector, initWithOrgApacheLuceneSearchCollector_withInt_, other, maxDocsToCache)
}

OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *create_OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCollector *other, jint maxDocsToCache) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector, initWithOrgApacheLuceneSearchCollector_withInt_, other, maxDocsToCache)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector)

@implementation OrgApacheLuceneSearchCachingCollector_1

- (instancetype)initWithBoolean:(jboolean)capture$0 {
  OrgApacheLuceneSearchCachingCollector_1_initWithBoolean_(self, capture$0);
  return self;
}

- (jboolean)acceptsDocsOutOfOrder {
  return val$acceptDocsOutOfOrder_;
}

- (void)setScorerWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)scorer {
}

- (void)collectWithInt:(jint)doc {
}

- (void)setNextReaderWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                 withInt:(jint)docBase {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithBoolean:);
  methods[1].selector = @selector(acceptsDocsOutOfOrder);
  methods[2].selector = @selector(setScorerWithOrgApacheLuceneSearchScorer:);
  methods[3].selector = @selector(collectWithInt:);
  methods[4].selector = @selector(setNextReaderWithOrgApacheLuceneIndexIndexReader:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$acceptDocsOutOfOrder_", "Z", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setScorer", "LOrgApacheLuceneSearchScorer;", "LJavaIoIOException;", "collect", "I", "setNextReader", "LOrgApacheLuceneIndexIndexReader;I", "LOrgApacheLuceneSearchCachingCollector;", "createWithBoolean:withBoolean:withDouble:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchCachingCollector_1 = { "", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x8018, 5, 1, 7, -1, 8, -1, -1 };
  return &_OrgApacheLuceneSearchCachingCollector_1;
}

@end

void OrgApacheLuceneSearchCachingCollector_1_initWithBoolean_(OrgApacheLuceneSearchCachingCollector_1 *self, jboolean capture$0) {
  self->val$acceptDocsOutOfOrder_ = capture$0;
  OrgApacheLuceneSearchCollector_init(self);
}

OrgApacheLuceneSearchCachingCollector_1 *new_OrgApacheLuceneSearchCachingCollector_1_initWithBoolean_(jboolean capture$0) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchCachingCollector_1, initWithBoolean_, capture$0)
}

OrgApacheLuceneSearchCachingCollector_1 *create_OrgApacheLuceneSearchCachingCollector_1_initWithBoolean_(jboolean capture$0) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchCachingCollector_1, initWithBoolean_, capture$0)
}
