//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/search/SpanQueryFilter.java
//

#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/search/DocIdSet.h"
#include "org/apache/lucene/search/SpanFilter.h"
#include "org/apache/lucene/search/SpanFilterResult.h"
#include "org/apache/lucene/search/SpanQueryFilter.h"
#include "org/apache/lucene/search/spans/SpanQuery.h"
#include "org/apache/lucene/search/spans/Spans.h"
#include "org/apache/lucene/util/FixedBitSet.h"

@implementation OrgApacheLuceneSearchSpanQueryFilter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchSpanQueryFilter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgApacheLuceneSearchSpansSpanQuery:(OrgApacheLuceneSearchSpansSpanQuery *)query {
  OrgApacheLuceneSearchSpanQueryFilter_initWithOrgApacheLuceneSearchSpansSpanQuery_(self, query);
  return self;
}

- (OrgApacheLuceneSearchDocIdSet *)getDocIdSetWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  OrgApacheLuceneSearchSpanFilterResult *result = [self bitSpansWithOrgApacheLuceneIndexIndexReader:reader];
  return [((OrgApacheLuceneSearchSpanFilterResult *) nil_chk(result)) getDocIdSet];
}

- (OrgApacheLuceneSearchSpanFilterResult *)bitSpansWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  OrgApacheLuceneUtilFixedBitSet *bits = create_OrgApacheLuceneUtilFixedBitSet_initWithInt_([((OrgApacheLuceneIndexIndexReader *) nil_chk(reader)) maxDoc]);
  OrgApacheLuceneSearchSpansSpans *spans = [((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(query_)) getSpansWithOrgApacheLuceneIndexIndexReader:reader];
  id<JavaUtilList> tmp = create_JavaUtilArrayList_initWithInt_(20);
  jint currentDoc = -1;
  OrgApacheLuceneSearchSpanFilterResult_PositionInfo *currentInfo = nil;
  while ([((OrgApacheLuceneSearchSpansSpans *) nil_chk(spans)) next]) {
    jint doc = [spans doc];
    [bits setWithInt:doc];
    if (currentDoc != doc) {
      currentInfo = create_OrgApacheLuceneSearchSpanFilterResult_PositionInfo_initWithInt_(doc);
      [tmp addWithId:currentInfo];
      currentDoc = doc;
    }
    [((OrgApacheLuceneSearchSpanFilterResult_PositionInfo *) nil_chk(currentInfo)) addPositionWithInt:[spans start] withInt:[spans end]];
  }
  return create_OrgApacheLuceneSearchSpanFilterResult_initWithOrgApacheLuceneSearchDocIdSet_withJavaUtilList_(bits, tmp);
}

- (OrgApacheLuceneSearchSpansSpanQuery *)getQuery {
  return query_;
}

- (NSString *)description {
  return JreStrcat("$@C", @"SpanQueryFilter(", query_, ')');
}

- (jboolean)isEqual:(id)o {
  return [o isKindOfClass:[OrgApacheLuceneSearchSpanQueryFilter class]] && [((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(self->query_)) isEqual:((OrgApacheLuceneSearchSpanQueryFilter *) nil_chk(((OrgApacheLuceneSearchSpanQueryFilter *) cast_chk(o, [OrgApacheLuceneSearchSpanQueryFilter class]))))->query_];
}

- (NSUInteger)hash {
  return ((jint) [((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(query_)) hash]) ^ (jint) 0x923F64B9;
}

- (void)dealloc {
  RELEASE_(query_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSet;", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchSpanFilterResult;", 0x1, 4, 2, 3, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchSpansSpanQuery;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithOrgApacheLuceneSearchSpansSpanQuery:);
  methods[2].selector = @selector(getDocIdSetWithOrgApacheLuceneIndexIndexReader:);
  methods[3].selector = @selector(bitSpansWithOrgApacheLuceneIndexIndexReader:);
  methods[4].selector = @selector(getQuery);
  methods[5].selector = @selector(description);
  methods[6].selector = @selector(isEqual:);
  methods[7].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "query_", "LOrgApacheLuceneSearchSpansSpanQuery;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSpansSpanQuery;", "getDocIdSet", "LOrgApacheLuceneIndexIndexReader;", "LJavaIoIOException;", "bitSpans", "toString", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpanQueryFilter = { "SpanQueryFilter", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x1, 8, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSpanQueryFilter;
}

@end

void OrgApacheLuceneSearchSpanQueryFilter_init(OrgApacheLuceneSearchSpanQueryFilter *self) {
  OrgApacheLuceneSearchSpanFilter_init(self);
}

OrgApacheLuceneSearchSpanQueryFilter *new_OrgApacheLuceneSearchSpanQueryFilter_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSpanQueryFilter, init)
}

OrgApacheLuceneSearchSpanQueryFilter *create_OrgApacheLuceneSearchSpanQueryFilter_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSpanQueryFilter, init)
}

void OrgApacheLuceneSearchSpanQueryFilter_initWithOrgApacheLuceneSearchSpansSpanQuery_(OrgApacheLuceneSearchSpanQueryFilter *self, OrgApacheLuceneSearchSpansSpanQuery *query) {
  OrgApacheLuceneSearchSpanFilter_init(self);
  JreStrongAssign(&self->query_, query);
}

OrgApacheLuceneSearchSpanQueryFilter *new_OrgApacheLuceneSearchSpanQueryFilter_initWithOrgApacheLuceneSearchSpansSpanQuery_(OrgApacheLuceneSearchSpansSpanQuery *query) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSpanQueryFilter, initWithOrgApacheLuceneSearchSpansSpanQuery_, query)
}

OrgApacheLuceneSearchSpanQueryFilter *create_OrgApacheLuceneSearchSpanQueryFilter_initWithOrgApacheLuceneSearchSpansSpanQuery_(OrgApacheLuceneSearchSpansSpanQuery *query) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSpanQueryFilter, initWithOrgApacheLuceneSearchSpansSpanQuery_, query)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSpanQueryFilter)
