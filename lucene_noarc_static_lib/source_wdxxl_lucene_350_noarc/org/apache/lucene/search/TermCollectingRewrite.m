//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/search/TermCollectingRewrite.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/search/FilteredTermEnum.h"
#include "org/apache/lucene/search/MultiTermQuery.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/TermCollectingRewrite.h"

@interface OrgApacheLuceneSearchTermCollectingRewrite_TermCollector : NSObject

@end

@implementation OrgApacheLuceneSearchTermCollectingRewrite

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchTermCollectingRewrite_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneSearchQuery *)getTopLevelQuery {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)addClauseWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)topLevel
                   withOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                                      withFloat:(jfloat)boost {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)collectTermsWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                withOrgApacheLuceneSearchMultiTermQuery:(OrgApacheLuceneSearchMultiTermQuery *)query
withOrgApacheLuceneSearchTermCollectingRewrite_TermCollector:(id<OrgApacheLuceneSearchTermCollectingRewrite_TermCollector>)collector {
  OrgApacheLuceneSearchFilteredTermEnum *enumerator = [((OrgApacheLuceneSearchMultiTermQuery *) nil_chk(query)) getEnumWithOrgApacheLuceneIndexIndexReader:reader];
  @try {
    do {
      OrgApacheLuceneIndexTerm *t = [((OrgApacheLuceneSearchFilteredTermEnum *) nil_chk(enumerator)) term];
      if (t == nil || ![((id<OrgApacheLuceneSearchTermCollectingRewrite_TermCollector>) nil_chk(collector)) collectWithOrgApacheLuceneIndexTerm:t withFloat:[enumerator difference]]) break;
    }
    while ([enumerator next]);
  }
  @finally {
    [enumerator close];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x404, -1, -1, 0, 1, -1, -1 },
    { NULL, "V", 0x404, 2, 3, 0, 4, -1, -1 },
    { NULL, "V", 0x14, 5, 6, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getTopLevelQuery);
  methods[2].selector = @selector(addClauseWithOrgApacheLuceneSearchQuery:withOrgApacheLuceneIndexTerm:withFloat:);
  methods[3].selector = @selector(collectTermsWithOrgApacheLuceneIndexIndexReader:withOrgApacheLuceneSearchMultiTermQuery:withOrgApacheLuceneSearchTermCollectingRewrite_TermCollector:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaIoIOException;", "()TQ;", "addClause", "LOrgApacheLuceneSearchQuery;LOrgApacheLuceneIndexTerm;F", "(TQ;Lorg/apache/lucene/index/Term;F)V", "collectTerms", "LOrgApacheLuceneIndexIndexReader;LOrgApacheLuceneSearchMultiTermQuery;LOrgApacheLuceneSearchTermCollectingRewrite_TermCollector;", "LOrgApacheLuceneSearchTermCollectingRewrite_TermCollector;", "<Q:Lorg/apache/lucene/search/Query;>Lorg/apache/lucene/search/MultiTermQuery$RewriteMethod;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchTermCollectingRewrite = { "TermCollectingRewrite", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0x400, 4, 0, -1, 7, -1, 8, -1 };
  return &_OrgApacheLuceneSearchTermCollectingRewrite;
}

@end

void OrgApacheLuceneSearchTermCollectingRewrite_init(OrgApacheLuceneSearchTermCollectingRewrite *self) {
  OrgApacheLuceneSearchMultiTermQuery_RewriteMethod_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchTermCollectingRewrite)

@implementation OrgApacheLuceneSearchTermCollectingRewrite_TermCollector

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(collectWithOrgApacheLuceneIndexTerm:withFloat:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "collect", "LOrgApacheLuceneIndexTerm;F", "LJavaIoIOException;", "LOrgApacheLuceneSearchTermCollectingRewrite;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchTermCollectingRewrite_TermCollector = { "TermCollector", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0x60c, 1, 0, 3, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchTermCollectingRewrite_TermCollector;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchTermCollectingRewrite_TermCollector)
