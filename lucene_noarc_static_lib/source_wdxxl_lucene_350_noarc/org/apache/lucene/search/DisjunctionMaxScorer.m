//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/search/DisjunctionMaxScorer.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "org/apache/lucene/search/DisjunctionMaxScorer.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/Similarity.h"
#include "org/apache/lucene/search/Weight.h"

@interface OrgApacheLuceneSearchDisjunctionMaxScorer () {
 @public
  IOSObjectArray *subScorers_;
  jint numScorers_;
  jfloat tieBreakerMultiplier_;
  jint doc_;
  jfloat scoreSum_;
  jfloat scoreMax_;
}

- (void)scoreAllWithInt:(jint)root
                withInt:(jint)size
                withInt:(jint)doc;

- (void)heapify;

- (void)heapAdjustWithInt:(jint)root;

- (void)heapRemoveRoot;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchDisjunctionMaxScorer, subScorers_, IOSObjectArray *)

__attribute__((unused)) static void OrgApacheLuceneSearchDisjunctionMaxScorer_scoreAllWithInt_withInt_withInt_(OrgApacheLuceneSearchDisjunctionMaxScorer *self, jint root, jint size, jint doc);

__attribute__((unused)) static void OrgApacheLuceneSearchDisjunctionMaxScorer_heapify(OrgApacheLuceneSearchDisjunctionMaxScorer *self);

__attribute__((unused)) static void OrgApacheLuceneSearchDisjunctionMaxScorer_heapAdjustWithInt_(OrgApacheLuceneSearchDisjunctionMaxScorer *self, jint root);

__attribute__((unused)) static void OrgApacheLuceneSearchDisjunctionMaxScorer_heapRemoveRoot(OrgApacheLuceneSearchDisjunctionMaxScorer *self);

@implementation OrgApacheLuceneSearchDisjunctionMaxScorer

- (instancetype)initWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                                          withFloat:(jfloat)tieBreakerMultiplier
                withOrgApacheLuceneSearchSimilarity:(OrgApacheLuceneSearchSimilarity *)similarity
               withOrgApacheLuceneSearchScorerArray:(IOSObjectArray *)subScorers
                                            withInt:(jint)numScorers {
  OrgApacheLuceneSearchDisjunctionMaxScorer_initWithOrgApacheLuceneSearchWeight_withFloat_withOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchScorerArray_withInt_(self, weight, tieBreakerMultiplier, similarity, subScorers, numScorers);
  return self;
}

- (jint)nextDoc {
  if (numScorers_ == 0) return doc_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
  while ([((OrgApacheLuceneSearchScorer *) nil_chk(IOSObjectArray_Get(nil_chk(subScorers_), 0))) docID] == doc_) {
    if ([((OrgApacheLuceneSearchScorer *) nil_chk(IOSObjectArray_Get(subScorers_, 0))) nextDoc] != OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
      OrgApacheLuceneSearchDisjunctionMaxScorer_heapAdjustWithInt_(self, 0);
    }
    else {
      OrgApacheLuceneSearchDisjunctionMaxScorer_heapRemoveRoot(self);
      if (numScorers_ == 0) {
        return doc_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
      }
    }
  }
  return doc_ = [((OrgApacheLuceneSearchScorer *) nil_chk(IOSObjectArray_Get(subScorers_, 0))) docID];
}

- (jint)docID {
  return doc_;
}

- (jfloat)score {
  jint doc = [((OrgApacheLuceneSearchScorer *) nil_chk(IOSObjectArray_Get(nil_chk(subScorers_), 0))) docID];
  scoreSum_ = scoreMax_ = [((OrgApacheLuceneSearchScorer *) nil_chk(IOSObjectArray_Get(subScorers_, 0))) score];
  jint size = numScorers_;
  OrgApacheLuceneSearchDisjunctionMaxScorer_scoreAllWithInt_withInt_withInt_(self, 1, size, doc);
  OrgApacheLuceneSearchDisjunctionMaxScorer_scoreAllWithInt_withInt_withInt_(self, 2, size, doc);
  return scoreMax_ + (scoreSum_ - scoreMax_) * tieBreakerMultiplier_;
}

- (void)scoreAllWithInt:(jint)root
                withInt:(jint)size
                withInt:(jint)doc {
  OrgApacheLuceneSearchDisjunctionMaxScorer_scoreAllWithInt_withInt_withInt_(self, root, size, doc);
}

- (jint)advanceWithInt:(jint)target {
  if (numScorers_ == 0) return doc_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
  while ([((OrgApacheLuceneSearchScorer *) nil_chk(IOSObjectArray_Get(nil_chk(subScorers_), 0))) docID] < target) {
    if ([((OrgApacheLuceneSearchScorer *) nil_chk(IOSObjectArray_Get(subScorers_, 0))) advanceWithInt:target] != OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
      OrgApacheLuceneSearchDisjunctionMaxScorer_heapAdjustWithInt_(self, 0);
    }
    else {
      OrgApacheLuceneSearchDisjunctionMaxScorer_heapRemoveRoot(self);
      if (numScorers_ == 0) {
        return doc_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
      }
    }
  }
  return doc_ = [((OrgApacheLuceneSearchScorer *) nil_chk(IOSObjectArray_Get(subScorers_, 0))) docID];
}

- (void)heapify {
  OrgApacheLuceneSearchDisjunctionMaxScorer_heapify(self);
}

- (void)heapAdjustWithInt:(jint)root {
  OrgApacheLuceneSearchDisjunctionMaxScorer_heapAdjustWithInt_(self, root);
}

- (void)heapRemoveRoot {
  OrgApacheLuceneSearchDisjunctionMaxScorer_heapRemoveRoot(self);
}

- (void)dealloc {
  RELEASE_(subScorers_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x2, 2, 3, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 5, 1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchWeight:withFloat:withOrgApacheLuceneSearchSimilarity:withOrgApacheLuceneSearchScorerArray:withInt:);
  methods[1].selector = @selector(nextDoc);
  methods[2].selector = @selector(docID);
  methods[3].selector = @selector(score);
  methods[4].selector = @selector(scoreAllWithInt:withInt:withInt:);
  methods[5].selector = @selector(advanceWithInt:);
  methods[6].selector = @selector(heapify);
  methods[7].selector = @selector(heapAdjustWithInt:);
  methods[8].selector = @selector(heapRemoveRoot);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "subScorers_", "[LOrgApacheLuceneSearchScorer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "numScorers_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tieBreakerMultiplier_", "F", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "doc_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "scoreSum_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "scoreMax_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchWeight;FLOrgApacheLuceneSearchSimilarity;[LOrgApacheLuceneSearchScorer;I", "LJavaIoIOException;", "scoreAll", "III", "advance", "I", "heapAdjust" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchDisjunctionMaxScorer = { "DisjunctionMaxScorer", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x0, 9, 6, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchDisjunctionMaxScorer;
}

@end

void OrgApacheLuceneSearchDisjunctionMaxScorer_initWithOrgApacheLuceneSearchWeight_withFloat_withOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchScorerArray_withInt_(OrgApacheLuceneSearchDisjunctionMaxScorer *self, OrgApacheLuceneSearchWeight *weight, jfloat tieBreakerMultiplier, OrgApacheLuceneSearchSimilarity *similarity, IOSObjectArray *subScorers, jint numScorers) {
  OrgApacheLuceneSearchScorer_initWithOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchWeight_(self, similarity, weight);
  self->doc_ = -1;
  self->tieBreakerMultiplier_ = tieBreakerMultiplier;
  JreStrongAssign(&self->subScorers_, subScorers);
  self->numScorers_ = numScorers;
  OrgApacheLuceneSearchDisjunctionMaxScorer_heapify(self);
}

OrgApacheLuceneSearchDisjunctionMaxScorer *new_OrgApacheLuceneSearchDisjunctionMaxScorer_initWithOrgApacheLuceneSearchWeight_withFloat_withOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchScorerArray_withInt_(OrgApacheLuceneSearchWeight *weight, jfloat tieBreakerMultiplier, OrgApacheLuceneSearchSimilarity *similarity, IOSObjectArray *subScorers, jint numScorers) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchDisjunctionMaxScorer, initWithOrgApacheLuceneSearchWeight_withFloat_withOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchScorerArray_withInt_, weight, tieBreakerMultiplier, similarity, subScorers, numScorers)
}

OrgApacheLuceneSearchDisjunctionMaxScorer *create_OrgApacheLuceneSearchDisjunctionMaxScorer_initWithOrgApacheLuceneSearchWeight_withFloat_withOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchScorerArray_withInt_(OrgApacheLuceneSearchWeight *weight, jfloat tieBreakerMultiplier, OrgApacheLuceneSearchSimilarity *similarity, IOSObjectArray *subScorers, jint numScorers) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchDisjunctionMaxScorer, initWithOrgApacheLuceneSearchWeight_withFloat_withOrgApacheLuceneSearchSimilarity_withOrgApacheLuceneSearchScorerArray_withInt_, weight, tieBreakerMultiplier, similarity, subScorers, numScorers)
}

void OrgApacheLuceneSearchDisjunctionMaxScorer_scoreAllWithInt_withInt_withInt_(OrgApacheLuceneSearchDisjunctionMaxScorer *self, jint root, jint size, jint doc) {
  if (root < size && [((OrgApacheLuceneSearchScorer *) nil_chk(IOSObjectArray_Get(nil_chk(self->subScorers_), root))) docID] == doc) {
    jfloat sub = [((OrgApacheLuceneSearchScorer *) nil_chk(IOSObjectArray_Get(nil_chk(self->subScorers_), root))) score];
    JrePlusAssignFloatF(&self->scoreSum_, sub);
    self->scoreMax_ = JavaLangMath_maxWithFloat_withFloat_(self->scoreMax_, sub);
    OrgApacheLuceneSearchDisjunctionMaxScorer_scoreAllWithInt_withInt_withInt_(self, (JreLShift32(root, 1)) + 1, size, doc);
    OrgApacheLuceneSearchDisjunctionMaxScorer_scoreAllWithInt_withInt_withInt_(self, (JreLShift32(root, 1)) + 2, size, doc);
  }
}

void OrgApacheLuceneSearchDisjunctionMaxScorer_heapify(OrgApacheLuceneSearchDisjunctionMaxScorer *self) {
  for (jint i = (JreRShift32(self->numScorers_, 1)) - 1; i >= 0; i--) {
    OrgApacheLuceneSearchDisjunctionMaxScorer_heapAdjustWithInt_(self, i);
  }
}

void OrgApacheLuceneSearchDisjunctionMaxScorer_heapAdjustWithInt_(OrgApacheLuceneSearchDisjunctionMaxScorer *self, jint root) {
  OrgApacheLuceneSearchScorer *scorer = IOSObjectArray_Get(nil_chk(self->subScorers_), root);
  jint doc = [((OrgApacheLuceneSearchScorer *) nil_chk(scorer)) docID];
  jint i = root;
  while (i <= (JreRShift32(self->numScorers_, 1)) - 1) {
    jint lchild = (JreLShift32(i, 1)) + 1;
    OrgApacheLuceneSearchScorer *lscorer = IOSObjectArray_Get(self->subScorers_, lchild);
    jint ldoc = [((OrgApacheLuceneSearchScorer *) nil_chk(lscorer)) docID];
    jint rdoc = JavaLangInteger_MAX_VALUE;
    jint rchild = (JreLShift32(i, 1)) + 2;
    OrgApacheLuceneSearchScorer *rscorer = nil;
    if (rchild < self->numScorers_) {
      rscorer = IOSObjectArray_Get(self->subScorers_, rchild);
      rdoc = [((OrgApacheLuceneSearchScorer *) nil_chk(rscorer)) docID];
    }
    if (ldoc < doc) {
      if (rdoc < ldoc) {
        IOSObjectArray_Set(self->subScorers_, i, rscorer);
        IOSObjectArray_Set(self->subScorers_, rchild, scorer);
        i = rchild;
      }
      else {
        IOSObjectArray_Set(self->subScorers_, i, lscorer);
        IOSObjectArray_Set(self->subScorers_, lchild, scorer);
        i = lchild;
      }
    }
    else if (rdoc < doc) {
      IOSObjectArray_Set(self->subScorers_, i, rscorer);
      IOSObjectArray_Set(self->subScorers_, rchild, scorer);
      i = rchild;
    }
    else {
      return;
    }
  }
}

void OrgApacheLuceneSearchDisjunctionMaxScorer_heapRemoveRoot(OrgApacheLuceneSearchDisjunctionMaxScorer *self) {
  if (self->numScorers_ == 1) {
    IOSObjectArray_Set(nil_chk(self->subScorers_), 0, nil);
    self->numScorers_ = 0;
  }
  else {
    IOSObjectArray_Set(nil_chk(self->subScorers_), 0, IOSObjectArray_Get(self->subScorers_, self->numScorers_ - 1));
    IOSObjectArray_Set(self->subScorers_, self->numScorers_ - 1, nil);
    --self->numScorers_;
    OrgApacheLuceneSearchDisjunctionMaxScorer_heapAdjustWithInt_(self, 0);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchDisjunctionMaxScorer)
