//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/search/MultiSearcher.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/concurrent/locks/Lock.h"
#include "org/apache/lucene/document/Document.h"
#include "org/apache/lucene/document/FieldSelector.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/search/Collector.h"
#include "org/apache/lucene/search/Explanation.h"
#include "org/apache/lucene/search/FieldDoc.h"
#include "org/apache/lucene/search/FieldDocSortedHitQueue.h"
#include "org/apache/lucene/search/Filter.h"
#include "org/apache/lucene/search/HitQueue.h"
#include "org/apache/lucene/search/MultiSearcher.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/ScoreDoc.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/Searchable.h"
#include "org/apache/lucene/search/Searcher.h"
#include "org/apache/lucene/search/Similarity.h"
#include "org/apache/lucene/search/Sort.h"
#include "org/apache/lucene/search/SortField.h"
#include "org/apache/lucene/search/TopDocs.h"
#include "org/apache/lucene/search/TopFieldDocs.h"
#include "org/apache/lucene/search/Weight.h"
#include "org/apache/lucene/util/DummyConcurrentLock.h"
#include "org/apache/lucene/util/ReaderUtil.h"

@interface OrgApacheLuceneSearchMultiSearcher () {
 @public
  IOSObjectArray *searchables_;
  IOSIntArray *starts_;
  jint maxDoc_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchMultiSearcher, searchables_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchMultiSearcher, starts_, IOSIntArray *)

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchMultiSearcher__Annotations$0();

@interface OrgApacheLuceneSearchMultiSearcher_CachedDfSource : OrgApacheLuceneSearchSearcher {
 @public
  id<JavaUtilMap> dfMap_;
  jint maxDoc_;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)dfMap
                            withInt:(jint)maxDoc
withOrgApacheLuceneSearchSimilarity:(OrgApacheLuceneSearchSimilarity *)similarity;

- (jint)docFreqWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term;

- (IOSIntArray *)docFreqsWithOrgApacheLuceneIndexTermArray:(IOSObjectArray *)terms;

- (jint)maxDoc;

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query;

- (void)close;

- (OrgApacheLuceneDocumentDocument *)docWithInt:(jint)i;

- (OrgApacheLuceneDocumentDocument *)docWithInt:(jint)i
       withOrgApacheLuceneDocumentFieldSelector:(id<OrgApacheLuceneDocumentFieldSelector>)fieldSelector;

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                                                                     withInt:(jint)doc;

- (void)searchWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
              withOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
           withOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)results;

- (OrgApacheLuceneSearchTopDocs *)searchWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                                        withOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
                                                                withInt:(jint)n;

- (OrgApacheLuceneSearchTopFieldDocs *)searchWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                                             withOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
                                                                     withInt:(jint)n
                                               withOrgApacheLuceneSearchSort:(OrgApacheLuceneSearchSort *)sort;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchMultiSearcher_CachedDfSource)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchMultiSearcher_CachedDfSource, dfMap_, id<JavaUtilMap>)

__attribute__((unused)) static void OrgApacheLuceneSearchMultiSearcher_CachedDfSource_initWithJavaUtilMap_withInt_withOrgApacheLuceneSearchSimilarity_(OrgApacheLuceneSearchMultiSearcher_CachedDfSource *self, id<JavaUtilMap> dfMap, jint maxDoc, OrgApacheLuceneSearchSimilarity *similarity);

__attribute__((unused)) static OrgApacheLuceneSearchMultiSearcher_CachedDfSource *new_OrgApacheLuceneSearchMultiSearcher_CachedDfSource_initWithJavaUtilMap_withInt_withOrgApacheLuceneSearchSimilarity_(id<JavaUtilMap> dfMap, jint maxDoc, OrgApacheLuceneSearchSimilarity *similarity) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchMultiSearcher_CachedDfSource *create_OrgApacheLuceneSearchMultiSearcher_CachedDfSource_initWithJavaUtilMap_withInt_withOrgApacheLuceneSearchSimilarity_(id<JavaUtilMap> dfMap, jint maxDoc, OrgApacheLuceneSearchSimilarity *similarity);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchMultiSearcher_CachedDfSource)

@interface OrgApacheLuceneSearchMultiSearcher_1 : OrgApacheLuceneSearchCollector {
 @public
  OrgApacheLuceneSearchCollector *val$collector_;
  jint val$start_;
}

- (instancetype)initWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)capture$0
                                               withInt:(jint)capture$1;

- (void)setScorerWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)scorer;

- (void)collectWithInt:(jint)doc;

- (void)setNextReaderWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                 withInt:(jint)docBase;

- (jboolean)acceptsDocsOutOfOrder;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchMultiSearcher_1)

__attribute__((unused)) static void OrgApacheLuceneSearchMultiSearcher_1_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchMultiSearcher_1 *self, OrgApacheLuceneSearchCollector *capture$0, jint capture$1);

__attribute__((unused)) static OrgApacheLuceneSearchMultiSearcher_1 *new_OrgApacheLuceneSearchMultiSearcher_1_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCollector *capture$0, jint capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchMultiSearcher_1 *create_OrgApacheLuceneSearchMultiSearcher_1_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCollector *capture$0, jint capture$1);

@interface OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort () {
 @public
  id<JavaUtilConcurrentLocksLock> lock_;
  id<OrgApacheLuceneSearchSearchable> searchable_;
  OrgApacheLuceneSearchWeight *weight_;
  OrgApacheLuceneSearchFilter *filter_;
  jint nDocs_;
  jint i_;
  OrgApacheLuceneSearchHitQueue *hq_;
  IOSIntArray *starts_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort, lock_, id<JavaUtilConcurrentLocksLock>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort, searchable_, id<OrgApacheLuceneSearchSearchable>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort, weight_, OrgApacheLuceneSearchWeight *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort, filter_, OrgApacheLuceneSearchFilter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort, hq_, OrgApacheLuceneSearchHitQueue *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort, starts_, IOSIntArray *)

@interface OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort () {
 @public
  id<JavaUtilConcurrentLocksLock> lock_;
  id<OrgApacheLuceneSearchSearchable> searchable_;
  OrgApacheLuceneSearchWeight *weight_;
  OrgApacheLuceneSearchFilter *filter_;
  jint nDocs_;
  jint i_;
  OrgApacheLuceneSearchFieldDocSortedHitQueue *hq_;
  IOSIntArray *starts_;
  OrgApacheLuceneSearchSort *sort_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort, lock_, id<JavaUtilConcurrentLocksLock>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort, searchable_, id<OrgApacheLuceneSearchSearchable>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort, weight_, OrgApacheLuceneSearchWeight *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort, filter_, OrgApacheLuceneSearchFilter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort, hq_, OrgApacheLuceneSearchFieldDocSortedHitQueue *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort, starts_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort, sort_, OrgApacheLuceneSearchSort *)

@implementation OrgApacheLuceneSearchMultiSearcher

- (instancetype)initWithOrgApacheLuceneSearchSearchableArray:(IOSObjectArray *)searchables {
  OrgApacheLuceneSearchMultiSearcher_initWithOrgApacheLuceneSearchSearchableArray_(self, searchables);
  return self;
}

- (IOSObjectArray *)getSearchables {
  return searchables_;
}

- (IOSIntArray *)getStarts {
  return starts_;
}

- (void)close {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(searchables_))->size_; i++) [((id<OrgApacheLuceneSearchSearchable>) nil_chk(IOSObjectArray_Get(searchables_, i))) close];
}

- (jint)docFreqWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  jint docFreq = 0;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(searchables_))->size_; i++) docFreq += [((id<OrgApacheLuceneSearchSearchable>) nil_chk(IOSObjectArray_Get(searchables_, i))) docFreqWithOrgApacheLuceneIndexTerm:term];
  return docFreq;
}

- (OrgApacheLuceneDocumentDocument *)docWithInt:(jint)n {
  jint i = [self subSearcherWithInt:n];
  return [((id<OrgApacheLuceneSearchSearchable>) nil_chk(IOSObjectArray_Get(nil_chk(searchables_), i))) docWithInt:n - IOSIntArray_Get(nil_chk(starts_), i)];
}

- (OrgApacheLuceneDocumentDocument *)docWithInt:(jint)n
       withOrgApacheLuceneDocumentFieldSelector:(id<OrgApacheLuceneDocumentFieldSelector>)fieldSelector {
  jint i = [self subSearcherWithInt:n];
  return [((id<OrgApacheLuceneSearchSearchable>) nil_chk(IOSObjectArray_Get(nil_chk(searchables_), i))) docWithInt:n - IOSIntArray_Get(nil_chk(starts_), i) withOrgApacheLuceneDocumentFieldSelector:fieldSelector];
}

- (jint)subSearcherWithInt:(jint)n {
  return OrgApacheLuceneUtilReaderUtil_subIndexWithInt_withIntArray_(n, starts_);
}

- (jint)subDocWithInt:(jint)n {
  return n - IOSIntArray_Get(nil_chk(starts_), [self subSearcherWithInt:n]);
}

- (jint)maxDoc {
  return maxDoc_;
}

- (OrgApacheLuceneSearchTopDocs *)searchWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                                        withOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
                                                                withInt:(jint)nDocs {
  nDocs = JavaLangMath_minWithInt_withInt_(nDocs, [self maxDoc]);
  OrgApacheLuceneSearchHitQueue *hq = create_OrgApacheLuceneSearchHitQueue_initWithInt_withBoolean_(nDocs, false);
  jint totalHits = 0;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(searchables_))->size_; i++) {
    OrgApacheLuceneSearchTopDocs *docs = [create_OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort_initWithJavaUtilConcurrentLocksLock_withOrgApacheLuceneSearchSearchable_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchFilter_withInt_withOrgApacheLuceneSearchHitQueue_withInt_withIntArray_(JreLoadStatic(OrgApacheLuceneUtilDummyConcurrentLock, INSTANCE), IOSObjectArray_Get(searchables_, i), weight, filter, nDocs, hq, i, starts_) call];
    totalHits += ((OrgApacheLuceneSearchTopDocs *) nil_chk(docs))->totalHits_;
  }
  IOSObjectArray *scoreDocs = [IOSObjectArray arrayWithLength:[hq size] type:OrgApacheLuceneSearchScoreDoc_class_()];
  for (jint i = [hq size] - 1; i >= 0; i--) IOSObjectArray_Set(scoreDocs, i, [hq pop]);
  jfloat maxScore = (totalHits == 0) ? JavaLangFloat_NEGATIVE_INFINITY : ((OrgApacheLuceneSearchScoreDoc *) nil_chk(IOSObjectArray_Get(scoreDocs, 0)))->score_;
  return create_OrgApacheLuceneSearchTopDocs_initWithInt_withOrgApacheLuceneSearchScoreDocArray_withFloat_(totalHits, scoreDocs, maxScore);
}

- (OrgApacheLuceneSearchTopFieldDocs *)searchWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                                             withOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
                                                                     withInt:(jint)n
                                               withOrgApacheLuceneSearchSort:(OrgApacheLuceneSearchSort *)sort {
  n = JavaLangMath_minWithInt_withInt_(n, [self maxDoc]);
  OrgApacheLuceneSearchFieldDocSortedHitQueue *hq = create_OrgApacheLuceneSearchFieldDocSortedHitQueue_initWithInt_(n);
  jint totalHits = 0;
  jfloat maxScore = JavaLangFloat_NEGATIVE_INFINITY;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(searchables_))->size_; i++) {
    OrgApacheLuceneSearchTopFieldDocs *docs = [create_OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort_initWithJavaUtilConcurrentLocksLock_withOrgApacheLuceneSearchSearchable_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchFilter_withInt_withOrgApacheLuceneSearchFieldDocSortedHitQueue_withOrgApacheLuceneSearchSort_withInt_withIntArray_(JreLoadStatic(OrgApacheLuceneUtilDummyConcurrentLock, INSTANCE), IOSObjectArray_Get(searchables_, i), weight, filter, n, hq, sort, i, starts_) call];
    totalHits += ((OrgApacheLuceneSearchTopFieldDocs *) nil_chk(docs))->totalHits_;
    maxScore = JavaLangMath_maxWithFloat_withFloat_(maxScore, [docs getMaxScore]);
  }
  IOSObjectArray *scoreDocs = [IOSObjectArray arrayWithLength:[hq size] type:OrgApacheLuceneSearchScoreDoc_class_()];
  for (jint i = [hq size] - 1; i >= 0; i--) IOSObjectArray_Set(scoreDocs, i, [hq pop]);
  return create_OrgApacheLuceneSearchTopFieldDocs_initWithInt_withOrgApacheLuceneSearchScoreDocArray_withOrgApacheLuceneSearchSortFieldArray_withFloat_(totalHits, scoreDocs, [hq getFields], maxScore);
}

- (void)searchWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
              withOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
           withOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)collector {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(searchables_))->size_; i++) {
    jint start = IOSIntArray_Get(nil_chk(starts_), i);
    OrgApacheLuceneSearchCollector *hc = create_OrgApacheLuceneSearchMultiSearcher_1_initWithOrgApacheLuceneSearchCollector_withInt_(collector, start);
    [((id<OrgApacheLuceneSearchSearchable>) nil_chk(IOSObjectArray_Get(nil_chk(searchables_), i))) searchWithOrgApacheLuceneSearchWeight:weight withOrgApacheLuceneSearchFilter:filter withOrgApacheLuceneSearchCollector:hc];
  }
}

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)original {
  IOSObjectArray *queries = [IOSObjectArray arrayWithLength:((IOSObjectArray *) nil_chk(searchables_))->size_ type:OrgApacheLuceneSearchQuery_class_()];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(searchables_))->size_; i++) {
    IOSObjectArray_Set(queries, i, [((id<OrgApacheLuceneSearchSearchable>) nil_chk(IOSObjectArray_Get(searchables_, i))) rewriteWithOrgApacheLuceneSearchQuery:original]);
  }
  return [((OrgApacheLuceneSearchQuery *) nil_chk(IOSObjectArray_Get(queries, 0))) combineWithOrgApacheLuceneSearchQueryArray:queries];
}

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                                                                     withInt:(jint)doc {
  jint i = [self subSearcherWithInt:doc];
  return [((id<OrgApacheLuceneSearchSearchable>) nil_chk(IOSObjectArray_Get(nil_chk(searchables_), i))) explainWithOrgApacheLuceneSearchWeight:weight withInt:doc - IOSIntArray_Get(nil_chk(starts_), i)];
}

- (OrgApacheLuceneSearchWeight *)createNormalizedWeightWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)original {
  OrgApacheLuceneSearchQuery *rewrittenQuery = [self rewriteWithOrgApacheLuceneSearchQuery:original];
  id<JavaUtilSet> terms = create_JavaUtilHashSet_init();
  [((OrgApacheLuceneSearchQuery *) nil_chk(rewrittenQuery)) extractTermsWithJavaUtilSet:terms];
  id<JavaUtilMap> dfMap = [self createDocFrequencyMapWithJavaUtilSet:terms];
  jint numDocs = [self maxDoc];
  OrgApacheLuceneSearchMultiSearcher_CachedDfSource *cacheSim = create_OrgApacheLuceneSearchMultiSearcher_CachedDfSource_initWithJavaUtilMap_withInt_withOrgApacheLuceneSearchSimilarity_(dfMap, numDocs, [self getSimilarity]);
  return [cacheSim createNormalizedWeightWithOrgApacheLuceneSearchQuery:rewrittenQuery];
}

- (id<JavaUtilMap>)createDocFrequencyMapWithJavaUtilSet:(id<JavaUtilSet>)terms {
  IOSObjectArray *allTermsArray = [((id<JavaUtilSet>) nil_chk(terms)) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[terms size] type:OrgApacheLuceneIndexTerm_class_()]];
  IOSIntArray *aggregatedDfs = [IOSIntArray arrayWithLength:((IOSObjectArray *) nil_chk(allTermsArray))->size_];
  {
    IOSObjectArray *a__ = searchables_;
    id<OrgApacheLuceneSearchSearchable> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<OrgApacheLuceneSearchSearchable> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<OrgApacheLuceneSearchSearchable> searchable = *b__++;
      IOSIntArray *dfs = [((id<OrgApacheLuceneSearchSearchable>) nil_chk(searchable)) docFreqsWithOrgApacheLuceneIndexTermArray:allTermsArray];
      for (jint j = 0; j < aggregatedDfs->size_; j++) {
        *IOSIntArray_GetRef(aggregatedDfs, j) += IOSIntArray_Get(nil_chk(dfs), j);
      }
    }
  }
  JavaUtilHashMap *dfMap = create_JavaUtilHashMap_init();
  for (jint i = 0; i < allTermsArray->size_; i++) {
    [dfMap putWithId:IOSObjectArray_Get(allTermsArray, i) withId:JavaLangInteger_valueOfWithInt_(IOSIntArray_Get(aggregatedDfs, i))];
  }
  return dfMap;
}

- (void)dealloc {
  RELEASE_(searchables_);
  RELEASE_(starts_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x81, -1, 0, 1, -1, -1, -1 },
    { NULL, "[LOrgApacheLuceneSearchSearchable;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentDocument;", 0x1, 4, 5, 6, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentDocument;", 0x1, 4, 7, 6, -1, -1, -1 },
    { NULL, "I", 0x1, 8, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 9, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchTopDocs;", 0x1, 10, 11, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchTopFieldDocs;", 0x1, 10, 12, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 13, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 14, 15, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchExplanation;", 0x1, 16, 17, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchWeight;", 0x1, 18, 15, 1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x0, 19, 20, 1, 21, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchSearchableArray:);
  methods[1].selector = @selector(getSearchables);
  methods[2].selector = @selector(getStarts);
  methods[3].selector = @selector(close);
  methods[4].selector = @selector(docFreqWithOrgApacheLuceneIndexTerm:);
  methods[5].selector = @selector(docWithInt:);
  methods[6].selector = @selector(docWithInt:withOrgApacheLuceneDocumentFieldSelector:);
  methods[7].selector = @selector(subSearcherWithInt:);
  methods[8].selector = @selector(subDocWithInt:);
  methods[9].selector = @selector(maxDoc);
  methods[10].selector = @selector(searchWithOrgApacheLuceneSearchWeight:withOrgApacheLuceneSearchFilter:withInt:);
  methods[11].selector = @selector(searchWithOrgApacheLuceneSearchWeight:withOrgApacheLuceneSearchFilter:withInt:withOrgApacheLuceneSearchSort:);
  methods[12].selector = @selector(searchWithOrgApacheLuceneSearchWeight:withOrgApacheLuceneSearchFilter:withOrgApacheLuceneSearchCollector:);
  methods[13].selector = @selector(rewriteWithOrgApacheLuceneSearchQuery:);
  methods[14].selector = @selector(explainWithOrgApacheLuceneSearchWeight:withInt:);
  methods[15].selector = @selector(createNormalizedWeightWithOrgApacheLuceneSearchQuery:);
  methods[16].selector = @selector(createDocFrequencyMapWithJavaUtilSet:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "searchables_", "[LOrgApacheLuceneSearchSearchable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "starts_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "maxDoc_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LOrgApacheLuceneSearchSearchable;", "LJavaIoIOException;", "docFreq", "LOrgApacheLuceneIndexTerm;", "doc", "I", "LOrgApacheLuceneIndexCorruptIndexException;LJavaIoIOException;", "ILOrgApacheLuceneDocumentFieldSelector;", "subSearcher", "subDoc", "search", "LOrgApacheLuceneSearchWeight;LOrgApacheLuceneSearchFilter;I", "LOrgApacheLuceneSearchWeight;LOrgApacheLuceneSearchFilter;ILOrgApacheLuceneSearchSort;", "LOrgApacheLuceneSearchWeight;LOrgApacheLuceneSearchFilter;LOrgApacheLuceneSearchCollector;", "rewrite", "LOrgApacheLuceneSearchQuery;", "explain", "LOrgApacheLuceneSearchWeight;I", "createNormalizedWeight", "createDocFrequencyMap", "LJavaUtilSet;", "(Ljava/util/Set<Lorg/apache/lucene/index/Term;>;)Ljava/util/Map<Lorg/apache/lucene/index/Term;Ljava/lang/Integer;>;", "LOrgApacheLuceneSearchMultiSearcher_CachedDfSource;LOrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort;LOrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort;", (void *)&OrgApacheLuceneSearchMultiSearcher__Annotations$0 };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchMultiSearcher = { "MultiSearcher", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x1, 17, 3, -1, 22, -1, -1, 23 };
  return &_OrgApacheLuceneSearchMultiSearcher;
}

@end

void OrgApacheLuceneSearchMultiSearcher_initWithOrgApacheLuceneSearchSearchableArray_(OrgApacheLuceneSearchMultiSearcher *self, IOSObjectArray *searchables) {
  OrgApacheLuceneSearchSearcher_init(self);
  self->maxDoc_ = 0;
  JreStrongAssign(&self->searchables_, searchables);
  JreStrongAssignAndConsume(&self->starts_, [IOSIntArray newArrayWithLength:((IOSObjectArray *) nil_chk(searchables))->size_ + 1]);
  for (jint i = 0; i < searchables->size_; i++) {
    *IOSIntArray_GetRef(nil_chk(self->starts_), i) = self->maxDoc_;
    self->maxDoc_ += [((id<OrgApacheLuceneSearchSearchable>) nil_chk(IOSObjectArray_Get(searchables, i))) maxDoc];
  }
  *IOSIntArray_GetRef(nil_chk(self->starts_), searchables->size_) = self->maxDoc_;
}

OrgApacheLuceneSearchMultiSearcher *new_OrgApacheLuceneSearchMultiSearcher_initWithOrgApacheLuceneSearchSearchableArray_(IOSObjectArray *searchables) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchMultiSearcher, initWithOrgApacheLuceneSearchSearchableArray_, searchables)
}

OrgApacheLuceneSearchMultiSearcher *create_OrgApacheLuceneSearchMultiSearcher_initWithOrgApacheLuceneSearchSearchableArray_(IOSObjectArray *searchables) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchMultiSearcher, initWithOrgApacheLuceneSearchSearchableArray_, searchables)
}

IOSObjectArray *OrgApacheLuceneSearchMultiSearcher__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchMultiSearcher)

@implementation OrgApacheLuceneSearchMultiSearcher_CachedDfSource

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)dfMap
                            withInt:(jint)maxDoc
withOrgApacheLuceneSearchSimilarity:(OrgApacheLuceneSearchSimilarity *)similarity {
  OrgApacheLuceneSearchMultiSearcher_CachedDfSource_initWithJavaUtilMap_withInt_withOrgApacheLuceneSearchSimilarity_(self, dfMap, maxDoc, similarity);
  return self;
}

- (jint)docFreqWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  jint df;
  @try {
    df = [((JavaLangInteger *) nil_chk([((id<JavaUtilMap>) nil_chk(dfMap_)) getWithId:term])) intValue];
  }
  @catch (JavaLangNullPointerException *e) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"df for term ", [((OrgApacheLuceneIndexTerm *) nil_chk(term)) text], @" not available"));
  }
  return df;
}

- (IOSIntArray *)docFreqsWithOrgApacheLuceneIndexTermArray:(IOSObjectArray *)terms {
  IOSIntArray *result = [IOSIntArray arrayWithLength:((IOSObjectArray *) nil_chk(terms))->size_];
  for (jint i = 0; i < terms->size_; i++) {
    *IOSIntArray_GetRef(result, i) = [self docFreqWithOrgApacheLuceneIndexTerm:IOSObjectArray_Get(terms, i)];
  }
  return result;
}

- (jint)maxDoc {
  return maxDoc_;
}

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query {
  return query;
}

- (void)close {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (OrgApacheLuceneDocumentDocument *)docWithInt:(jint)i {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (OrgApacheLuceneDocumentDocument *)docWithInt:(jint)i
       withOrgApacheLuceneDocumentFieldSelector:(id<OrgApacheLuceneDocumentFieldSelector>)fieldSelector {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                                                                     withInt:(jint)doc {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)searchWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
              withOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
           withOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)results {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (OrgApacheLuceneSearchTopDocs *)searchWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                                        withOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
                                                                withInt:(jint)n {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (OrgApacheLuceneSearchTopFieldDocs *)searchWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                                             withOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
                                                                     withInt:(jint)n
                                               withOrgApacheLuceneSearchSort:(OrgApacheLuceneSearchSort *)sort {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)dealloc {
  RELEASE_(dfMap_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentDocument;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentDocument;", 0x1, 8, 10, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchExplanation;", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchTopDocs;", 0x1, 13, 15, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchTopFieldDocs;", 0x1, 13, 16, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilMap:withInt:withOrgApacheLuceneSearchSimilarity:);
  methods[1].selector = @selector(docFreqWithOrgApacheLuceneIndexTerm:);
  methods[2].selector = @selector(docFreqsWithOrgApacheLuceneIndexTermArray:);
  methods[3].selector = @selector(maxDoc);
  methods[4].selector = @selector(rewriteWithOrgApacheLuceneSearchQuery:);
  methods[5].selector = @selector(close);
  methods[6].selector = @selector(docWithInt:);
  methods[7].selector = @selector(docWithInt:withOrgApacheLuceneDocumentFieldSelector:);
  methods[8].selector = @selector(explainWithOrgApacheLuceneSearchWeight:withInt:);
  methods[9].selector = @selector(searchWithOrgApacheLuceneSearchWeight:withOrgApacheLuceneSearchFilter:withOrgApacheLuceneSearchCollector:);
  methods[10].selector = @selector(searchWithOrgApacheLuceneSearchWeight:withOrgApacheLuceneSearchFilter:withInt:);
  methods[11].selector = @selector(searchWithOrgApacheLuceneSearchWeight:withOrgApacheLuceneSearchFilter:withInt:withOrgApacheLuceneSearchSort:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "dfMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 17, -1 },
    { "maxDoc_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilMap;ILOrgApacheLuceneSearchSimilarity;", "(Ljava/util/Map<Lorg/apache/lucene/index/Term;Ljava/lang/Integer;>;ILorg/apache/lucene/search/Similarity;)V", "docFreq", "LOrgApacheLuceneIndexTerm;", "docFreqs", "[LOrgApacheLuceneIndexTerm;", "rewrite", "LOrgApacheLuceneSearchQuery;", "doc", "I", "ILOrgApacheLuceneDocumentFieldSelector;", "explain", "LOrgApacheLuceneSearchWeight;I", "search", "LOrgApacheLuceneSearchWeight;LOrgApacheLuceneSearchFilter;LOrgApacheLuceneSearchCollector;", "LOrgApacheLuceneSearchWeight;LOrgApacheLuceneSearchFilter;I", "LOrgApacheLuceneSearchWeight;LOrgApacheLuceneSearchFilter;ILOrgApacheLuceneSearchSort;", "Ljava/util/Map<Lorg/apache/lucene/index/Term;Ljava/lang/Integer;>;", "LOrgApacheLuceneSearchMultiSearcher;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchMultiSearcher_CachedDfSource = { "CachedDfSource", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0xa, 12, 2, 18, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchMultiSearcher_CachedDfSource;
}

@end

void OrgApacheLuceneSearchMultiSearcher_CachedDfSource_initWithJavaUtilMap_withInt_withOrgApacheLuceneSearchSimilarity_(OrgApacheLuceneSearchMultiSearcher_CachedDfSource *self, id<JavaUtilMap> dfMap, jint maxDoc, OrgApacheLuceneSearchSimilarity *similarity) {
  OrgApacheLuceneSearchSearcher_init(self);
  JreStrongAssign(&self->dfMap_, dfMap);
  self->maxDoc_ = maxDoc;
  [self setSimilarityWithOrgApacheLuceneSearchSimilarity:similarity];
}

OrgApacheLuceneSearchMultiSearcher_CachedDfSource *new_OrgApacheLuceneSearchMultiSearcher_CachedDfSource_initWithJavaUtilMap_withInt_withOrgApacheLuceneSearchSimilarity_(id<JavaUtilMap> dfMap, jint maxDoc, OrgApacheLuceneSearchSimilarity *similarity) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchMultiSearcher_CachedDfSource, initWithJavaUtilMap_withInt_withOrgApacheLuceneSearchSimilarity_, dfMap, maxDoc, similarity)
}

OrgApacheLuceneSearchMultiSearcher_CachedDfSource *create_OrgApacheLuceneSearchMultiSearcher_CachedDfSource_initWithJavaUtilMap_withInt_withOrgApacheLuceneSearchSimilarity_(id<JavaUtilMap> dfMap, jint maxDoc, OrgApacheLuceneSearchSimilarity *similarity) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchMultiSearcher_CachedDfSource, initWithJavaUtilMap_withInt_withOrgApacheLuceneSearchSimilarity_, dfMap, maxDoc, similarity)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchMultiSearcher_CachedDfSource)

@implementation OrgApacheLuceneSearchMultiSearcher_1

- (instancetype)initWithOrgApacheLuceneSearchCollector:(OrgApacheLuceneSearchCollector *)capture$0
                                               withInt:(jint)capture$1 {
  OrgApacheLuceneSearchMultiSearcher_1_initWithOrgApacheLuceneSearchCollector_withInt_(self, capture$0, capture$1);
  return self;
}

- (void)setScorerWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)scorer {
  [((OrgApacheLuceneSearchCollector *) nil_chk(val$collector_)) setScorerWithOrgApacheLuceneSearchScorer:scorer];
}

- (void)collectWithInt:(jint)doc {
  [((OrgApacheLuceneSearchCollector *) nil_chk(val$collector_)) collectWithInt:doc];
}

- (void)setNextReaderWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                 withInt:(jint)docBase {
  [((OrgApacheLuceneSearchCollector *) nil_chk(val$collector_)) setNextReaderWithOrgApacheLuceneIndexIndexReader:reader withInt:val$start_ + docBase];
}

- (jboolean)acceptsDocsOutOfOrder {
  return [((OrgApacheLuceneSearchCollector *) nil_chk(val$collector_)) acceptsDocsOutOfOrder];
}

- (void)dealloc {
  RELEASE_(val$collector_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 2, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchCollector:withInt:);
  methods[1].selector = @selector(setScorerWithOrgApacheLuceneSearchScorer:);
  methods[2].selector = @selector(collectWithInt:);
  methods[3].selector = @selector(setNextReaderWithOrgApacheLuceneIndexIndexReader:withInt:);
  methods[4].selector = @selector(acceptsDocsOutOfOrder);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$collector_", "LOrgApacheLuceneSearchCollector;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$start_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setScorer", "LOrgApacheLuceneSearchScorer;", "LJavaIoIOException;", "collect", "I", "setNextReader", "LOrgApacheLuceneIndexIndexReader;I", "LOrgApacheLuceneSearchMultiSearcher;", "searchWithOrgApacheLuceneSearchWeight:withOrgApacheLuceneSearchFilter:withOrgApacheLuceneSearchCollector:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchMultiSearcher_1 = { "", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x8018, 5, 2, 7, -1, 8, -1, -1 };
  return &_OrgApacheLuceneSearchMultiSearcher_1;
}

@end

void OrgApacheLuceneSearchMultiSearcher_1_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchMultiSearcher_1 *self, OrgApacheLuceneSearchCollector *capture$0, jint capture$1) {
  JreStrongAssign(&self->val$collector_, capture$0);
  self->val$start_ = capture$1;
  OrgApacheLuceneSearchCollector_init(self);
}

OrgApacheLuceneSearchMultiSearcher_1 *new_OrgApacheLuceneSearchMultiSearcher_1_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCollector *capture$0, jint capture$1) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchMultiSearcher_1, initWithOrgApacheLuceneSearchCollector_withInt_, capture$0, capture$1)
}

OrgApacheLuceneSearchMultiSearcher_1 *create_OrgApacheLuceneSearchMultiSearcher_1_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCollector *capture$0, jint capture$1) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchMultiSearcher_1, initWithOrgApacheLuceneSearchCollector_withInt_, capture$0, capture$1)
}

@implementation OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort

- (instancetype)initWithJavaUtilConcurrentLocksLock:(id<JavaUtilConcurrentLocksLock>)lock
                withOrgApacheLuceneSearchSearchable:(id<OrgApacheLuceneSearchSearchable>)searchable
                    withOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                    withOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
                                            withInt:(jint)nDocs
                  withOrgApacheLuceneSearchHitQueue:(OrgApacheLuceneSearchHitQueue *)hq
                                            withInt:(jint)i
                                       withIntArray:(IOSIntArray *)starts {
  OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort_initWithJavaUtilConcurrentLocksLock_withOrgApacheLuceneSearchSearchable_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchFilter_withInt_withOrgApacheLuceneSearchHitQueue_withInt_withIntArray_(self, lock, searchable, weight, filter, nDocs, hq, i, starts);
  return self;
}

- (OrgApacheLuceneSearchTopDocs *)call {
  OrgApacheLuceneSearchTopDocs *docs = [((id<OrgApacheLuceneSearchSearchable>) nil_chk(searchable_)) searchWithOrgApacheLuceneSearchWeight:weight_ withOrgApacheLuceneSearchFilter:filter_ withInt:nDocs_];
  IOSObjectArray *scoreDocs = ((OrgApacheLuceneSearchTopDocs *) nil_chk(docs))->scoreDocs_;
  for (jint j = 0; j < ((IOSObjectArray *) nil_chk(scoreDocs))->size_; j++) {
    OrgApacheLuceneSearchScoreDoc *scoreDoc = IOSObjectArray_Get(scoreDocs, j);
    ((OrgApacheLuceneSearchScoreDoc *) nil_chk(scoreDoc))->doc_ += IOSIntArray_Get(nil_chk(starts_), i_);
    [((id<JavaUtilConcurrentLocksLock>) nil_chk(lock_)) lock];
    @try {
      if (scoreDoc == [((OrgApacheLuceneSearchHitQueue *) nil_chk(hq_)) insertWithOverflowWithId:scoreDoc]) break;
    }
    @finally {
      [lock_ unlock];
    }
  }
  return docs;
}

- (void)dealloc {
  RELEASE_(lock_);
  RELEASE_(searchable_);
  RELEASE_(weight_);
  RELEASE_(filter_);
  RELEASE_(hq_);
  RELEASE_(starts_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchTopDocs;", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilConcurrentLocksLock:withOrgApacheLuceneSearchSearchable:withOrgApacheLuceneSearchWeight:withOrgApacheLuceneSearchFilter:withInt:withOrgApacheLuceneSearchHitQueue:withInt:withIntArray:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "lock_", "LJavaUtilConcurrentLocksLock;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "searchable_", "LOrgApacheLuceneSearchSearchable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "weight_", "LOrgApacheLuceneSearchWeight;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "filter_", "LOrgApacheLuceneSearchFilter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "nDocs_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "i_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "hq_", "LOrgApacheLuceneSearchHitQueue;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "starts_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentLocksLock;LOrgApacheLuceneSearchSearchable;LOrgApacheLuceneSearchWeight;LOrgApacheLuceneSearchFilter;ILOrgApacheLuceneSearchHitQueue;I[I", "LJavaIoIOException;", "LOrgApacheLuceneSearchMultiSearcher;", "Ljava/lang/Object;Ljava/util/concurrent/Callable<Lorg/apache/lucene/search/TopDocs;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort = { "MultiSearcherCallableNoSort", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x18, 2, 8, 2, -1, -1, 3, -1 };
  return &_OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort;
}

@end

void OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort_initWithJavaUtilConcurrentLocksLock_withOrgApacheLuceneSearchSearchable_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchFilter_withInt_withOrgApacheLuceneSearchHitQueue_withInt_withIntArray_(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort *self, id<JavaUtilConcurrentLocksLock> lock, id<OrgApacheLuceneSearchSearchable> searchable, OrgApacheLuceneSearchWeight *weight, OrgApacheLuceneSearchFilter *filter, jint nDocs, OrgApacheLuceneSearchHitQueue *hq, jint i, IOSIntArray *starts) {
  NSObject_init(self);
  JreStrongAssign(&self->lock_, lock);
  JreStrongAssign(&self->searchable_, searchable);
  JreStrongAssign(&self->weight_, weight);
  JreStrongAssign(&self->filter_, filter);
  self->nDocs_ = nDocs;
  JreStrongAssign(&self->hq_, hq);
  self->i_ = i;
  JreStrongAssign(&self->starts_, starts);
}

OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort *new_OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort_initWithJavaUtilConcurrentLocksLock_withOrgApacheLuceneSearchSearchable_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchFilter_withInt_withOrgApacheLuceneSearchHitQueue_withInt_withIntArray_(id<JavaUtilConcurrentLocksLock> lock, id<OrgApacheLuceneSearchSearchable> searchable, OrgApacheLuceneSearchWeight *weight, OrgApacheLuceneSearchFilter *filter, jint nDocs, OrgApacheLuceneSearchHitQueue *hq, jint i, IOSIntArray *starts) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort, initWithJavaUtilConcurrentLocksLock_withOrgApacheLuceneSearchSearchable_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchFilter_withInt_withOrgApacheLuceneSearchHitQueue_withInt_withIntArray_, lock, searchable, weight, filter, nDocs, hq, i, starts)
}

OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort *create_OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort_initWithJavaUtilConcurrentLocksLock_withOrgApacheLuceneSearchSearchable_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchFilter_withInt_withOrgApacheLuceneSearchHitQueue_withInt_withIntArray_(id<JavaUtilConcurrentLocksLock> lock, id<OrgApacheLuceneSearchSearchable> searchable, OrgApacheLuceneSearchWeight *weight, OrgApacheLuceneSearchFilter *filter, jint nDocs, OrgApacheLuceneSearchHitQueue *hq, jint i, IOSIntArray *starts) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort, initWithJavaUtilConcurrentLocksLock_withOrgApacheLuceneSearchSearchable_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchFilter_withInt_withOrgApacheLuceneSearchHitQueue_withInt_withIntArray_, lock, searchable, weight, filter, nDocs, hq, i, starts)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableNoSort)

@implementation OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort

- (instancetype)initWithJavaUtilConcurrentLocksLock:(id<JavaUtilConcurrentLocksLock>)lock
                withOrgApacheLuceneSearchSearchable:(id<OrgApacheLuceneSearchSearchable>)searchable
                    withOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                    withOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
                                            withInt:(jint)nDocs
    withOrgApacheLuceneSearchFieldDocSortedHitQueue:(OrgApacheLuceneSearchFieldDocSortedHitQueue *)hq
                      withOrgApacheLuceneSearchSort:(OrgApacheLuceneSearchSort *)sort
                                            withInt:(jint)i
                                       withIntArray:(IOSIntArray *)starts {
  OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort_initWithJavaUtilConcurrentLocksLock_withOrgApacheLuceneSearchSearchable_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchFilter_withInt_withOrgApacheLuceneSearchFieldDocSortedHitQueue_withOrgApacheLuceneSearchSort_withInt_withIntArray_(self, lock, searchable, weight, filter, nDocs, hq, sort, i, starts);
  return self;
}

- (OrgApacheLuceneSearchTopFieldDocs *)call {
  OrgApacheLuceneSearchTopFieldDocs *docs = [((id<OrgApacheLuceneSearchSearchable>) nil_chk(searchable_)) searchWithOrgApacheLuceneSearchWeight:weight_ withOrgApacheLuceneSearchFilter:filter_ withInt:nDocs_ withOrgApacheLuceneSearchSort:sort_];
  for (jint j = 0; j < ((IOSObjectArray *) nil_chk(((OrgApacheLuceneSearchTopFieldDocs *) nil_chk(docs))->fields_))->size_; j++) {
    if ([((OrgApacheLuceneSearchSortField *) nil_chk(IOSObjectArray_Get(docs->fields_, j))) getType] == OrgApacheLuceneSearchSortField_DOC) {
      for (jint j2 = 0; j2 < ((IOSObjectArray *) nil_chk(docs->scoreDocs_))->size_; j2++) {
        OrgApacheLuceneSearchFieldDoc *fd = (OrgApacheLuceneSearchFieldDoc *) cast_chk(IOSObjectArray_Get(docs->scoreDocs_, j2), [OrgApacheLuceneSearchFieldDoc class]);
        IOSObjectArray_Set(nil_chk(((OrgApacheLuceneSearchFieldDoc *) nil_chk(fd))->fields_), j, JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(IOSObjectArray_Get(fd->fields_, j), [JavaLangInteger class])))) intValue] + IOSIntArray_Get(nil_chk(starts_), i_)));
      }
      break;
    }
  }
  [((id<JavaUtilConcurrentLocksLock>) nil_chk(lock_)) lock];
  @try {
    [((OrgApacheLuceneSearchFieldDocSortedHitQueue *) nil_chk(hq_)) setFieldsWithOrgApacheLuceneSearchSortFieldArray:docs->fields_];
  }
  @finally {
    [lock_ unlock];
  }
  IOSObjectArray *scoreDocs = docs->scoreDocs_;
  for (jint j = 0; j < ((IOSObjectArray *) nil_chk(scoreDocs))->size_; j++) {
    OrgApacheLuceneSearchFieldDoc *fieldDoc = (OrgApacheLuceneSearchFieldDoc *) cast_chk(IOSObjectArray_Get(scoreDocs, j), [OrgApacheLuceneSearchFieldDoc class]);
    ((OrgApacheLuceneSearchFieldDoc *) nil_chk(fieldDoc))->doc_ += IOSIntArray_Get(nil_chk(starts_), i_);
    [lock_ lock];
    @try {
      if (fieldDoc == [hq_ insertWithOverflowWithId:fieldDoc]) break;
    }
    @finally {
      [lock_ unlock];
    }
  }
  return docs;
}

- (void)dealloc {
  RELEASE_(lock_);
  RELEASE_(searchable_);
  RELEASE_(weight_);
  RELEASE_(filter_);
  RELEASE_(hq_);
  RELEASE_(starts_);
  RELEASE_(sort_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchTopFieldDocs;", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilConcurrentLocksLock:withOrgApacheLuceneSearchSearchable:withOrgApacheLuceneSearchWeight:withOrgApacheLuceneSearchFilter:withInt:withOrgApacheLuceneSearchFieldDocSortedHitQueue:withOrgApacheLuceneSearchSort:withInt:withIntArray:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "lock_", "LJavaUtilConcurrentLocksLock;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "searchable_", "LOrgApacheLuceneSearchSearchable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "weight_", "LOrgApacheLuceneSearchWeight;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "filter_", "LOrgApacheLuceneSearchFilter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "nDocs_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "i_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "hq_", "LOrgApacheLuceneSearchFieldDocSortedHitQueue;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "starts_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "sort_", "LOrgApacheLuceneSearchSort;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentLocksLock;LOrgApacheLuceneSearchSearchable;LOrgApacheLuceneSearchWeight;LOrgApacheLuceneSearchFilter;ILOrgApacheLuceneSearchFieldDocSortedHitQueue;LOrgApacheLuceneSearchSort;I[I", "LJavaIoIOException;", "LOrgApacheLuceneSearchMultiSearcher;", "Ljava/lang/Object;Ljava/util/concurrent/Callable<Lorg/apache/lucene/search/TopFieldDocs;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort = { "MultiSearcherCallableWithSort", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x18, 2, 9, 2, -1, -1, 3, -1 };
  return &_OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort;
}

@end

void OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort_initWithJavaUtilConcurrentLocksLock_withOrgApacheLuceneSearchSearchable_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchFilter_withInt_withOrgApacheLuceneSearchFieldDocSortedHitQueue_withOrgApacheLuceneSearchSort_withInt_withIntArray_(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort *self, id<JavaUtilConcurrentLocksLock> lock, id<OrgApacheLuceneSearchSearchable> searchable, OrgApacheLuceneSearchWeight *weight, OrgApacheLuceneSearchFilter *filter, jint nDocs, OrgApacheLuceneSearchFieldDocSortedHitQueue *hq, OrgApacheLuceneSearchSort *sort, jint i, IOSIntArray *starts) {
  NSObject_init(self);
  JreStrongAssign(&self->lock_, lock);
  JreStrongAssign(&self->searchable_, searchable);
  JreStrongAssign(&self->weight_, weight);
  JreStrongAssign(&self->filter_, filter);
  self->nDocs_ = nDocs;
  JreStrongAssign(&self->hq_, hq);
  self->i_ = i;
  JreStrongAssign(&self->starts_, starts);
  JreStrongAssign(&self->sort_, sort);
}

OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort *new_OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort_initWithJavaUtilConcurrentLocksLock_withOrgApacheLuceneSearchSearchable_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchFilter_withInt_withOrgApacheLuceneSearchFieldDocSortedHitQueue_withOrgApacheLuceneSearchSort_withInt_withIntArray_(id<JavaUtilConcurrentLocksLock> lock, id<OrgApacheLuceneSearchSearchable> searchable, OrgApacheLuceneSearchWeight *weight, OrgApacheLuceneSearchFilter *filter, jint nDocs, OrgApacheLuceneSearchFieldDocSortedHitQueue *hq, OrgApacheLuceneSearchSort *sort, jint i, IOSIntArray *starts) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort, initWithJavaUtilConcurrentLocksLock_withOrgApacheLuceneSearchSearchable_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchFilter_withInt_withOrgApacheLuceneSearchFieldDocSortedHitQueue_withOrgApacheLuceneSearchSort_withInt_withIntArray_, lock, searchable, weight, filter, nDocs, hq, sort, i, starts)
}

OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort *create_OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort_initWithJavaUtilConcurrentLocksLock_withOrgApacheLuceneSearchSearchable_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchFilter_withInt_withOrgApacheLuceneSearchFieldDocSortedHitQueue_withOrgApacheLuceneSearchSort_withInt_withIntArray_(id<JavaUtilConcurrentLocksLock> lock, id<OrgApacheLuceneSearchSearchable> searchable, OrgApacheLuceneSearchWeight *weight, OrgApacheLuceneSearchFilter *filter, jint nDocs, OrgApacheLuceneSearchFieldDocSortedHitQueue *hq, OrgApacheLuceneSearchSort *sort, jint i, IOSIntArray *starts) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort, initWithJavaUtilConcurrentLocksLock_withOrgApacheLuceneSearchSearchable_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchFilter_withInt_withOrgApacheLuceneSearchFieldDocSortedHitQueue_withOrgApacheLuceneSearchSort_withInt_withIntArray_, lock, searchable, weight, filter, nDocs, hq, sort, i, starts)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchMultiSearcher_MultiSearcherCallableWithSort)
