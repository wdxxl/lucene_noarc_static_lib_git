//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/queryParser/QueryParserTokenManager.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "org/apache/lucene/queryParser/CharStream.h"
#include "org/apache/lucene/queryParser/QueryParserTokenManager.h"
#include "org/apache/lucene/queryParser/Token.h"
#include "org/apache/lucene/queryParser/TokenMgrError.h"

@interface OrgApacheLuceneQueryParserQueryParserTokenManager () {
 @public
  IOSIntArray *jjrounds_;
  IOSIntArray *jjstateSet_;
}

- (jint)jjStopStringLiteralDfa_3WithInt:(jint)pos
                               withLong:(jlong)active0;

- (jint)jjStartNfa_3WithInt:(jint)pos
                   withLong:(jlong)active0;

- (jint)jjStopAtPosWithInt:(jint)pos
                   withInt:(jint)kind;

- (jint)jjMoveStringLiteralDfa0_3;

- (jint)jjStartNfaWithStates_3WithInt:(jint)pos
                              withInt:(jint)kind
                              withInt:(jint)state;

- (jint)jjMoveNfa_3WithInt:(jint)startState
                   withInt:(jint)curPos;

- (jint)jjStopStringLiteralDfa_1WithInt:(jint)pos
                               withLong:(jlong)active0;

- (jint)jjStartNfa_1WithInt:(jint)pos
                   withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa0_1;

- (jint)jjMoveStringLiteralDfa1_1WithLong:(jlong)active0;

- (jint)jjStartNfaWithStates_1WithInt:(jint)pos
                              withInt:(jint)kind
                              withInt:(jint)state;

- (jint)jjMoveNfa_1WithInt:(jint)startState
                   withInt:(jint)curPos;

- (jint)jjMoveStringLiteralDfa0_0;

- (jint)jjMoveNfa_0WithInt:(jint)startState
                   withInt:(jint)curPos;

- (jint)jjStopStringLiteralDfa_2WithInt:(jint)pos
                               withLong:(jlong)active0;

- (jint)jjStartNfa_2WithInt:(jint)pos
                   withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa0_2;

- (jint)jjMoveStringLiteralDfa1_2WithLong:(jlong)active0;

- (jint)jjStartNfaWithStates_2WithInt:(jint)pos
                              withInt:(jint)kind
                              withInt:(jint)state;

- (jint)jjMoveNfa_2WithInt:(jint)startState
                   withInt:(jint)curPos;

+ (jboolean)jjCanMove_0WithInt:(jint)hiByte
                       withInt:(jint)i1
                       withInt:(jint)i2
                      withLong:(jlong)l1
                      withLong:(jlong)l2;

+ (jboolean)jjCanMove_1WithInt:(jint)hiByte
                       withInt:(jint)i1
                       withInt:(jint)i2
                      withLong:(jlong)l1
                      withLong:(jlong)l2;

+ (jboolean)jjCanMove_2WithInt:(jint)hiByte
                       withInt:(jint)i1
                       withInt:(jint)i2
                      withLong:(jlong)l1
                      withLong:(jlong)l2;

- (void)ReInitRounds;

- (void)jjCheckNAddWithInt:(jint)state;

- (void)jjAddStatesWithInt:(jint)start
                   withInt:(jint)end;

- (void)jjCheckNAddTwoStatesWithInt:(jint)state1
                            withInt:(jint)state2;

- (void)jjCheckNAddStatesWithInt:(jint)start
                         withInt:(jint)end;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryParserQueryParserTokenManager, jjrounds_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryParserQueryParserTokenManager, jjstateSet_, IOSIntArray *)

__attribute__((unused)) static jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopStringLiteralDfa_3WithInt_withLong_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint pos, jlong active0);

__attribute__((unused)) static jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopAtPosWithInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint pos, jint kind);

__attribute__((unused)) static jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa0_3(OrgApacheLuceneQueryParserQueryParserTokenManager *self);

__attribute__((unused)) static jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfaWithStates_3WithInt_withInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint pos, jint kind, jint state);

__attribute__((unused)) static jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_3WithInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint startState, jint curPos);

__attribute__((unused)) static jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopStringLiteralDfa_1WithInt_withLong_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint pos, jlong active0);

__attribute__((unused)) static jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfa_1WithInt_withLong_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint pos, jlong active0);

__attribute__((unused)) static jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa0_1(OrgApacheLuceneQueryParserQueryParserTokenManager *self);

__attribute__((unused)) static jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa1_1WithLong_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jlong active0);

__attribute__((unused)) static jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfaWithStates_1WithInt_withInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint pos, jint kind, jint state);

__attribute__((unused)) static jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_1WithInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint startState, jint curPos);

__attribute__((unused)) static jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa0_0(OrgApacheLuceneQueryParserQueryParserTokenManager *self);

__attribute__((unused)) static jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_0WithInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint startState, jint curPos);

__attribute__((unused)) static jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopStringLiteralDfa_2WithInt_withLong_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint pos, jlong active0);

__attribute__((unused)) static jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfa_2WithInt_withLong_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint pos, jlong active0);

__attribute__((unused)) static jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa0_2(OrgApacheLuceneQueryParserQueryParserTokenManager *self);

__attribute__((unused)) static jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jlong active0);

__attribute__((unused)) static jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfaWithStates_2WithInt_withInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint pos, jint kind, jint state);

__attribute__((unused)) static jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_2WithInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint startState, jint curPos);

__attribute__((unused)) static jboolean OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(jint hiByte, jint i1, jint i2, jlong l1, jlong l2);

__attribute__((unused)) static jboolean OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(jint hiByte, jint i1, jint i2, jlong l1, jlong l2);

__attribute__((unused)) static jboolean OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_2WithInt_withInt_withInt_withLong_withLong_(jint hiByte, jint i1, jint i2, jlong l1, jlong l2);

__attribute__((unused)) static void OrgApacheLuceneQueryParserQueryParserTokenManager_ReInitRounds(OrgApacheLuceneQueryParserQueryParserTokenManager *self);

__attribute__((unused)) static void OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint state);

__attribute__((unused)) static void OrgApacheLuceneQueryParserQueryParserTokenManager_jjAddStatesWithInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint start, jint end);

__attribute__((unused)) static void OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint state1, jint state2);

__attribute__((unused)) static void OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint start, jint end);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneQueryParserQueryParserTokenManager)

IOSLongArray *OrgApacheLuceneQueryParserQueryParserTokenManager_jjbitVec0;
IOSLongArray *OrgApacheLuceneQueryParserQueryParserTokenManager_jjbitVec1;
IOSLongArray *OrgApacheLuceneQueryParserQueryParserTokenManager_jjbitVec3;
IOSLongArray *OrgApacheLuceneQueryParserQueryParserTokenManager_jjbitVec4;
IOSIntArray *OrgApacheLuceneQueryParserQueryParserTokenManager_jjnextStates;
IOSObjectArray *OrgApacheLuceneQueryParserQueryParserTokenManager_jjstrLiteralImages;
IOSObjectArray *OrgApacheLuceneQueryParserQueryParserTokenManager_lexStateNames;
IOSIntArray *OrgApacheLuceneQueryParserQueryParserTokenManager_jjnewLexState;
IOSLongArray *OrgApacheLuceneQueryParserQueryParserTokenManager_jjtoToken;
IOSLongArray *OrgApacheLuceneQueryParserQueryParserTokenManager_jjtoSkip;

@implementation OrgApacheLuceneQueryParserQueryParserTokenManager

- (void)setDebugStreamWithJavaIoPrintStream:(JavaIoPrintStream *)ds {
  JreStrongAssign(&debugStream_, ds);
}

- (jint)jjStopStringLiteralDfa_3WithInt:(jint)pos
                               withLong:(jlong)active0 {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopStringLiteralDfa_3WithInt_withLong_(self, pos, active0);
}

- (jint)jjStartNfa_3WithInt:(jint)pos
                   withLong:(jlong)active0 {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_3WithInt_withInt_(self, OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopStringLiteralDfa_3WithInt_withLong_(self, pos, active0), pos + 1);
}

- (jint)jjStopAtPosWithInt:(jint)pos
                   withInt:(jint)kind {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopAtPosWithInt_withInt_(self, pos, kind);
}

- (jint)jjMoveStringLiteralDfa0_3 {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa0_3(self);
}

- (jint)jjStartNfaWithStates_3WithInt:(jint)pos
                              withInt:(jint)kind
                              withInt:(jint)state {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfaWithStates_3WithInt_withInt_withInt_(self, pos, kind, state);
}

- (jint)jjMoveNfa_3WithInt:(jint)startState
                   withInt:(jint)curPos {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_3WithInt_withInt_(self, startState, curPos);
}

- (jint)jjStopStringLiteralDfa_1WithInt:(jint)pos
                               withLong:(jlong)active0 {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopStringLiteralDfa_1WithInt_withLong_(self, pos, active0);
}

- (jint)jjStartNfa_1WithInt:(jint)pos
                   withLong:(jlong)active0 {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfa_1WithInt_withLong_(self, pos, active0);
}

- (jint)jjMoveStringLiteralDfa0_1 {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa0_1(self);
}

- (jint)jjMoveStringLiteralDfa1_1WithLong:(jlong)active0 {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa1_1WithLong_(self, active0);
}

- (jint)jjStartNfaWithStates_1WithInt:(jint)pos
                              withInt:(jint)kind
                              withInt:(jint)state {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfaWithStates_1WithInt_withInt_withInt_(self, pos, kind, state);
}

- (jint)jjMoveNfa_1WithInt:(jint)startState
                   withInt:(jint)curPos {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_1WithInt_withInt_(self, startState, curPos);
}

- (jint)jjMoveStringLiteralDfa0_0 {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa0_0(self);
}

- (jint)jjMoveNfa_0WithInt:(jint)startState
                   withInt:(jint)curPos {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_0WithInt_withInt_(self, startState, curPos);
}

- (jint)jjStopStringLiteralDfa_2WithInt:(jint)pos
                               withLong:(jlong)active0 {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopStringLiteralDfa_2WithInt_withLong_(self, pos, active0);
}

- (jint)jjStartNfa_2WithInt:(jint)pos
                   withLong:(jlong)active0 {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfa_2WithInt_withLong_(self, pos, active0);
}

- (jint)jjMoveStringLiteralDfa0_2 {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa0_2(self);
}

- (jint)jjMoveStringLiteralDfa1_2WithLong:(jlong)active0 {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(self, active0);
}

- (jint)jjStartNfaWithStates_2WithInt:(jint)pos
                              withInt:(jint)kind
                              withInt:(jint)state {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfaWithStates_2WithInt_withInt_withInt_(self, pos, kind, state);
}

- (jint)jjMoveNfa_2WithInt:(jint)startState
                   withInt:(jint)curPos {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_2WithInt_withInt_(self, startState, curPos);
}

+ (jboolean)jjCanMove_0WithInt:(jint)hiByte
                       withInt:(jint)i1
                       withInt:(jint)i2
                      withLong:(jlong)l1
                      withLong:(jlong)l2 {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2);
}

+ (jboolean)jjCanMove_1WithInt:(jint)hiByte
                       withInt:(jint)i1
                       withInt:(jint)i2
                      withLong:(jlong)l1
                      withLong:(jlong)l2 {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2);
}

+ (jboolean)jjCanMove_2WithInt:(jint)hiByte
                       withInt:(jint)i1
                       withInt:(jint)i2
                      withLong:(jlong)l1
                      withLong:(jlong)l2 {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_2WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2);
}

- (instancetype)initWithOrgApacheLuceneQueryParserCharStream:(id<OrgApacheLuceneQueryParserCharStream>)stream {
  OrgApacheLuceneQueryParserQueryParserTokenManager_initWithOrgApacheLuceneQueryParserCharStream_(self, stream);
  return self;
}

- (instancetype)initWithOrgApacheLuceneQueryParserCharStream:(id<OrgApacheLuceneQueryParserCharStream>)stream
                                                     withInt:(jint)lexState {
  OrgApacheLuceneQueryParserQueryParserTokenManager_initWithOrgApacheLuceneQueryParserCharStream_withInt_(self, stream, lexState);
  return self;
}

- (void)ReInitWithOrgApacheLuceneQueryParserCharStream:(id<OrgApacheLuceneQueryParserCharStream>)stream {
  jjmatchedPos_ = jjnewStateCnt_ = 0;
  curLexState_ = defaultLexState_;
  JreStrongAssign(&input_stream_, stream);
  OrgApacheLuceneQueryParserQueryParserTokenManager_ReInitRounds(self);
}

- (void)ReInitRounds {
  OrgApacheLuceneQueryParserQueryParserTokenManager_ReInitRounds(self);
}

- (void)ReInitWithOrgApacheLuceneQueryParserCharStream:(id<OrgApacheLuceneQueryParserCharStream>)stream
                                               withInt:(jint)lexState {
  [self ReInitWithOrgApacheLuceneQueryParserCharStream:stream];
  [self SwitchToWithInt:lexState];
}

- (void)SwitchToWithInt:(jint)lexState {
  if (lexState >= 4 || lexState < 0) @throw create_OrgApacheLuceneQueryParserTokenMgrError_initWithNSString_withInt_(JreStrcat("$I$", @"Error: Ignoring invalid lexical state : ", lexState, @". State unchanged."), OrgApacheLuceneQueryParserTokenMgrError_INVALID_LEXICAL_STATE);
  else curLexState_ = lexState;
}

- (OrgApacheLuceneQueryParserToken *)jjFillToken {
  OrgApacheLuceneQueryParserToken *t;
  NSString *curTokenImage;
  jint beginLine;
  jint endLine;
  jint beginColumn;
  jint endColumn;
  NSString *im = IOSObjectArray_Get(nil_chk(OrgApacheLuceneQueryParserQueryParserTokenManager_jjstrLiteralImages), jjmatchedKind_);
  curTokenImage = (im == nil) ? [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(input_stream_)) GetImage] : im;
  beginLine = [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(input_stream_)) getBeginLine];
  beginColumn = [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(input_stream_)) getBeginColumn];
  endLine = [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(input_stream_)) getEndLine];
  endColumn = [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(input_stream_)) getEndColumn];
  t = OrgApacheLuceneQueryParserToken_newTokenWithInt_withNSString_(jjmatchedKind_, curTokenImage);
  ((OrgApacheLuceneQueryParserToken *) nil_chk(t))->beginLine_ = beginLine;
  t->endLine_ = endLine;
  t->beginColumn_ = beginColumn;
  t->endColumn_ = endColumn;
  return t;
}

- (OrgApacheLuceneQueryParserToken *)getNextToken {
  OrgApacheLuceneQueryParserToken *matchedToken;
  jint curPos = 0;
  for (; ; ) {
    {
      @try {
        curChar_ = [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(input_stream_)) BeginToken];
      }
      @catch (JavaIoIOException *e) {
        jjmatchedKind_ = 0;
        matchedToken = [self jjFillToken];
        return matchedToken;
      }
      switch (curLexState_) {
        case 0:
        jjmatchedKind_ = (jint) 0x7fffffff;
        jjmatchedPos_ = 0;
        curPos = OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa0_0(self);
        break;
        case 1:
        jjmatchedKind_ = (jint) 0x7fffffff;
        jjmatchedPos_ = 0;
        curPos = OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa0_1(self);
        break;
        case 2:
        jjmatchedKind_ = (jint) 0x7fffffff;
        jjmatchedPos_ = 0;
        curPos = OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa0_2(self);
        break;
        case 3:
        jjmatchedKind_ = (jint) 0x7fffffff;
        jjmatchedPos_ = 0;
        curPos = OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa0_3(self);
        break;
      }
      if (jjmatchedKind_ != (jint) 0x7fffffff) {
        if (jjmatchedPos_ + 1 < curPos) [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(input_stream_)) backupWithInt:curPos - jjmatchedPos_ - 1];
        if ((IOSLongArray_Get(nil_chk(OrgApacheLuceneQueryParserQueryParserTokenManager_jjtoToken), JreRShift32(jjmatchedKind_, 6)) & (JreLShift64(1LL, (jjmatchedKind_ & 077)))) != 0LL) {
          matchedToken = [self jjFillToken];
          if (IOSIntArray_Get(nil_chk(OrgApacheLuceneQueryParserQueryParserTokenManager_jjnewLexState), jjmatchedKind_) != -1) curLexState_ = IOSIntArray_Get(OrgApacheLuceneQueryParserQueryParserTokenManager_jjnewLexState, jjmatchedKind_);
          return matchedToken;
        }
        else {
          if (IOSIntArray_Get(nil_chk(OrgApacheLuceneQueryParserQueryParserTokenManager_jjnewLexState), jjmatchedKind_) != -1) curLexState_ = IOSIntArray_Get(OrgApacheLuceneQueryParserQueryParserTokenManager_jjnewLexState, jjmatchedKind_);
          goto continue_EOFLoop;
        }
      }
      jint error_line = [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(input_stream_)) getEndLine];
      jint error_column = [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(input_stream_)) getEndColumn];
      NSString *error_after = nil;
      jboolean EOFSeen = false;
      @try {
        [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(input_stream_)) readChar];
        [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(input_stream_)) backupWithInt:1];
      }
      @catch (JavaIoIOException *e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? @"" : [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(input_stream_)) GetImage];
        if (curChar_ == 0x000a || curChar_ == 0x000d) {
          error_line++;
          error_column = 0;
        }
        else error_column++;
      }
      if (!EOFSeen) {
        [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(input_stream_)) backupWithInt:1];
        error_after = curPos <= 1 ? @"" : [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(input_stream_)) GetImage];
      }
      @throw create_OrgApacheLuceneQueryParserTokenMgrError_initWithBoolean_withInt_withInt_withInt_withNSString_withChar_withInt_(EOFSeen, curLexState_, error_line, error_column, error_after, curChar_, OrgApacheLuceneQueryParserTokenMgrError_LEXICAL_ERROR);
    }
    continue_EOFLoop: ;
  }
}

- (void)jjCheckNAddWithInt:(jint)state {
  OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(self, state);
}

- (void)jjAddStatesWithInt:(jint)start
                   withInt:(jint)end {
  OrgApacheLuceneQueryParserQueryParserTokenManager_jjAddStatesWithInt_withInt_(self, start, end);
}

- (void)jjCheckNAddTwoStatesWithInt:(jint)state1
                            withInt:(jint)state2 {
  OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, state1, state2);
}

- (void)jjCheckNAddStatesWithInt:(jint)start
                         withInt:(jint)end {
  OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, start, end);
}

- (void)dealloc {
  RELEASE_(debugStream_);
  RELEASE_(input_stream_);
  RELEASE_(jjrounds_);
  RELEASE_(jjstateSet_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 4, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 9, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 10, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 11, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 12, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 14, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 15, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 16, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 17, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 18, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 19, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 20, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 21, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1a, 22, 23, -1, -1, -1, -1 },
    { NULL, "Z", 0x1a, 24, 23, -1, -1, -1, -1 },
    { NULL, "Z", 0x1a, 25, 23, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 26, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 27, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 28, 26, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 28, 27, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 29, 30, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryParserToken;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryParserToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 31, 30, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 32, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 33, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 34, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(setDebugStreamWithJavaIoPrintStream:);
  methods[1].selector = @selector(jjStopStringLiteralDfa_3WithInt:withLong:);
  methods[2].selector = @selector(jjStartNfa_3WithInt:withLong:);
  methods[3].selector = @selector(jjStopAtPosWithInt:withInt:);
  methods[4].selector = @selector(jjMoveStringLiteralDfa0_3);
  methods[5].selector = @selector(jjStartNfaWithStates_3WithInt:withInt:withInt:);
  methods[6].selector = @selector(jjMoveNfa_3WithInt:withInt:);
  methods[7].selector = @selector(jjStopStringLiteralDfa_1WithInt:withLong:);
  methods[8].selector = @selector(jjStartNfa_1WithInt:withLong:);
  methods[9].selector = @selector(jjMoveStringLiteralDfa0_1);
  methods[10].selector = @selector(jjMoveStringLiteralDfa1_1WithLong:);
  methods[11].selector = @selector(jjStartNfaWithStates_1WithInt:withInt:withInt:);
  methods[12].selector = @selector(jjMoveNfa_1WithInt:withInt:);
  methods[13].selector = @selector(jjMoveStringLiteralDfa0_0);
  methods[14].selector = @selector(jjMoveNfa_0WithInt:withInt:);
  methods[15].selector = @selector(jjStopStringLiteralDfa_2WithInt:withLong:);
  methods[16].selector = @selector(jjStartNfa_2WithInt:withLong:);
  methods[17].selector = @selector(jjMoveStringLiteralDfa0_2);
  methods[18].selector = @selector(jjMoveStringLiteralDfa1_2WithLong:);
  methods[19].selector = @selector(jjStartNfaWithStates_2WithInt:withInt:withInt:);
  methods[20].selector = @selector(jjMoveNfa_2WithInt:withInt:);
  methods[21].selector = @selector(jjCanMove_0WithInt:withInt:withInt:withLong:withLong:);
  methods[22].selector = @selector(jjCanMove_1WithInt:withInt:withInt:withLong:withLong:);
  methods[23].selector = @selector(jjCanMove_2WithInt:withInt:withInt:withLong:withLong:);
  methods[24].selector = @selector(initWithOrgApacheLuceneQueryParserCharStream:);
  methods[25].selector = @selector(initWithOrgApacheLuceneQueryParserCharStream:withInt:);
  methods[26].selector = @selector(ReInitWithOrgApacheLuceneQueryParserCharStream:);
  methods[27].selector = @selector(ReInitRounds);
  methods[28].selector = @selector(ReInitWithOrgApacheLuceneQueryParserCharStream:withInt:);
  methods[29].selector = @selector(SwitchToWithInt:);
  methods[30].selector = @selector(jjFillToken);
  methods[31].selector = @selector(getNextToken);
  methods[32].selector = @selector(jjCheckNAddWithInt:);
  methods[33].selector = @selector(jjAddStatesWithInt:withInt:);
  methods[34].selector = @selector(jjCheckNAddTwoStatesWithInt:withInt:);
  methods[35].selector = @selector(jjCheckNAddStatesWithInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "debugStream_", "LJavaIoPrintStream;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "jjbitVec0", "[J", .constantValue.asLong = 0, 0x18, -1, 35, -1, -1 },
    { "jjbitVec1", "[J", .constantValue.asLong = 0, 0x18, -1, 36, -1, -1 },
    { "jjbitVec3", "[J", .constantValue.asLong = 0, 0x18, -1, 37, -1, -1 },
    { "jjbitVec4", "[J", .constantValue.asLong = 0, 0x18, -1, 38, -1, -1 },
    { "jjnextStates", "[I", .constantValue.asLong = 0, 0x18, -1, 39, -1, -1 },
    { "jjstrLiteralImages", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 40, -1, -1 },
    { "lexStateNames", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 41, -1, -1 },
    { "jjnewLexState", "[I", .constantValue.asLong = 0, 0x19, -1, 42, -1, -1 },
    { "jjtoToken", "[J", .constantValue.asLong = 0, 0x18, -1, 43, -1, -1 },
    { "jjtoSkip", "[J", .constantValue.asLong = 0, 0x18, -1, 44, -1, -1 },
    { "input_stream_", "LOrgApacheLuceneQueryParserCharStream;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "jjrounds_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "jjstateSet_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "curChar_", "C", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "curLexState_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "defaultLexState_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjnewStateCnt_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjround_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjmatchedPos_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjmatchedKind_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setDebugStream", "LJavaIoPrintStream;", "jjStopStringLiteralDfa_3", "IJ", "jjStartNfa_3", "jjStopAtPos", "II", "jjStartNfaWithStates_3", "III", "jjMoveNfa_3", "jjStopStringLiteralDfa_1", "jjStartNfa_1", "jjMoveStringLiteralDfa1_1", "J", "jjStartNfaWithStates_1", "jjMoveNfa_1", "jjMoveNfa_0", "jjStopStringLiteralDfa_2", "jjStartNfa_2", "jjMoveStringLiteralDfa1_2", "jjStartNfaWithStates_2", "jjMoveNfa_2", "jjCanMove_0", "IIIJJ", "jjCanMove_1", "jjCanMove_2", "LOrgApacheLuceneQueryParserCharStream;", "LOrgApacheLuceneQueryParserCharStream;I", "ReInit", "SwitchTo", "I", "jjCheckNAdd", "jjAddStates", "jjCheckNAddTwoStates", "jjCheckNAddStates", &OrgApacheLuceneQueryParserQueryParserTokenManager_jjbitVec0, &OrgApacheLuceneQueryParserQueryParserTokenManager_jjbitVec1, &OrgApacheLuceneQueryParserQueryParserTokenManager_jjbitVec3, &OrgApacheLuceneQueryParserQueryParserTokenManager_jjbitVec4, &OrgApacheLuceneQueryParserQueryParserTokenManager_jjnextStates, &OrgApacheLuceneQueryParserQueryParserTokenManager_jjstrLiteralImages, &OrgApacheLuceneQueryParserQueryParserTokenManager_lexStateNames, &OrgApacheLuceneQueryParserQueryParserTokenManager_jjnewLexState, &OrgApacheLuceneQueryParserQueryParserTokenManager_jjtoToken, &OrgApacheLuceneQueryParserQueryParserTokenManager_jjtoSkip };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryParserQueryParserTokenManager = { "QueryParserTokenManager", "org.apache.lucene.queryParser", ptrTable, methods, fields, 7, 0x1, 36, 21, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueryParserQueryParserTokenManager;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneQueryParserQueryParserTokenManager class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryParserQueryParserTokenManager_jjbitVec0, [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0x1LL, (jlong) 0x0LL, (jlong) 0x0LL, (jlong) 0x0LL } count:4]);
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryParserQueryParserTokenManager_jjbitVec1, [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0xfffffffffffffffeLL, (jlong) 0xffffffffffffffffLL, (jlong) 0xffffffffffffffffLL, (jlong) 0xffffffffffffffffLL } count:4]);
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryParserQueryParserTokenManager_jjbitVec3, [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0x0LL, (jlong) 0x0LL, (jlong) 0xffffffffffffffffLL, (jlong) 0xffffffffffffffffLL } count:4]);
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryParserQueryParserTokenManager_jjbitVec4, [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0xfffefffffffffffeLL, (jlong) 0xffffffffffffffffLL, (jlong) 0xffffffffffffffffLL, (jlong) 0xffffffffffffffffLL } count:4]);
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryParserQueryParserTokenManager_jjnextStates, [IOSIntArray newArrayWithInts:(jint[]){ 15, 16, 18, 29, 32, 23, 33, 30, 20, 21, 32, 23, 33, 31, 34, 27, 2, 4, 5, 0, 1 } count:21]);
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryParserQueryParserTokenManager_jjstrLiteralImages, [IOSObjectArray newArrayWithObjects:(id[]){ @"", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, @"+", @"-", @"(", @")", @":", @"*", @"^", nil, nil, nil, nil, nil, @"[", @"{", nil, @"TO", @"]", nil, nil, @"TO", @"}", nil, nil } count:34 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryParserQueryParserTokenManager_lexStateNames, [IOSObjectArray newArrayWithObjects:(id[]){ @"Boost", @"RangeEx", @"RangeIn", @"DEFAULT" } count:4 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryParserQueryParserTokenManager_jjnewLexState, [IOSIntArray newArrayWithInts:(jint[]){ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, 2, 1, 3, -1, 3, -1, -1, -1, 3, -1, -1 } count:34]);
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryParserQueryParserTokenManager_jjtoToken, [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0x3ffffff01LL } count:1]);
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryParserQueryParserTokenManager_jjtoSkip, [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0x80LL } count:1]);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneQueryParserQueryParserTokenManager)
  }
}

@end

jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopStringLiteralDfa_3WithInt_withLong_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint pos, jlong active0) {
  switch (pos) {
    default:
    return -1;
  }
}

jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopAtPosWithInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint pos, jint kind) {
  self->jjmatchedKind_ = kind;
  self->jjmatchedPos_ = pos;
  return pos + 1;
}

jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa0_3(OrgApacheLuceneQueryParserQueryParserTokenManager *self) {
  switch (self->curChar_) {
    case 40:
    return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 13);
    case 41:
    return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 14);
    case 42:
    return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfaWithStates_3WithInt_withInt_withInt_(self, 0, 16, 36);
    case 43:
    return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 11);
    case 45:
    return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 12);
    case 58:
    return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 15);
    case 91:
    return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 23);
    case 94:
    return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 17);
    case 123:
    return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 24);
    default:
    return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_3WithInt_withInt_(self, 0, 0);
  }
}

jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfaWithStates_3WithInt_withInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint pos, jint kind, jint state) {
  self->jjmatchedKind_ = kind;
  self->jjmatchedPos_ = pos;
  @try {
    self->curChar_ = [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return pos + 1;
  }
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_3WithInt_withInt_(self, state, pos + 1);
}

jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_3WithInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint startState, jint curPos) {
  jint startsAt = 0;
  self->jjnewStateCnt_ = 36;
  jint i = 1;
  *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), 0) = startState;
  jint kind = (jint) 0x7fffffff;
  for (; ; ) {
    if (++self->jjround_ == (jint) 0x7fffffff) OrgApacheLuceneQueryParserQueryParserTokenManager_ReInitRounds(self);
    if (self->curChar_ < 64) {
      jlong l = JreLShift64(1LL, self->curChar_);
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 36:
          case 25:
          if (((jlong) 0xfbfffcf8ffffd9ffLL & l) == 0LL) break;
          if (kind > 22) kind = 22;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 25, 26);
          break;
          case 0:
          if (((jlong) 0xfbffd4f8ffffd9ffLL & l) != 0LL) {
            if (kind > 22) kind = 22;
            OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 25, 26);
          }
          else if (((jlong) 0x100002600LL & l) != 0LL) {
            if (kind > 7) kind = 7;
          }
          else if (self->curChar_ == 34) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 0, 2);
          else if (self->curChar_ == 33) {
            if (kind > 10) kind = 10;
          }
          if (((jlong) 0x7bffd0f8ffffd9ffLL & l) != 0LL) {
            if (kind > 19) kind = 19;
            OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 3, 7);
          }
          else if (self->curChar_ == 42) {
            if (kind > 21) kind = 21;
          }
          if (self->curChar_ == 38) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 4;
          break;
          case 4:
          if (self->curChar_ == 38 && kind > 8) kind = 8;
          break;
          case 5:
          if (self->curChar_ == 38) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 4;
          break;
          case 13:
          if (self->curChar_ == 33 && kind > 10) kind = 10;
          break;
          case 14:
          if (self->curChar_ == 34) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 0, 2);
          break;
          case 15:
          if (((jlong) 0xfffffffbffffffffLL & l) != 0LL) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 0, 2);
          break;
          case 17:
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 0, 2);
          break;
          case 18:
          if (self->curChar_ == 34 && kind > 18) kind = 18;
          break;
          case 20:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 20) kind = 20;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjAddStatesWithInt_withInt_(self, 8, 9);
          break;
          case 21:
          if (self->curChar_ == 46) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(self, 22);
          break;
          case 22:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 20) kind = 20;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(self, 22);
          break;
          case 23:
          if (self->curChar_ == 42 && kind > 21) kind = 21;
          break;
          case 24:
          if (((jlong) 0xfbffd4f8ffffd9ffLL & l) == 0LL) break;
          if (kind > 22) kind = 22;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 25, 26);
          break;
          case 27:
          if (kind > 22) kind = 22;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 25, 26);
          break;
          case 28:
          if (((jlong) 0x7bffd0f8ffffd9ffLL & l) == 0LL) break;
          if (kind > 19) kind = 19;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 3, 7);
          break;
          case 29:
          if (((jlong) 0x7bfff8f8ffffd9ffLL & l) == 0LL) break;
          if (kind > 19) kind = 19;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 29, 30);
          break;
          case 31:
          if (kind > 19) kind = 19;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 29, 30);
          break;
          case 32:
          if (((jlong) 0x7bfff8f8ffffd9ffLL & l) != 0LL) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 10, 12);
          break;
          case 34:
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 10, 12);
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else if (self->curChar_ < 128) {
      jlong l = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 36:
          if (((jlong) 0x97ffffff87ffffffLL & l) != 0LL) {
            if (kind > 22) kind = 22;
            OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 25, 26);
          }
          else if (self->curChar_ == 92) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 27, 27);
          break;
          case 0:
          if (((jlong) 0x97ffffff87ffffffLL & l) != 0LL) {
            if (kind > 19) kind = 19;
            OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 3, 7);
          }
          else if (self->curChar_ == 92) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 13, 15);
          else if (self->curChar_ == 126) {
            if (kind > 20) kind = 20;
            *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 20;
          }
          if (((jlong) 0x97ffffff87ffffffLL & l) != 0LL) {
            if (kind > 22) kind = 22;
            OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 25, 26);
          }
          if (self->curChar_ == 78) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 11;
          else if (self->curChar_ == 124) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 8;
          else if (self->curChar_ == 79) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 6;
          else if (self->curChar_ == 65) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 2;
          break;
          case 1:
          if (self->curChar_ == 68 && kind > 8) kind = 8;
          break;
          case 2:
          if (self->curChar_ == 78) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 1;
          break;
          case 3:
          if (self->curChar_ == 65) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 2;
          break;
          case 6:
          if (self->curChar_ == 82 && kind > 9) kind = 9;
          break;
          case 7:
          if (self->curChar_ == 79) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 6;
          break;
          case 8:
          if (self->curChar_ == 124 && kind > 9) kind = 9;
          break;
          case 9:
          if (self->curChar_ == 124) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 8;
          break;
          case 10:
          if (self->curChar_ == 84 && kind > 10) kind = 10;
          break;
          case 11:
          if (self->curChar_ == 79) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 10;
          break;
          case 12:
          if (self->curChar_ == 78) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 11;
          break;
          case 15:
          if (((jlong) 0xffffffffefffffffLL & l) != 0LL) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 0, 2);
          break;
          case 16:
          if (self->curChar_ == 92) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 17;
          break;
          case 17:
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 0, 2);
          break;
          case 19:
          if (self->curChar_ != 126) break;
          if (kind > 20) kind = 20;
          *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 20;
          break;
          case 24:
          if (((jlong) 0x97ffffff87ffffffLL & l) == 0LL) break;
          if (kind > 22) kind = 22;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 25, 26);
          break;
          case 25:
          if (((jlong) 0x97ffffff87ffffffLL & l) == 0LL) break;
          if (kind > 22) kind = 22;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 25, 26);
          break;
          case 26:
          if (self->curChar_ == 92) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 27, 27);
          break;
          case 27:
          if (kind > 22) kind = 22;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 25, 26);
          break;
          case 28:
          if (((jlong) 0x97ffffff87ffffffLL & l) == 0LL) break;
          if (kind > 19) kind = 19;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 3, 7);
          break;
          case 29:
          if (((jlong) 0x97ffffff87ffffffLL & l) == 0LL) break;
          if (kind > 19) kind = 19;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 29, 30);
          break;
          case 30:
          if (self->curChar_ == 92) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 31, 31);
          break;
          case 31:
          if (kind > 19) kind = 19;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 29, 30);
          break;
          case 32:
          if (((jlong) 0x97ffffff87ffffffLL & l) != 0LL) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 10, 12);
          break;
          case 33:
          if (self->curChar_ == 92) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 34, 34);
          break;
          case 34:
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 10, 12);
          break;
          case 35:
          if (self->curChar_ == 92) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 13, 15);
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else {
      jint hiByte = (jint) (JreRShift32(self->curChar_, 8));
      jint i1 = JreRShift32(hiByte, 6);
      jlong l1 = JreLShift64(1LL, (hiByte & 077));
      jint i2 = JreRShift32((self->curChar_ & (jint) 0xff), 6);
      jlong l2 = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 36:
          case 25:
          if (!OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_2WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) break;
          if (kind > 22) kind = 22;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 25, 26);
          break;
          case 0:
          if (OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            if (kind > 7) kind = 7;
          }
          if (OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_2WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            if (kind > 22) kind = 22;
            OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 25, 26);
          }
          if (OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_2WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            if (kind > 19) kind = 19;
            OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 3, 7);
          }
          break;
          case 15:
          case 17:
          if (OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 0, 2);
          break;
          case 24:
          if (!OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_2WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) break;
          if (kind > 22) kind = 22;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 25, 26);
          break;
          case 27:
          if (!OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) break;
          if (kind > 22) kind = 22;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 25, 26);
          break;
          case 28:
          if (!OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_2WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) break;
          if (kind > 19) kind = 19;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 3, 7);
          break;
          case 29:
          if (!OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_2WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) break;
          if (kind > 19) kind = 19;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 29, 30);
          break;
          case 31:
          if (!OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) break;
          if (kind > 19) kind = 19;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 29, 30);
          break;
          case 32:
          if (OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_2WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 10, 12);
          break;
          case 34:
          if (OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 10, 12);
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    if (kind != (jint) 0x7fffffff) {
      self->jjmatchedKind_ = kind;
      self->jjmatchedPos_ = curPos;
      kind = (jint) 0x7fffffff;
    }
    ++curPos;
    if ((i = self->jjnewStateCnt_) == (startsAt = 36 - (self->jjnewStateCnt_ = startsAt))) return curPos;
    @try {
      self->curChar_ = [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(self->input_stream_)) readChar];
    }
    @catch (JavaIoIOException *e) {
      return curPos;
    }
  }
}

jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopStringLiteralDfa_1WithInt_withLong_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint pos, jlong active0) {
  switch (pos) {
    case 0:
    if ((active0 & (jlong) 0x40000000LL) != 0LL) {
      self->jjmatchedKind_ = 33;
      return 6;
    }
    return -1;
    default:
    return -1;
  }
}

jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfa_1WithInt_withLong_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint pos, jlong active0) {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_1WithInt_withInt_(self, OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopStringLiteralDfa_1WithInt_withLong_(self, pos, active0), pos + 1);
}

jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa0_1(OrgApacheLuceneQueryParserQueryParserTokenManager *self) {
  switch (self->curChar_) {
    case 84:
    return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa1_1WithLong_(self, (jlong) 0x40000000LL);
    case 125:
    return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 31);
    default:
    return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_1WithInt_withInt_(self, 0, 0);
  }
}

jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa1_1WithLong_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jlong active0) {
  @try {
    self->curChar_ = [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopStringLiteralDfa_1WithInt_withLong_(self, 0, active0);
    return 1;
  }
  switch (self->curChar_) {
    case 79:
    if ((active0 & (jlong) 0x40000000LL) != 0LL) return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfaWithStates_1WithInt_withInt_withInt_(self, 1, 30, 6);
    break;
    default:
    break;
  }
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfa_1WithInt_withLong_(self, 0, active0);
}

jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfaWithStates_1WithInt_withInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint pos, jint kind, jint state) {
  self->jjmatchedKind_ = kind;
  self->jjmatchedPos_ = pos;
  @try {
    self->curChar_ = [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return pos + 1;
  }
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_1WithInt_withInt_(self, state, pos + 1);
}

jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_1WithInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint startState, jint curPos) {
  jint startsAt = 0;
  self->jjnewStateCnt_ = 7;
  jint i = 1;
  *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), 0) = startState;
  jint kind = (jint) 0x7fffffff;
  for (; ; ) {
    if (++self->jjround_ == (jint) 0x7fffffff) OrgApacheLuceneQueryParserQueryParserTokenManager_ReInitRounds(self);
    if (self->curChar_ < 64) {
      jlong l = JreLShift64(1LL, self->curChar_);
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          if (((jlong) 0xfffffffeffffffffLL & l) != 0LL) {
            if (kind > 33) kind = 33;
            OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(self, 6);
          }
          if (((jlong) 0x100002600LL & l) != 0LL) {
            if (kind > 7) kind = 7;
          }
          else if (self->curChar_ == 34) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 2, 4);
          break;
          case 1:
          if (self->curChar_ == 34) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 2, 4);
          break;
          case 2:
          if (((jlong) 0xfffffffbffffffffLL & l) != 0LL) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 16, 18);
          break;
          case 3:
          if (self->curChar_ == 34) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 16, 18);
          break;
          case 5:
          if (self->curChar_ == 34 && kind > 32) kind = 32;
          break;
          case 6:
          if (((jlong) 0xfffffffeffffffffLL & l) == 0LL) break;
          if (kind > 33) kind = 33;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(self, 6);
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else if (self->curChar_ < 128) {
      jlong l = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          case 6:
          if (((jlong) 0xdfffffffffffffffLL & l) == 0LL) break;
          if (kind > 33) kind = 33;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(self, 6);
          break;
          case 2:
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjAddStatesWithInt_withInt_(self, 16, 18);
          break;
          case 4:
          if (self->curChar_ == 92) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 3;
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else {
      jint hiByte = (jint) (JreRShift32(self->curChar_, 8));
      jint i1 = JreRShift32(hiByte, 6);
      jlong l1 = JreLShift64(1LL, (hiByte & 077));
      jint i2 = JreRShift32((self->curChar_ & (jint) 0xff), 6);
      jlong l2 = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          if (OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            if (kind > 7) kind = 7;
          }
          if (OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            if (kind > 33) kind = 33;
            OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(self, 6);
          }
          break;
          case 2:
          if (OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) OrgApacheLuceneQueryParserQueryParserTokenManager_jjAddStatesWithInt_withInt_(self, 16, 18);
          break;
          case 6:
          if (!OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) break;
          if (kind > 33) kind = 33;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(self, 6);
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    if (kind != (jint) 0x7fffffff) {
      self->jjmatchedKind_ = kind;
      self->jjmatchedPos_ = curPos;
      kind = (jint) 0x7fffffff;
    }
    ++curPos;
    if ((i = self->jjnewStateCnt_) == (startsAt = 7 - (self->jjnewStateCnt_ = startsAt))) return curPos;
    @try {
      self->curChar_ = [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(self->input_stream_)) readChar];
    }
    @catch (JavaIoIOException *e) {
      return curPos;
    }
  }
}

jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa0_0(OrgApacheLuceneQueryParserQueryParserTokenManager *self) {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_0WithInt_withInt_(self, 0, 0);
}

jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_0WithInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint startState, jint curPos) {
  jint startsAt = 0;
  self->jjnewStateCnt_ = 3;
  jint i = 1;
  *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), 0) = startState;
  jint kind = (jint) 0x7fffffff;
  for (; ; ) {
    if (++self->jjround_ == (jint) 0x7fffffff) OrgApacheLuceneQueryParserQueryParserTokenManager_ReInitRounds(self);
    if (self->curChar_ < 64) {
      jlong l = JreLShift64(1LL, self->curChar_);
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 25) kind = 25;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjAddStatesWithInt_withInt_(self, 19, 20);
          break;
          case 1:
          if (self->curChar_ == 46) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(self, 2);
          break;
          case 2:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 25) kind = 25;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(self, 2);
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else if (self->curChar_ < 128) {
      jlong l = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else {
      jint hiByte = (jint) (JreRShift32(self->curChar_, 8));
      jint i1 = JreRShift32(hiByte, 6);
      jlong l1 = JreLShift64(1LL, (hiByte & 077));
      jint i2 = JreRShift32((self->curChar_ & (jint) 0xff), 6);
      jlong l2 = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    if (kind != (jint) 0x7fffffff) {
      self->jjmatchedKind_ = kind;
      self->jjmatchedPos_ = curPos;
      kind = (jint) 0x7fffffff;
    }
    ++curPos;
    if ((i = self->jjnewStateCnt_) == (startsAt = 3 - (self->jjnewStateCnt_ = startsAt))) return curPos;
    @try {
      self->curChar_ = [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(self->input_stream_)) readChar];
    }
    @catch (JavaIoIOException *e) {
      return curPos;
    }
  }
}

jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopStringLiteralDfa_2WithInt_withLong_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint pos, jlong active0) {
  switch (pos) {
    case 0:
    if ((active0 & (jlong) 0x4000000LL) != 0LL) {
      self->jjmatchedKind_ = 29;
      return 6;
    }
    return -1;
    default:
    return -1;
  }
}

jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfa_2WithInt_withLong_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint pos, jlong active0) {
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_2WithInt_withInt_(self, OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopStringLiteralDfa_2WithInt_withLong_(self, pos, active0), pos + 1);
}

jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa0_2(OrgApacheLuceneQueryParserQueryParserTokenManager *self) {
  switch (self->curChar_) {
    case 84:
    return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(self, (jlong) 0x4000000LL);
    case 93:
    return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 27);
    default:
    return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_2WithInt_withInt_(self, 0, 0);
  }
}

jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jlong active0) {
  @try {
    self->curChar_ = [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    OrgApacheLuceneQueryParserQueryParserTokenManager_jjStopStringLiteralDfa_2WithInt_withLong_(self, 0, active0);
    return 1;
  }
  switch (self->curChar_) {
    case 79:
    if ((active0 & (jlong) 0x4000000LL) != 0LL) return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfaWithStates_2WithInt_withInt_withInt_(self, 1, 26, 6);
    break;
    default:
    break;
  }
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfa_2WithInt_withLong_(self, 0, active0);
}

jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjStartNfaWithStates_2WithInt_withInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint pos, jint kind, jint state) {
  self->jjmatchedKind_ = kind;
  self->jjmatchedPos_ = pos;
  @try {
    self->curChar_ = [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return pos + 1;
  }
  return OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_2WithInt_withInt_(self, state, pos + 1);
}

jint OrgApacheLuceneQueryParserQueryParserTokenManager_jjMoveNfa_2WithInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint startState, jint curPos) {
  jint startsAt = 0;
  self->jjnewStateCnt_ = 7;
  jint i = 1;
  *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), 0) = startState;
  jint kind = (jint) 0x7fffffff;
  for (; ; ) {
    if (++self->jjround_ == (jint) 0x7fffffff) OrgApacheLuceneQueryParserQueryParserTokenManager_ReInitRounds(self);
    if (self->curChar_ < 64) {
      jlong l = JreLShift64(1LL, self->curChar_);
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          if (((jlong) 0xfffffffeffffffffLL & l) != 0LL) {
            if (kind > 29) kind = 29;
            OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(self, 6);
          }
          if (((jlong) 0x100002600LL & l) != 0LL) {
            if (kind > 7) kind = 7;
          }
          else if (self->curChar_ == 34) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 2, 4);
          break;
          case 1:
          if (self->curChar_ == 34) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 2, 4);
          break;
          case 2:
          if (((jlong) 0xfffffffbffffffffLL & l) != 0LL) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 16, 18);
          break;
          case 3:
          if (self->curChar_ == 34) OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 16, 18);
          break;
          case 5:
          if (self->curChar_ == 34 && kind > 28) kind = 28;
          break;
          case 6:
          if (((jlong) 0xfffffffeffffffffLL & l) == 0LL) break;
          if (kind > 29) kind = 29;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(self, 6);
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else if (self->curChar_ < 128) {
      jlong l = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          case 6:
          if (((jlong) 0xffffffffdfffffffLL & l) == 0LL) break;
          if (kind > 29) kind = 29;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(self, 6);
          break;
          case 2:
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjAddStatesWithInt_withInt_(self, 16, 18);
          break;
          case 4:
          if (self->curChar_ == 92) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 3;
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else {
      jint hiByte = (jint) (JreRShift32(self->curChar_, 8));
      jint i1 = JreRShift32(hiByte, 6);
      jlong l1 = JreLShift64(1LL, (hiByte & 077));
      jint i2 = JreRShift32((self->curChar_ & (jint) 0xff), 6);
      jlong l2 = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          if (OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            if (kind > 7) kind = 7;
          }
          if (OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            if (kind > 29) kind = 29;
            OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(self, 6);
          }
          break;
          case 2:
          if (OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) OrgApacheLuceneQueryParserQueryParserTokenManager_jjAddStatesWithInt_withInt_(self, 16, 18);
          break;
          case 6:
          if (!OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) break;
          if (kind > 29) kind = 29;
          OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(self, 6);
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    if (kind != (jint) 0x7fffffff) {
      self->jjmatchedKind_ = kind;
      self->jjmatchedPos_ = curPos;
      kind = (jint) 0x7fffffff;
    }
    ++curPos;
    if ((i = self->jjnewStateCnt_) == (startsAt = 7 - (self->jjnewStateCnt_ = startsAt))) return curPos;
    @try {
      self->curChar_ = [((id<OrgApacheLuceneQueryParserCharStream>) nil_chk(self->input_stream_)) readChar];
    }
    @catch (JavaIoIOException *e) {
      return curPos;
    }
  }
}

jboolean OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(jint hiByte, jint i1, jint i2, jlong l1, jlong l2) {
  OrgApacheLuceneQueryParserQueryParserTokenManager_initialize();
  switch (hiByte) {
    case 48:
    return ((IOSLongArray_Get(nil_chk(OrgApacheLuceneQueryParserQueryParserTokenManager_jjbitVec0), i2) & l2) != 0LL);
    default:
    return false;
  }
}

jboolean OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(jint hiByte, jint i1, jint i2, jlong l1, jlong l2) {
  OrgApacheLuceneQueryParserQueryParserTokenManager_initialize();
  switch (hiByte) {
    case 0:
    return ((IOSLongArray_Get(nil_chk(OrgApacheLuceneQueryParserQueryParserTokenManager_jjbitVec3), i2) & l2) != 0LL);
    default:
    if ((IOSLongArray_Get(nil_chk(OrgApacheLuceneQueryParserQueryParserTokenManager_jjbitVec1), i1) & l1) != 0LL) return true;
    return false;
  }
}

jboolean OrgApacheLuceneQueryParserQueryParserTokenManager_jjCanMove_2WithInt_withInt_withInt_withLong_withLong_(jint hiByte, jint i1, jint i2, jlong l1, jlong l2) {
  OrgApacheLuceneQueryParserQueryParserTokenManager_initialize();
  switch (hiByte) {
    case 0:
    return ((IOSLongArray_Get(nil_chk(OrgApacheLuceneQueryParserQueryParserTokenManager_jjbitVec3), i2) & l2) != 0LL);
    case 48:
    return ((IOSLongArray_Get(nil_chk(OrgApacheLuceneQueryParserQueryParserTokenManager_jjbitVec1), i2) & l2) != 0LL);
    default:
    if ((IOSLongArray_Get(nil_chk(OrgApacheLuceneQueryParserQueryParserTokenManager_jjbitVec4), i1) & l1) != 0LL) return true;
    return false;
  }
}

void OrgApacheLuceneQueryParserQueryParserTokenManager_initWithOrgApacheLuceneQueryParserCharStream_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, id<OrgApacheLuceneQueryParserCharStream> stream) {
  NSObject_init(self);
  JreStrongAssign(&self->debugStream_, JreLoadStatic(JavaLangSystem, out));
  JreStrongAssignAndConsume(&self->jjrounds_, [IOSIntArray newArrayWithLength:36]);
  JreStrongAssignAndConsume(&self->jjstateSet_, [IOSIntArray newArrayWithLength:72]);
  self->curLexState_ = 3;
  self->defaultLexState_ = 3;
  JreStrongAssign(&self->input_stream_, stream);
}

OrgApacheLuceneQueryParserQueryParserTokenManager *new_OrgApacheLuceneQueryParserQueryParserTokenManager_initWithOrgApacheLuceneQueryParserCharStream_(id<OrgApacheLuceneQueryParserCharStream> stream) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryParserQueryParserTokenManager, initWithOrgApacheLuceneQueryParserCharStream_, stream)
}

OrgApacheLuceneQueryParserQueryParserTokenManager *create_OrgApacheLuceneQueryParserQueryParserTokenManager_initWithOrgApacheLuceneQueryParserCharStream_(id<OrgApacheLuceneQueryParserCharStream> stream) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryParserQueryParserTokenManager, initWithOrgApacheLuceneQueryParserCharStream_, stream)
}

void OrgApacheLuceneQueryParserQueryParserTokenManager_initWithOrgApacheLuceneQueryParserCharStream_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, id<OrgApacheLuceneQueryParserCharStream> stream, jint lexState) {
  OrgApacheLuceneQueryParserQueryParserTokenManager_initWithOrgApacheLuceneQueryParserCharStream_(self, stream);
  [self SwitchToWithInt:lexState];
}

OrgApacheLuceneQueryParserQueryParserTokenManager *new_OrgApacheLuceneQueryParserQueryParserTokenManager_initWithOrgApacheLuceneQueryParserCharStream_withInt_(id<OrgApacheLuceneQueryParserCharStream> stream, jint lexState) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryParserQueryParserTokenManager, initWithOrgApacheLuceneQueryParserCharStream_withInt_, stream, lexState)
}

OrgApacheLuceneQueryParserQueryParserTokenManager *create_OrgApacheLuceneQueryParserQueryParserTokenManager_initWithOrgApacheLuceneQueryParserCharStream_withInt_(id<OrgApacheLuceneQueryParserCharStream> stream, jint lexState) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryParserQueryParserTokenManager, initWithOrgApacheLuceneQueryParserCharStream_withInt_, stream, lexState)
}

void OrgApacheLuceneQueryParserQueryParserTokenManager_ReInitRounds(OrgApacheLuceneQueryParserQueryParserTokenManager *self) {
  jint i;
  self->jjround_ = (jint) 0x80000001;
  for (i = 36; i-- > 0; ) *IOSIntArray_GetRef(nil_chk(self->jjrounds_), i) = -0x7fffffff - 1;
}

void OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint state) {
  if (IOSIntArray_Get(nil_chk(self->jjrounds_), state) != self->jjround_) {
    *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), self->jjnewStateCnt_++) = state;
    *IOSIntArray_GetRef(self->jjrounds_, state) = self->jjround_;
  }
}

void OrgApacheLuceneQueryParserQueryParserTokenManager_jjAddStatesWithInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint start, jint end) {
  do {
    *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), self->jjnewStateCnt_++) = IOSIntArray_Get(nil_chk(OrgApacheLuceneQueryParserQueryParserTokenManager_jjnextStates), start);
  }
  while (start++ != end);
}

void OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint state1, jint state2) {
  OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(self, state1);
  OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(self, state2);
}

void OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddStatesWithInt_withInt_(OrgApacheLuceneQueryParserQueryParserTokenManager *self, jint start, jint end) {
  do {
    OrgApacheLuceneQueryParserQueryParserTokenManager_jjCheckNAddWithInt_(self, IOSIntArray_Get(nil_chk(OrgApacheLuceneQueryParserQueryParserTokenManager_jjnextStates), start));
  }
  while (start++ != end);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryParserQueryParserTokenManager)
