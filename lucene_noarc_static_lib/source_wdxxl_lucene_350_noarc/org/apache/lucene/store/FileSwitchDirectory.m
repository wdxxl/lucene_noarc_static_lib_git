//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/store/FileSwitchDirectory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/FileSwitchDirectory.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/store/LockFactory.h"
#include "org/apache/lucene/store/NoSuchDirectoryException.h"

@interface OrgApacheLuceneStoreFileSwitchDirectory () {
 @public
  OrgApacheLuceneStoreDirectory *secondaryDir_;
  OrgApacheLuceneStoreDirectory *primaryDir_;
  id<JavaUtilSet> primaryExtensions_;
  jboolean doClose_;
}

- (OrgApacheLuceneStoreDirectory *)getDirectoryWithNSString:(NSString *)name;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreFileSwitchDirectory, secondaryDir_, OrgApacheLuceneStoreDirectory *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreFileSwitchDirectory, primaryDir_, OrgApacheLuceneStoreDirectory *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreFileSwitchDirectory, primaryExtensions_, id<JavaUtilSet>)

__attribute__((unused)) static OrgApacheLuceneStoreDirectory *OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(OrgApacheLuceneStoreFileSwitchDirectory *self, NSString *name);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneStoreFileSwitchDirectory__Annotations$0();

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneStoreFileSwitchDirectory__Annotations$1();

@implementation OrgApacheLuceneStoreFileSwitchDirectory

- (instancetype)initWithJavaUtilSet:(id<JavaUtilSet>)primaryExtensions
  withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)primaryDir
  withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)secondaryDir
                        withBoolean:(jboolean)doClose {
  OrgApacheLuceneStoreFileSwitchDirectory_initWithJavaUtilSet_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneStoreDirectory_withBoolean_(self, primaryExtensions, primaryDir, secondaryDir, doClose);
  return self;
}

- (OrgApacheLuceneStoreDirectory *)getPrimaryDir {
  return primaryDir_;
}

- (OrgApacheLuceneStoreDirectory *)getSecondaryDir {
  return secondaryDir_;
}

- (void)close {
  if (doClose_) {
    @try {
      [((OrgApacheLuceneStoreDirectory *) nil_chk(secondaryDir_)) close];
    }
    @finally {
      [((OrgApacheLuceneStoreDirectory *) nil_chk(primaryDir_)) close];
    }
    doClose_ = false;
  }
}

- (IOSObjectArray *)listAll {
  id<JavaUtilSet> files = create_JavaUtilHashSet_init();
  OrgApacheLuceneStoreNoSuchDirectoryException *exc = nil;
  @try {
    {
      IOSObjectArray *a__ = [((OrgApacheLuceneStoreDirectory *) nil_chk(primaryDir_)) listAll];
      NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      NSString * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *f = *b__++;
        [files addWithId:f];
      }
    }
  }
  @catch (OrgApacheLuceneStoreNoSuchDirectoryException *e) {
    exc = e;
  }
  @try {
    {
      IOSObjectArray *a__ = [((OrgApacheLuceneStoreDirectory *) nil_chk(secondaryDir_)) listAll];
      NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      NSString * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *f = *b__++;
        [files addWithId:f];
      }
    }
  }
  @catch (OrgApacheLuceneStoreNoSuchDirectoryException *e) {
    if (exc != nil) {
      @throw exc;
    }
    if ([files isEmpty]) {
      @throw e;
    }
  }
  if (exc != nil && [files isEmpty]) {
    @throw exc;
  }
  return [files toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[files size] type:NSString_class_()]];
}

+ (NSString *)getExtensionWithNSString:(NSString *)name {
  return OrgApacheLuceneStoreFileSwitchDirectory_getExtensionWithNSString_(name);
}

- (OrgApacheLuceneStoreDirectory *)getDirectoryWithNSString:(NSString *)name {
  return OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(self, name);
}

- (jboolean)fileExistsWithNSString:(NSString *)name {
  return [((OrgApacheLuceneStoreDirectory *) nil_chk(OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(self, name))) fileExistsWithNSString:name];
}

- (jlong)fileModifiedWithNSString:(NSString *)name {
  return [((OrgApacheLuceneStoreDirectory *) nil_chk(OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(self, name))) fileModifiedWithNSString:name];
}

- (void)touchFileWithNSString:(NSString *)name {
  [((OrgApacheLuceneStoreDirectory *) nil_chk(OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(self, name))) touchFileWithNSString:name];
}

- (void)deleteFileWithNSString:(NSString *)name {
  [((OrgApacheLuceneStoreDirectory *) nil_chk(OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(self, name))) deleteFileWithNSString:name];
}

- (jlong)fileLengthWithNSString:(NSString *)name {
  return [((OrgApacheLuceneStoreDirectory *) nil_chk(OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(self, name))) fileLengthWithNSString:name];
}

- (OrgApacheLuceneStoreIndexOutput *)createOutputWithNSString:(NSString *)name {
  return [((OrgApacheLuceneStoreDirectory *) nil_chk(OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(self, name))) createOutputWithNSString:name];
}

- (void)syncWithNSString:(NSString *)name {
  [self syncWithJavaUtilCollection:JavaUtilCollections_singletonWithId_(name)];
}

- (void)syncWithJavaUtilCollection:(id<JavaUtilCollection>)names {
  id<JavaUtilList> primaryNames = create_JavaUtilArrayList_init();
  id<JavaUtilList> secondaryNames = create_JavaUtilArrayList_init();
  for (NSString * __strong name in nil_chk(names)) if ([((id<JavaUtilSet>) nil_chk(primaryExtensions_)) containsWithId:OrgApacheLuceneStoreFileSwitchDirectory_getExtensionWithNSString_(name)]) [primaryNames addWithId:name];
  else [secondaryNames addWithId:name];
  [((OrgApacheLuceneStoreDirectory *) nil_chk(primaryDir_)) syncWithJavaUtilCollection:primaryNames];
  [((OrgApacheLuceneStoreDirectory *) nil_chk(secondaryDir_)) syncWithJavaUtilCollection:secondaryNames];
}

- (OrgApacheLuceneStoreIndexInput *)openInputWithNSString:(NSString *)name {
  return [((OrgApacheLuceneStoreDirectory *) nil_chk(OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(self, name))) openInputWithNSString:name];
}

- (void)dealloc {
  RELEASE_(secondaryDir_);
  RELEASE_(primaryDir_);
  RELEASE_(primaryExtensions_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreDirectory;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreDirectory;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreDirectory;", 0x2, 5, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 4, 2, -1, -1, -1 },
    { NULL, "J", 0x1, 7, 4, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 4, 2, -1, 9, -1 },
    { NULL, "V", 0x1, 10, 4, 2, -1, -1, -1 },
    { NULL, "J", 0x1, 11, 4, 2, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexOutput;", 0x1, 12, 4, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 4, 2, -1, 14, -1 },
    { NULL, "V", 0x1, 13, 15, 2, 16, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexInput;", 0x1, 17, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilSet:withOrgApacheLuceneStoreDirectory:withOrgApacheLuceneStoreDirectory:withBoolean:);
  methods[1].selector = @selector(getPrimaryDir);
  methods[2].selector = @selector(getSecondaryDir);
  methods[3].selector = @selector(close);
  methods[4].selector = @selector(listAll);
  methods[5].selector = @selector(getExtensionWithNSString:);
  methods[6].selector = @selector(getDirectoryWithNSString:);
  methods[7].selector = @selector(fileExistsWithNSString:);
  methods[8].selector = @selector(fileModifiedWithNSString:);
  methods[9].selector = @selector(touchFileWithNSString:);
  methods[10].selector = @selector(deleteFileWithNSString:);
  methods[11].selector = @selector(fileLengthWithNSString:);
  methods[12].selector = @selector(createOutputWithNSString:);
  methods[13].selector = @selector(syncWithNSString:);
  methods[14].selector = @selector(syncWithJavaUtilCollection:);
  methods[15].selector = @selector(openInputWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "secondaryDir_", "LOrgApacheLuceneStoreDirectory;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "primaryDir_", "LOrgApacheLuceneStoreDirectory;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "primaryExtensions_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x12, -1, -1, 18, -1 },
    { "doClose_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilSet;LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneStoreDirectory;Z", "(Ljava/util/Set<Ljava/lang/String;>;Lorg/apache/lucene/store/Directory;Lorg/apache/lucene/store/Directory;Z)V", "LJavaIoIOException;", "getExtension", "LNSString;", "getDirectory", "fileExists", "fileModified", "touchFile", (void *)&OrgApacheLuceneStoreFileSwitchDirectory__Annotations$0, "deleteFile", "fileLength", "createOutput", "sync", (void *)&OrgApacheLuceneStoreFileSwitchDirectory__Annotations$1, "LJavaUtilCollection;", "(Ljava/util/Collection<Ljava/lang/String;>;)V", "openInput", "Ljava/util/Set<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreFileSwitchDirectory = { "FileSwitchDirectory", "org.apache.lucene.store", ptrTable, methods, fields, 7, 0x1, 16, 4, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneStoreFileSwitchDirectory;
}

@end

void OrgApacheLuceneStoreFileSwitchDirectory_initWithJavaUtilSet_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneStoreDirectory_withBoolean_(OrgApacheLuceneStoreFileSwitchDirectory *self, id<JavaUtilSet> primaryExtensions, OrgApacheLuceneStoreDirectory *primaryDir, OrgApacheLuceneStoreDirectory *secondaryDir, jboolean doClose) {
  OrgApacheLuceneStoreDirectory_init(self);
  JreStrongAssign(&self->primaryExtensions_, primaryExtensions);
  JreStrongAssign(&self->primaryDir_, primaryDir);
  JreStrongAssign(&self->secondaryDir_, secondaryDir);
  self->doClose_ = doClose;
  JreStrongAssign(&self->lockFactory_, [((OrgApacheLuceneStoreDirectory *) nil_chk(primaryDir)) getLockFactory]);
}

OrgApacheLuceneStoreFileSwitchDirectory *new_OrgApacheLuceneStoreFileSwitchDirectory_initWithJavaUtilSet_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneStoreDirectory_withBoolean_(id<JavaUtilSet> primaryExtensions, OrgApacheLuceneStoreDirectory *primaryDir, OrgApacheLuceneStoreDirectory *secondaryDir, jboolean doClose) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreFileSwitchDirectory, initWithJavaUtilSet_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneStoreDirectory_withBoolean_, primaryExtensions, primaryDir, secondaryDir, doClose)
}

OrgApacheLuceneStoreFileSwitchDirectory *create_OrgApacheLuceneStoreFileSwitchDirectory_initWithJavaUtilSet_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneStoreDirectory_withBoolean_(id<JavaUtilSet> primaryExtensions, OrgApacheLuceneStoreDirectory *primaryDir, OrgApacheLuceneStoreDirectory *secondaryDir, jboolean doClose) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreFileSwitchDirectory, initWithJavaUtilSet_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneStoreDirectory_withBoolean_, primaryExtensions, primaryDir, secondaryDir, doClose)
}

NSString *OrgApacheLuceneStoreFileSwitchDirectory_getExtensionWithNSString_(NSString *name) {
  OrgApacheLuceneStoreFileSwitchDirectory_initialize();
  jint i = [((NSString *) nil_chk(name)) java_lastIndexOf:'.'];
  if (i == -1) {
    return @"";
  }
  return [name java_substring:i + 1 endIndex:[name java_length]];
}

OrgApacheLuceneStoreDirectory *OrgApacheLuceneStoreFileSwitchDirectory_getDirectoryWithNSString_(OrgApacheLuceneStoreFileSwitchDirectory *self, NSString *name) {
  NSString *ext = OrgApacheLuceneStoreFileSwitchDirectory_getExtensionWithNSString_(name);
  if ([((id<JavaUtilSet>) nil_chk(self->primaryExtensions_)) containsWithId:ext]) {
    return self->primaryDir_;
  }
  else {
    return self->secondaryDir_;
  }
}

IOSObjectArray *OrgApacheLuceneStoreFileSwitchDirectory__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneStoreFileSwitchDirectory__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreFileSwitchDirectory)
