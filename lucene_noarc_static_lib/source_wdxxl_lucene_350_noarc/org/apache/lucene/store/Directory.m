//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/store/Directory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Collection.h"
#include "org/apache/lucene/index/IndexFileNameFilter.h"
#include "org/apache/lucene/store/AlreadyClosedException.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/store/Lock.h"
#include "org/apache/lucene/store/LockFactory.h"
#include "org/apache/lucene/util/IOUtils.h"

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneStoreDirectory__Annotations$0();

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneStoreDirectory__Annotations$1();

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneStoreDirectory__Annotations$2();

@implementation OrgApacheLuceneStoreDirectory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneStoreDirectory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (IOSObjectArray *)listAll {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)fileExistsWithNSString:(NSString *)name {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)fileModifiedWithNSString:(NSString *)name {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)touchFileWithNSString:(NSString *)name {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)deleteFileWithNSString:(NSString *)name {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jlong)fileLengthWithNSString:(NSString *)name {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgApacheLuceneStoreIndexOutput *)createOutputWithNSString:(NSString *)name {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)syncWithNSString:(NSString *)name {
}

- (void)syncWithJavaUtilCollection:(id<JavaUtilCollection>)names {
  for (NSString * __strong name in nil_chk(names)) [self syncWithNSString:name];
}

- (OrgApacheLuceneStoreIndexInput *)openInputWithNSString:(NSString *)name {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgApacheLuceneStoreIndexInput *)openInputWithNSString:(NSString *)name
                                                  withInt:(jint)bufferSize {
  return [self openInputWithNSString:name];
}

- (OrgApacheLuceneStoreLock *)makeLockWithNSString:(NSString *)name {
  return [((OrgApacheLuceneStoreLockFactory *) nil_chk(lockFactory_)) makeLockWithNSString:name];
}

- (void)clearLockWithNSString:(NSString *)name {
  if (lockFactory_ != nil) {
    [lockFactory_ clearLockWithNSString:name];
  }
}

- (void)close {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setLockFactoryWithOrgApacheLuceneStoreLockFactory:(OrgApacheLuceneStoreLockFactory *)lockFactory {
  JreAssert((lockFactory != nil), (@"org/apache/lucene/store/Directory.java:178 condition failed: assert lockFactory != null;"));
  JreStrongAssign(&self->lockFactory_, lockFactory);
  [((OrgApacheLuceneStoreLockFactory *) nil_chk(lockFactory)) setLockPrefixWithNSString:[self getLockID]];
}

- (OrgApacheLuceneStoreLockFactory *)getLockFactory {
  return self->lockFactory_;
}

- (NSString *)getLockID {
  return [self description];
}

- (NSString *)description {
  return JreStrcat("$$@", [super description], @" lockFactory=", [self getLockFactory]);
}

- (void)copy__WithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)to
                                   withNSString:(NSString *)src
                                   withNSString:(NSString *)dest {
  OrgApacheLuceneStoreIndexOutput *os = nil;
  OrgApacheLuceneStoreIndexInput *is = nil;
  JavaIoIOException *priorException = nil;
  @try {
    os = [((OrgApacheLuceneStoreDirectory *) nil_chk(to)) createOutputWithNSString:dest];
    is = [self openInputWithNSString:src];
    [((OrgApacheLuceneStoreIndexInput *) nil_chk(is)) copyBytesWithOrgApacheLuceneStoreIndexOutput:os withLong:[is length]];
  }
  @catch (JavaIoIOException *ioe) {
    priorException = ioe;
  }
  @finally {
    OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaLangException_withJavaIoCloseableArray_(priorException, [IOSObjectArray arrayWithObjects:(id[]){ os, is } count:2 type:JavaIoCloseable_class_()]);
  }
}

+ (void)copy__WithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)src
              withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dest
                                    withBoolean:(jboolean)closeDirSrc {
  OrgApacheLuceneStoreDirectory_copy__WithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneStoreDirectory_withBoolean_(src, dest, closeDirSrc);
}

- (void)ensureOpen {
  if (!JreLoadVolatileBoolean(&isOpen_)) @throw create_OrgApacheLuceneStoreAlreadyClosedException_initWithNSString_(@"this Directory is closed");
}

- (void)dealloc {
  RELEASE_(lockFactory_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "Z", 0x401, 1, 2, 0, -1, -1, -1 },
    { NULL, "J", 0x401, 3, 2, 0, -1, -1, -1 },
    { NULL, "V", 0x401, 4, 2, 0, -1, 5, -1 },
    { NULL, "V", 0x401, 6, 2, 0, -1, -1, -1 },
    { NULL, "J", 0x401, 7, 2, 0, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexOutput;", 0x401, 8, 2, 0, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 2, 0, -1, 10, -1 },
    { NULL, "V", 0x1, 9, 11, 0, 12, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexInput;", 0x401, 13, 2, 0, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexInput;", 0x1, 13, 14, 0, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreLock;", 0x1, 15, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 2, 0, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, 0, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreLockFactory;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 19, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 21, 0, -1, -1, -1 },
    { NULL, "V", 0x9, 20, 22, 0, -1, 23, -1 },
    { NULL, "V", 0x14, -1, -1, 24, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(listAll);
  methods[2].selector = @selector(fileExistsWithNSString:);
  methods[3].selector = @selector(fileModifiedWithNSString:);
  methods[4].selector = @selector(touchFileWithNSString:);
  methods[5].selector = @selector(deleteFileWithNSString:);
  methods[6].selector = @selector(fileLengthWithNSString:);
  methods[7].selector = @selector(createOutputWithNSString:);
  methods[8].selector = @selector(syncWithNSString:);
  methods[9].selector = @selector(syncWithJavaUtilCollection:);
  methods[10].selector = @selector(openInputWithNSString:);
  methods[11].selector = @selector(openInputWithNSString:withInt:);
  methods[12].selector = @selector(makeLockWithNSString:);
  methods[13].selector = @selector(clearLockWithNSString:);
  methods[14].selector = @selector(close);
  methods[15].selector = @selector(setLockFactoryWithOrgApacheLuceneStoreLockFactory:);
  methods[16].selector = @selector(getLockFactory);
  methods[17].selector = @selector(getLockID);
  methods[18].selector = @selector(description);
  methods[19].selector = @selector(copy__WithOrgApacheLuceneStoreDirectory:withNSString:withNSString:);
  methods[20].selector = @selector(copy__WithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneStoreDirectory:withBoolean:);
  methods[21].selector = @selector(ensureOpen);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "isOpen_", "Z", .constantValue.asLong = 0, 0x44, -1, -1, -1, -1 },
    { "lockFactory_", "LOrgApacheLuceneStoreLockFactory;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoIOException;", "fileExists", "LNSString;", "fileModified", "touchFile", (void *)&OrgApacheLuceneStoreDirectory__Annotations$0, "deleteFile", "fileLength", "createOutput", "sync", (void *)&OrgApacheLuceneStoreDirectory__Annotations$1, "LJavaUtilCollection;", "(Ljava/util/Collection<Ljava/lang/String;>;)V", "openInput", "LNSString;I", "makeLock", "clearLock", "setLockFactory", "LOrgApacheLuceneStoreLockFactory;", "toString", "copy", "LOrgApacheLuceneStoreDirectory;LNSString;LNSString;", "LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneStoreDirectory;Z", (void *)&OrgApacheLuceneStoreDirectory__Annotations$2, "LOrgApacheLuceneStoreAlreadyClosedException;" };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreDirectory = { "Directory", "org.apache.lucene.store", ptrTable, methods, fields, 7, 0x401, 22, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneStoreDirectory;
}

@end

void OrgApacheLuceneStoreDirectory_init(OrgApacheLuceneStoreDirectory *self) {
  NSObject_init(self);
  JreAssignVolatileBoolean(&self->isOpen_, true);
}

void OrgApacheLuceneStoreDirectory_copy__WithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneStoreDirectory_withBoolean_(OrgApacheLuceneStoreDirectory *src, OrgApacheLuceneStoreDirectory *dest, jboolean closeDirSrc) {
  OrgApacheLuceneStoreDirectory_initialize();
  OrgApacheLuceneIndexIndexFileNameFilter *filter = OrgApacheLuceneIndexIndexFileNameFilter_getFilter();
  {
    IOSObjectArray *a__ = [((OrgApacheLuceneStoreDirectory *) nil_chk(src)) listAll];
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *file = *b__++;
      if ([((OrgApacheLuceneIndexIndexFileNameFilter *) nil_chk(filter)) acceptWithJavaIoFile:nil withNSString:file]) {
        [src copy__WithOrgApacheLuceneStoreDirectory:dest withNSString:file withNSString:file];
      }
    }
  }
  if (closeDirSrc) {
    [src close];
  }
}

IOSObjectArray *OrgApacheLuceneStoreDirectory__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneStoreDirectory__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneStoreDirectory__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreDirectory)
