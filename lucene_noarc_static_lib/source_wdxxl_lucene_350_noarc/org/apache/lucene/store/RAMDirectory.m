//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:wdxxl_lucene_350.jar!org/apache/lucene/store/RAMDirectory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/FileNotFoundException.h"
#include "java/io/IOException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/System.h"
#include "java/lang/Thread.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/concurrent/ConcurrentHashMap.h"
#include "java/util/concurrent/atomic/AtomicLong.h"
#include "org/apache/lucene/index/IndexFileNameFilter.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/store/RAMDirectory.h"
#include "org/apache/lucene/store/RAMFile.h"
#include "org/apache/lucene/store/RAMInputStream.h"
#include "org/apache/lucene/store/RAMOutputStream.h"
#include "org/apache/lucene/store/SingleInstanceLockFactory.h"
#include "org/apache/lucene/util/ThreadInterruptedException.h"

@interface OrgApacheLuceneStoreRAMDirectory ()

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                                          withBoolean:(jboolean)closeDir;

@end

inline jlong OrgApacheLuceneStoreRAMDirectory_get_serialVersionUID();
#define OrgApacheLuceneStoreRAMDirectory_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneStoreRAMDirectory, serialVersionUID, jlong)

__attribute__((unused)) static void OrgApacheLuceneStoreRAMDirectory_initWithOrgApacheLuceneStoreDirectory_withBoolean_(OrgApacheLuceneStoreRAMDirectory *self, OrgApacheLuceneStoreDirectory *dir, jboolean closeDir);

__attribute__((unused)) static OrgApacheLuceneStoreRAMDirectory *new_OrgApacheLuceneStoreRAMDirectory_initWithOrgApacheLuceneStoreDirectory_withBoolean_(OrgApacheLuceneStoreDirectory *dir, jboolean closeDir) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneStoreRAMDirectory *create_OrgApacheLuceneStoreRAMDirectory_initWithOrgApacheLuceneStoreDirectory_withBoolean_(OrgApacheLuceneStoreDirectory *dir, jboolean closeDir);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneStoreRAMDirectory__Annotations$0();

@implementation OrgApacheLuceneStoreRAMDirectory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneStoreRAMDirectory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir {
  OrgApacheLuceneStoreRAMDirectory_initWithOrgApacheLuceneStoreDirectory_(self, dir);
  return self;
}

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                                          withBoolean:(jboolean)closeDir {
  OrgApacheLuceneStoreRAMDirectory_initWithOrgApacheLuceneStoreDirectory_withBoolean_(self, dir, closeDir);
  return self;
}

- (IOSObjectArray *)listAll {
  [self ensureOpen];
  id<JavaUtilSet> fileNames = [((id<JavaUtilMap>) nil_chk(fileMap_)) keySet];
  id<JavaUtilList> names = create_JavaUtilArrayList_initWithInt_([((id<JavaUtilSet>) nil_chk(fileNames)) size]);
  for (NSString * __strong name in fileNames) [names addWithId:name];
  return [names toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[names size] type:NSString_class_()]];
}

- (jboolean)fileExistsWithNSString:(NSString *)name {
  [self ensureOpen];
  return [((id<JavaUtilMap>) nil_chk(fileMap_)) containsKeyWithId:name];
}

- (jlong)fileModifiedWithNSString:(NSString *)name {
  [self ensureOpen];
  OrgApacheLuceneStoreRAMFile *file = [((id<JavaUtilMap>) nil_chk(fileMap_)) getWithId:name];
  if (file == nil) {
    @throw create_JavaIoFileNotFoundException_initWithNSString_(name);
  }
  return [file getLastModified];
}

- (void)touchFileWithNSString:(NSString *)name {
  [self ensureOpen];
  OrgApacheLuceneStoreRAMFile *file = [((id<JavaUtilMap>) nil_chk(fileMap_)) getWithId:name];
  if (file == nil) {
    @throw create_JavaIoFileNotFoundException_initWithNSString_(name);
  }
  jlong ts2;
  jlong ts1 = JavaLangSystem_currentTimeMillis();
  do {
    @try {
      JavaLangThread_sleepWithLong_withInt_(0, 1);
    }
    @catch (JavaLangInterruptedException *ie) {
      @throw create_OrgApacheLuceneUtilThreadInterruptedException_initWithJavaLangInterruptedException_(ie);
    }
    ts2 = JavaLangSystem_currentTimeMillis();
  }
  while (ts1 == ts2);
  [file setLastModifiedWithLong:ts2];
}

- (jlong)fileLengthWithNSString:(NSString *)name {
  [self ensureOpen];
  OrgApacheLuceneStoreRAMFile *file = [((id<JavaUtilMap>) nil_chk(fileMap_)) getWithId:name];
  if (file == nil) {
    @throw create_JavaIoFileNotFoundException_initWithNSString_(name);
  }
  return [file getLength];
}

- (jlong)sizeInBytes {
  [self ensureOpen];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(sizeInBytes_)) get];
}

- (void)deleteFileWithNSString:(NSString *)name {
  [self ensureOpen];
  OrgApacheLuceneStoreRAMFile *file = [((id<JavaUtilMap>) nil_chk(fileMap_)) removeWithId:name];
  if (file != nil) {
    JreStrongAssign(&file->directory_, nil);
    [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(sizeInBytes_)) addAndGetWithLong:-file->sizeInBytes_];
  }
  else {
    @throw create_JavaIoFileNotFoundException_initWithNSString_(name);
  }
}

- (OrgApacheLuceneStoreIndexOutput *)createOutputWithNSString:(NSString *)name {
  [self ensureOpen];
  OrgApacheLuceneStoreRAMFile *file = [self newRAMFile];
  OrgApacheLuceneStoreRAMFile *existing = [((id<JavaUtilMap>) nil_chk(fileMap_)) removeWithId:name];
  if (existing != nil) {
    [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(sizeInBytes_)) addAndGetWithLong:-existing->sizeInBytes_];
    JreStrongAssign(&existing->directory_, nil);
  }
  [fileMap_ putWithId:name withId:file];
  return create_OrgApacheLuceneStoreRAMOutputStream_initWithOrgApacheLuceneStoreRAMFile_(file);
}

- (OrgApacheLuceneStoreRAMFile *)newRAMFile {
  return create_OrgApacheLuceneStoreRAMFile_initWithOrgApacheLuceneStoreRAMDirectory_(self);
}

- (OrgApacheLuceneStoreIndexInput *)openInputWithNSString:(NSString *)name {
  [self ensureOpen];
  OrgApacheLuceneStoreRAMFile *file = [((id<JavaUtilMap>) nil_chk(fileMap_)) getWithId:name];
  if (file == nil) {
    @throw create_JavaIoFileNotFoundException_initWithNSString_(name);
  }
  return create_OrgApacheLuceneStoreRAMInputStream_initWithNSString_withOrgApacheLuceneStoreRAMFile_(name, file);
}

- (void)close {
  JreAssignVolatileBoolean(&isOpen_, false);
  [((id<JavaUtilMap>) nil_chk(fileMap_)) clear];
}

- (void)dealloc {
  RELEASE_(fileMap_);
  RELEASE_(sizeInBytes_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, 1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 3, 4, -1, -1, -1, -1 },
    { NULL, "J", 0x11, 5, 4, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 4, 1, -1, 7, -1 },
    { NULL, "J", 0x11, 8, 4, 1, -1, -1, -1 },
    { NULL, "J", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 4, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexOutput;", 0x1, 10, 4, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreRAMFile;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexInput;", 0x1, 11, 4, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithOrgApacheLuceneStoreDirectory:);
  methods[2].selector = @selector(initWithOrgApacheLuceneStoreDirectory:withBoolean:);
  methods[3].selector = @selector(listAll);
  methods[4].selector = @selector(fileExistsWithNSString:);
  methods[5].selector = @selector(fileModifiedWithNSString:);
  methods[6].selector = @selector(touchFileWithNSString:);
  methods[7].selector = @selector(fileLengthWithNSString:);
  methods[8].selector = @selector(sizeInBytes);
  methods[9].selector = @selector(deleteFileWithNSString:);
  methods[10].selector = @selector(createOutputWithNSString:);
  methods[11].selector = @selector(newRAMFile);
  methods[12].selector = @selector(openInputWithNSString:);
  methods[13].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgApacheLuceneStoreRAMDirectory_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "fileMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x14, -1, -1, 12, -1 },
    { "sizeInBytes_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneStoreDirectory;", "LJavaIoIOException;", "LOrgApacheLuceneStoreDirectory;Z", "fileExists", "LNSString;", "fileModified", "touchFile", (void *)&OrgApacheLuceneStoreRAMDirectory__Annotations$0, "fileLength", "deleteFile", "createOutput", "openInput", "Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/store/RAMFile;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreRAMDirectory = { "RAMDirectory", "org.apache.lucene.store", ptrTable, methods, fields, 7, 0x1, 14, 3, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneStoreRAMDirectory;
}

@end

void OrgApacheLuceneStoreRAMDirectory_init(OrgApacheLuceneStoreRAMDirectory *self) {
  OrgApacheLuceneStoreDirectory_init(self);
  JreStrongAssignAndConsume(&self->fileMap_, new_JavaUtilConcurrentConcurrentHashMap_init());
  JreStrongAssignAndConsume(&self->sizeInBytes_, new_JavaUtilConcurrentAtomicAtomicLong_init());
  @try {
    [self setLockFactoryWithOrgApacheLuceneStoreLockFactory:create_OrgApacheLuceneStoreSingleInstanceLockFactory_init()];
  }
  @catch (JavaIoIOException *e) {
  }
}

OrgApacheLuceneStoreRAMDirectory *new_OrgApacheLuceneStoreRAMDirectory_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreRAMDirectory, init)
}

OrgApacheLuceneStoreRAMDirectory *create_OrgApacheLuceneStoreRAMDirectory_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreRAMDirectory, init)
}

void OrgApacheLuceneStoreRAMDirectory_initWithOrgApacheLuceneStoreDirectory_(OrgApacheLuceneStoreRAMDirectory *self, OrgApacheLuceneStoreDirectory *dir) {
  OrgApacheLuceneStoreRAMDirectory_initWithOrgApacheLuceneStoreDirectory_withBoolean_(self, dir, false);
}

OrgApacheLuceneStoreRAMDirectory *new_OrgApacheLuceneStoreRAMDirectory_initWithOrgApacheLuceneStoreDirectory_(OrgApacheLuceneStoreDirectory *dir) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreRAMDirectory, initWithOrgApacheLuceneStoreDirectory_, dir)
}

OrgApacheLuceneStoreRAMDirectory *create_OrgApacheLuceneStoreRAMDirectory_initWithOrgApacheLuceneStoreDirectory_(OrgApacheLuceneStoreDirectory *dir) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreRAMDirectory, initWithOrgApacheLuceneStoreDirectory_, dir)
}

void OrgApacheLuceneStoreRAMDirectory_initWithOrgApacheLuceneStoreDirectory_withBoolean_(OrgApacheLuceneStoreRAMDirectory *self, OrgApacheLuceneStoreDirectory *dir, jboolean closeDir) {
  OrgApacheLuceneStoreRAMDirectory_init(self);
  OrgApacheLuceneIndexIndexFileNameFilter *filter = OrgApacheLuceneIndexIndexFileNameFilter_getFilter();
  {
    IOSObjectArray *a__ = [((OrgApacheLuceneStoreDirectory *) nil_chk(dir)) listAll];
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *file = *b__++;
      if ([((OrgApacheLuceneIndexIndexFileNameFilter *) nil_chk(filter)) acceptWithJavaIoFile:nil withNSString:file]) {
        [dir copy__WithOrgApacheLuceneStoreDirectory:self withNSString:file withNSString:file];
      }
    }
  }
  if (closeDir) {
    [dir close];
  }
}

OrgApacheLuceneStoreRAMDirectory *new_OrgApacheLuceneStoreRAMDirectory_initWithOrgApacheLuceneStoreDirectory_withBoolean_(OrgApacheLuceneStoreDirectory *dir, jboolean closeDir) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreRAMDirectory, initWithOrgApacheLuceneStoreDirectory_withBoolean_, dir, closeDir)
}

OrgApacheLuceneStoreRAMDirectory *create_OrgApacheLuceneStoreRAMDirectory_initWithOrgApacheLuceneStoreDirectory_withBoolean_(OrgApacheLuceneStoreDirectory *dir, jboolean closeDir) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreRAMDirectory, initWithOrgApacheLuceneStoreDirectory_withBoolean_, dir, closeDir)
}

IOSObjectArray *OrgApacheLuceneStoreRAMDirectory__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreRAMDirectory)
